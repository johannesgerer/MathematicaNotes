(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    416945,       9357]
NotebookOptionsPosition[    409432,       9120]
NotebookOutlinePosition[    409773,       9135]
CellTagsIndexPosition[    409730,       9132]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.400929210867565*^9, 3.4009292120092063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.398510314283699*^9, 3.3985103195713024`*^9}, {
   3.398510441015931*^9, 3.398510462947467*^9}, {3.3985143415045586`*^9, 
   3.3985143450095987`*^9}, {3.398521740984488*^9, 3.398521752521077*^9}, {
   3.3985217882824993`*^9, 3.39852181555171*^9}, {3.4009291415078306`*^9, 
   3.400929145333331*^9}, 3.400929201454029*^9, {3.4009296583209715`*^9, 
   3.4009296754556093`*^9}, {3.4009315704805217`*^9, 
   3.4009315718725233`*^9}, {3.400931927714198*^9, 3.4009319473624516`*^9}, {
   3.400932073583949*^9, 3.400932081445253*^9}, {3.4009321169963727`*^9, 
   3.4009321472598896`*^9}, 3.4009322157684*^9, {3.4009505065592656`*^9, 
   3.4009505300830913`*^9}, {3.400952119208141*^9, 3.400952122913469*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{{3.40092966626239*^9, 3.400929675675926*^9}, 
   3.400929716204203*^9, 3.4009315788024883`*^9, 3.4009319476929264`*^9, {
   3.4009320819459724`*^9, 3.400932147600379*^9}, {3.4009421661363263`*^9, 
   3.400942182219453*^9}, {3.400947968409586*^9, 3.400947975329536*^9}, {
   3.4009505245952*^9, 3.4009505303034077`*^9}, 3.400951035760219*^9, 
   3.400951844663365*^9, {3.400951933481078*^9, 3.4009519421735773`*^9}, {
   3.4009521231337852`*^9, 3.4009521272296753`*^9}, 3.4009527973732944`*^9, 
   3.4009573813947935`*^9, 3.400960045185136*^9, 3.400986946838928*^9, 
   3.423235009189416*^9}]
}, Open  ]],

Cell[BoxData["'"], "Input",
 CellChangeTimes->{3.423235008119416*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "Enn"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Enn", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"U", "=."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"20000", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Enn", "=", 
   RowBox[{"0.27766906844567757`", "/", "M"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"91.35044102604739`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3.662751763692355`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1.6262886176197724`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0109728221664999`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"181.38339842774778`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";", 
  RowBox[{"U", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"r", ",", "u"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k0", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{"u", ",", "r"}], "]"}]}]}], ";", 
     RowBox[{"k1", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k0", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k2", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k1", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k3", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", "k2"}], ",", 
         RowBox[{"r", "+", "h"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u", "+=", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"(", 
        RowBox[{"k0", "+", 
         RowBox[{"2", "*", "k1"}], "+", 
         RowBox[{"2", "*", "k2"}], "+", "k3"}], ")"}]}]}], ";", 
     RowBox[{"r", "+=", "h"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"U", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "u"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "n", "}"}]}], "]"}], ";", 
  RowBox[{"x", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/", "137"}], ",", 
          RowBox[{
           RowBox[{"137", "^", 
            RowBox[{"(", 
             RowBox[{"i", "-", "2"}], ")"}]}], "*", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}]}], "]"}], "//", "N"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.3985218756881824`*^9, 3.3985219191606927`*^9}, {
   3.3985219918852654`*^9, 3.3985220416968913`*^9}, {3.398522085309603*^9, 
   3.3985221382657504`*^9}, {3.4009294268281007`*^9, 3.400929432115704*^9}, {
   3.400929552909397*^9, 3.400929563594762*^9}, {3.4009296013190064`*^9, 
   3.400929636078989*^9}, 3.4009297266191792`*^9, {3.40092992672692*^9, 
   3.4009299582322226`*^9}, {3.400930055882637*^9, 3.4009300853650303`*^9}, {
   3.4009301692456446`*^9, 3.4009301695961485`*^9}, {3.4009302167339296`*^9, 
   3.4009302179056144`*^9}, 3.4009302490303698`*^9, 3.400930319091112*^9, {
   3.4009306232184258`*^9, 3.400930657097141*^9}, 3.40093081024736*^9, {
   3.40093085565265*^9, 3.400930856283557*^9}, {3.4009309388723135`*^9, 
   3.400930953333107*^9}, {3.4009311171787057`*^9, 3.4009311189512544`*^9}, {
   3.4009311835541487`*^9, 3.4009311940892973`*^9}, {3.4009312787109776`*^9, 
   3.400931280944189*^9}, {3.400931345967688*^9, 3.4009313838822064`*^9}, {
   3.4009314145262704`*^9, 3.400931498296726*^9}, {3.4009315668152514`*^9, 
   3.4009315691486063`*^9}, {3.400931612110382*^9, 3.4009318853833294`*^9}, {
   3.4009319698247504`*^9, 3.400932089206413*^9}, {3.400932159908077*^9, 
   3.4009322664813213`*^9}, {3.400932296604637*^9, 3.4009324225257025`*^9}, {
   3.400932491044227*^9, 3.400932568495597*^9}, {3.4009480469024525`*^9, 
   3.4009480509382563`*^9}, {3.4009501872000494`*^9, 
   3.4009501898238225`*^9}, {3.400952782111349*^9, 3.400952787018405*^9}, {
   3.4009528198456078`*^9, 3.4009528395138893`*^9}, {3.4009533094396095`*^9, 
   3.400953359641797*^9}, {3.4009534391561327`*^9, 3.4009535207534637`*^9}, {
   3.400953598565352*^9, 3.400953626906104*^9}, {3.400953720620859*^9, 
   3.400954018639389*^9}, {3.400954216053256*^9, 3.4009542611781425`*^9}, {
   3.4009542956376925`*^9, 3.400954310859581*^9}, {3.4009546481646013`*^9, 
   3.400954660141824*^9}, {3.400954702632923*^9, 3.4009547530153694`*^9}, {
   3.4009547916208816`*^9, 3.400954808925765*^9}, {3.400954844506928*^9, 
   3.4009548454282527`*^9}, {3.400954982805792*^9, 3.4009550113167887`*^9}, {
   3.4009550529466496`*^9, 3.4009551439575167`*^9}, {3.400955185627435*^9, 
   3.400955233786685*^9}, {3.400955390321771*^9, 3.4009554033404913`*^9}, {
   3.400955489193942*^9, 3.4009554897247057`*^9}, {3.400955538625021*^9, 
   3.4009555563204656`*^9}, {3.4009573296804323`*^9, 
   3.4009574127899375`*^9}, {3.4009574637331905`*^9, 3.400957526483421*^9}, {
   3.4009575701061473`*^9, 3.400957656820837*^9}, {3.400957808719256*^9, 
   3.4009578335449533`*^9}, {3.400960054528571*^9, 3.4009600654743104`*^9}, {
   3.400986761752787*^9, 3.4009867652678413`*^9}, {3.40098695915664*^9, 
   3.400987049957205*^9}, {3.423235042732416*^9, 3.423235077320416*^9}, {
   3.4232367869624157`*^9, 3.423236790468416*^9}, {3.423236822746416*^9, 
   3.4232368459884157`*^9}, 3.4232368875944157`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw03HVc010bBnBEUVAwCEUBpVu6a9cSpbtjsMFGgy12BybYid2FAtajs7u7
C0EFFAsD452c+33/eT97hO1X5z7fc+5rmGQWRWWpqqiozNRRUfn3/7Onf391
9/U4TsQ818jx7/9yeseMCdu8Zz1nSInYdJ3MDLsv+T4fdGMv58iSSztivzgh
otl7+bGgg5xO8W/LHE974nN3ryi308c5650ueV21DECw/kq1O2tOcerdDx5T
9ODB0Kbfy/nJ5zgZ421iT94XoP3X9S9xIjxyl6gUB+J40L9fuMrp4pp0tMu9
wTi/q/0DOdPezj+Z3CMEzh7dtvtb3eJMD8yrGNUvDP9+W/kLnDm3wx1u/giH
amD7GXCOzYnLyr0XgbxrF74oP4hjLdkwdsjqSNyK15Dsr3zIafzi+HJPeBT8
lG/ec8Jjjs7gObIr76OwUT6TU5j6lJN6S8dnyJhozPh3OYyec1bHd/rEbY3G
kaMd5+lqveBEtMSue5wegw8TzYT8Xy84s+8lvHx6MAbmylcljS85+X0N6190
iEVC+8e94rwevnbyGN9YzLkyOffahTpOru1NBGTHQrFwvcmfg6853A7i3EOT
Y/FVebD2W+s5Hc+F9hm9MBbtl2tpA8fTKNu3c0UsUp92UJ7hG07YlJH762fE
ovzfrw9/y3mQKI1aXRyLs9nc6gbpO47WIrX320Jj8dM2I793TCNnxvHnebMG
xMKx/YCbOL06VF2pro/Bv6Mb6tLMWbT6ov/mDTFYOvLfEb3n1FQKDK7FxeDy
v6vf8wOncKBm5/UqMVBp/18Lp2OH4+/mrotG++GNbOHY7crs/tc7Gm6nB9Q6
fGjh2Hb71Df9YhSUD4/22eyPnObskxZ60VHIab+8Hzl1TxWnp92OxJTcfzfo
E0dz6MweOuGRWB2SbjHnyieOwjdyj+GpCCjfTHnAnzlvAg69+esUgX836/DR
zxy1fVdDHF3C0fjp3wP3hXMsuleX0d9C0fnOmoq3O75wJqhG7ZxVFQLj9jf4
ypkac2WIhjQYPu0PzFfOS7tOjqs0g9D+eGu3cn7Nr5C92DkIhe0XuJXz4N0Z
+TBhINoPt8M3juOEp/FNd4XY8O9yj/7GWfxugOhxhgD//XscPn7jPJ46j3+r
nod7r42KN8q/c2zyikpSsrn4eO7fA/ydk9i5q82fExy0P73xPzh/JuqEjdvt
B4v2B+IH53rDrdvuFd5gB/CTM+l26ccBJR5Iah9gPzn7/DrutB/simEu4xY7
ebRxpo+3VRUZOuHfp5/b1cZ5a32v15q7Ntjaukp5BX9xsu787Teo0Az/nqbW
Vb84Pi6r7+Wq9oPy4imP+Dfn4LOTXXoJuuLbvx+f85vzvWPH1m6iPZxe/y5v
xz+cWLV5GR2CNBR2/x6fMX84phcXndg5ra+i/fH+9IdT7nt/ebiTmSK9/QT+
cp58Kc4rW26jGN3l3wj/y5mQq/LU7bej4uK/0WevgoqDg506DHRVsOujgtpX
deeS4j0UdXf//QcV1BhfG681zlvBrpcKngZ3+D11tZ/i39XuYtgBGuaWDi4H
OQp2/Tqg49/kCmE2V9FeXio6YI7fyalqzTwFu54d8LX0Yqt+sUDRfrm6qSI4
yD+T90GoYNdXFV244ytFuYGK0PYTUIXRXp1nTc8HKdj1VsXh4LSKP1FBCtm/
4fRTFZedJxYGKoIV7Pp3xOODQyIXW4cqJv0b/iUdMXxoEPdgWZiC3Y+O+HBn
a/Lkt+GK9sN72xHfRux6/aoyQsHuTycIwsrTHIMiFf/e3TajE86/TN4+vyVS
we5XJ3wY2nj9Y0WUgpWvTjAJunGR7xatYPdPDa2r1McOuxGteLdj6r7ECDUM
E5/fPTQvRsHupxo8auTdXVRjFZ3aD0gNUKSYrlscq2D3tzPuVWDwfos4Rf/i
fxWvM8Z1a9ufXBVH97szGj0/i+f5xiv+VfMBtZ1R6pTYByfi6f53hk+nyZnZ
/ARF+z87dEHF3Li5304k0PPQBeqNt1e/80tU5LdPIF3AEW+M8DyQSM9HF0RL
jujetUpSsPqqjscr+nRRLE1SLHr774TU8XXhjPfvOyYr1imr07jF6uj0Zppn
an6ygs0/6nhw0qJF7UaygtVjDegH9Txd55yiYPOFBu58Lv/+dV6Kor0cTNXA
ktxjco83KYr2cqXQwNU7iydt8E9VsPqtgZCwsADf+amKf2fX3asrHg1aY/7r
caqivXwP7YorJwy5ry3TFGw+7IprX/aYteanKVi974qv+d0eO+xJU7D5qRsm
efu3zm9OUwRY/ZtxumG0btDIftbpCjYfdsPRQfcfXEtLV7D5oRuOWbztWrUw
XZHVXrA1UXutMvuUIl0xpL3AaWKtr2F156Z0Rfvtm6eJ1IrtFcc1xAo2n2ii
f7OG7TIDsYLNh1qoF47sN99OrGgvv1wt8HrvWLjZW6xoL/fjtGDtd//dc6FY
weYfLejO4exGhFhx9d/bfdGC+Z0L888niBWP/l1+p+54xt1aMCZdrHjz73HN
745jf3+GpUjFCjZfdcfOPuMzC2ViBZt/u0M90+/3AblY0aP9AeqBVxMHLXdV
vmbzfw8MuTTmdnOWWMHmtx5Q6e1b1JAhVrDpvQcucLnB5ilihWl7AeiJ4olF
uVtjxDR+ekLLc0PzyGCxgs1nPdGYv1BnKcQ0nnoiu2qLZ1c3sYLN7z0xLv/T
9TsWYhpfPfG9RL3kj55YMbh9QukJq4a2kzM7iWm89YRKWaXu55fpirj2X+iJ
sB/v+DsOpdP46wU19wWt/LnpCjZ/9kLldXufc6npNB57Yd+dGCHHLl3RPrwK
e8FNvm94zdc0Gp+9cOetVZjnf2mK9vK0vRf2l3YdfnlSGo3XXhhTHVk1kZ+m
YB7rhX7TnjWnqabR+NXGqU8XBw45lqpg87U24i4dWHRmZCqNZ23MbzMXSx1S
Fcwz2ng+uaU+8WUKjW9t2D3ZsnRfRYqiKvFfwdNGwymtbyN4KTTetVFjtWRN
9ftkBfOYNrbxm31GL0um8a+NXzumz77CSVYwH+iA4+OWcqwuieqBDlIOnZ4b
PyNJ8eDf5Q7Rgb/b9q6blOOd1Qcd2FzccrHqTKKi/t90MFMHwqbp1+dk/L9e
6KDnm1vWnLYEBfOkDt6tX/fmTnkC1Q8d2OfF2KdaJyiYR3Qx9dTQ3i+OxFM9
0cVNrSlXC0LjFVrtE4ouHv98PqHHkziqL7rYuHFXws3cOAXziy7GetfOPNka
S/VGF679C9A0MVbRPnz360K38MGeZI1Yqj+6OHC8Us1oQYyCeUcX9XrqhX56
MVSP9JBfp6J9dlm0on36sNVDck/f3mf7RVN90kP0bb8Vg1ZGKZiP9GBQMrE2
sV8U1Ss95FYsnai2LFKR0n6D9dAQH6OSoBtJ9UsPR+9+80qdH6FgntJDoXG2
mYlGBNUzPay1O56S3jFcMaL9gvXG9K4Txth8CqX61hurP0yIPvg0RMH81RtB
ztPGml0IpnrXG8ME/sMm7wtSLPj3cQt7Q2tUw6qmpYOp/vWGR05Hv9FjBymY
13pD0qXraE56INXD3lii4pQSB5GifbrW6ANRofOV2wOEVB/7oHGlZfmN33wF
810fXFZkhEke8qhe9sGf6bGTKqu5ivbLO7EPnH2mTls7H1Q/+yD50/v+zdcD
FMyDffB99sTEkRP9qJ72QeaKP9M0HHwU7Vz+3gchS94ZXXvgSfVVH/rVHoGf
p7grmB/10c9j+s1Ke1eqt/oo7zzOW/W2k+LHv8epWB+cv34+U77YU/3VR92X
4TN7cawVzJv6mPnxnqvqTDOqx/qYMbl0b9haI4VOO8j1UWO/b+tGe12qz32x
26uLYXiJmoL5tC8MNY5WlHBuH2f1ui/Gdy/VWp2hgoHtBa8vfgo37tPcpKwT
7fW7L25EliRZ6xuQZ/tix/WHaqcFprSe6Avp8ddfB/+yBFsO9UWkSu7zpCo7
sPreF8+CTPzjXJ3Iv/1QHvhpU+kcF7B63w/7L5QljqhzQ3u5COuHnPrgIRa+
nmD1vx9yb1wfIV3gTV7uB9W7+5N61vnS+qUfnld6T+jsEYD2tz/bD6IuvxK1
+aD1WT/cvn9wpXkul3xtgDPrbiXbLOCBzRcGGL4s3KZnNR/t5dHfAG8OlVw6
r1wvsvnDAMu//uTy2/7vcQNo7k09U2QYSOslA6zb//5sgN8g7P13OasNoLal
18fKpMFg84sBtI0zrGaMDCK/G+BCzs3pL8uD0V7euhtiu86drI07Q8D8aogh
4sKYY6dDab1riHvbIgxNH4WR9w1x5Op7xYkP4bQ+M0T+8zPHAydFgPnWEClm
GxqOaUTSetQQnlMW7OUsjKT1gSE2jui44FSfKIxqv4GG8OiUrS9YHQXmXyO0
Fuv9OGwSjWn7/hVsIzz1Sf9jsima1hNGuCcf22uoVQytB40wzbvMa+vWGDAf
GyHMZ8aSI9axWPuvvOwzQsU1Tt6WLbG0/jACxzNUJ9siDjv/TV/NRhjZvZP6
p3VxYH7uD1eJ7JnQKB6H/h2OTX/EJvUNSVkaT+uV/jg5JMjIqWcCrT/743nB
loCjMxLAfN0fG18LD7b9TqD1d3/Il83f/XZIIq1v+mP4EPvMSfWJYMvx/hiY
2uh4LCEJzN/9sfzRtgUrLyTRfsEAqIz16avnnUzroQHoahlUarklmda7A/A2
RDDxkk4KmM8H4IKmh47KhBS0Tx/zB+Ckz14PxZsUWj8NQHbhVg31yFTotU8Y
A/CwW+LZW7WpYH4fgMJY45MDjNLA5l9jSMrSCt5MTKPxY4yVxtHRtq/SaP1s
jGNdf/R9yU+n8WSMwW4vJ2luSAebn41R3E3DNVpFTOPLGH1PNqbGOYhp/8EY
F25EDZ6XLKbxZgxzvdZZP2aIweZvY6TljjyxZL+Yxp8xdHTC1kifisHmc2Ok
HN73KEM9g8ajMT6aTePOdc4Am9+NMWCG8pYkZtD4NEbGskd1OZMyaP/FGCJB
bYv+1gwar8aI6z/jxMcrGWDzvzEWTPdJ/fwpg8avCQbMfH3HsE8m7ReY4PTQ
bYMLfDJpPJtggtfql69SMsF8YILnY6vvThifSePbBKVjdsqwNhPMCya4vPHt
S/PjmTTeTfBRPWed/dNMMD+YYEzZ+i7xvzJp/Jtg2aviaRv6SsA8YYKHud8X
9/KQUD0wwcGjc49XRkrAfGGCX9arKiLyJVQfTODSVrbbeLqE9q9MYL98a23P
tRKqFyZYW9o5w7hWAuYPE9S3yWXhVyVUP0xwQ8u6fHWdhPZHTDH2tN7+rj8l
VE9MoXZOsnlJdyntJ5mi+/qZUVxTKdUXU1z7Y761q7sUzCumqFC8WfdJJKV6
Y4rorqMEP+KlYH4xhZtDxJr+cinVH1NUztx5LnOklPZjTLFoUN7LM9OkVI9M
8dDyU99BFVIw35jioJbOhrdrpVSfTFFd1XJk+w4pmHdM8cvs1Y6yGinVK1M8
DUo5NUchpf0/U3yWXk7efUFK9csUkcOn32u5IaX9H1ME7dm4LuaBlOqZKbQe
Nw18+ExK+2dmWHH0wPdJr6VU38yQkHN2esg7KZiXzLBxryDL572U6p0Ztg6f
bxPyUUr7gWbY39O6ZPJnKdU/M2RVLX7x5IuU9pvMcPPiYOv0r1Kqh2aoGz71
Z2fla+YrM/R876V3V/n7rD4qj6fzJ78ryvdn3jLDqN01/s3Kz2f10gytY9+/
82iUgvnLDLaDRQN21EupfppBdGXR0aAXUtrfMsOduOM7ej+SUj01w9Opax73
uC2l/UIzvNd9JfS8LKX6ao5fx3/WzT0lBfOaOUytv/6ne1hK9dYcGvfljy7v
kYL5zRzfYxLCajdKqf6aI0fQx+HOMintp5nj5ybHZVZzpFSPzVFuGrh3z3gp
mO/MsbikU2VhsZTqszle3f6yJCtDCuY9c0zaWXJxcaSU6rU5lplOH67ClYL5
zxyVLbfvb3aUUv02R2zAeJ/ZRlLavzNH2Eq1+h1dpVTPzXFOx8te65uE9kfN
kZShLdnzUkL13RxRXlteV1yRgHnRAm5VarpHleON1XsLGN0dEG2zTkL7vxZY
xNmn+WSWhOq/BXLrLPbcL5HQfqEFnH5O3GWUKKH5wAKP2/gTdnEkYL60gPn1
2MpZFhKaHyyg1+vdgv1dJWDetED+cPkd+w+ZNF9YwCYlprX1ZibtZ1vgZanb
RJ2aTJo/LCDaU9px6rJM2p9Uvv6SpxtUmknziYVynlAPliVn0n6wBazffeY9
8c2k+cUCRf+lrtxlkAnmVQtcv/629cHPDLD1ryW2aC5vkzzIAPOrJa57V0WF
1mbQfp8lmtq2b126KIP2Qy0h/9Rzl6Akg/Z7LbFZZah2XGgGmG8tsfa/oHlX
rDPA1suW8O1Wf39nxwww71rixJ2IXV+fiGl/3BJr2gIubKsVg/nXEorU1qaL
C8S0v2iJen3vR0k5Ytp/tcTfBsfEZK4YbH1tiR97Yhyu6otp/9sSIbmHB+U+
Swdbb1ui8Utwd/M56WBetsTIxT6Dr3img62/LZF/P2V5zss02u+3Qsffiet/
laXRfqYVojpP6jbbLY32e62gZlo5Qe9xKu1vW6FN+njn+smpYL62gs7TWQJ3
61Sw9boVxv/t2Hb9cgp52wpn06bPGF2cArZ+t0L9JbWNLkpPMH9bYcFxDS2V
6mTaP7XCF+Ppk17HJpPHrWAuqT5Z/zUJbH1vhYSfnyq6LE4in1vBzGbJ4WDX
JLD1vhVeWVz5XXM9kbxuhaxloyxDCxLB1v9WUCnu8reXRiL53QrW2tHRGhsT
yCPWWP1iTItHQAJ5xBq8/mc3rrkXTx6xxgGjkRxBcTx5xBqVj6sW2KnHk0es
0fAmMSdhbRx5xBprNzasuOoeRx6xxq0XEd8WXoolj1jD7t7LiM3iWPKINUIL
TEt7fI0hj1ij++sdwhszY8gjyn+/qz39g0EMecQaU2ec1CrcHU0escaz1U93
RyCaPKI8Hgtz35U3osgj1pj45eKUyMwo8og1hGJZ4shPkeQRa2hFXy7rOTmS
PGKDCfub3xr3iiSP2GCp5SnuzrUR5BEbvLe2E9cMjCCP2MDv7yqT6SPCySM2
8O+g7rdzQRh5xAYXpDnr6reFkkdsYDdt4nO/kyHkERsM2nJqas2DYPKIDWx5
tr2TW4LIIzaY+uWbvkvnIPKIDfZaztTiGwwmj9igKqFf8WLH/69XbHDVYO1B
J34gecQGFrXTkgzjROQRG7wcMft0ulxIHrGBZNM0sWrp//sRNng+0LeiWxmf
PGKLHw22Ryev5JFHbLG0LMO9aAeXPGKLipCg6PuHQR6xRauP6oXZFRzyiC3u
OgdLxuz1J4/YYopJ6s8Fl33JI7YQThvb+WGDN3nEFv0y33+SqnqRR2zxCBuM
YOhBHlG+Lnx1d7S7G3nEFvum/BIbh7mQR2xx3rblAzfbiTxii4lpg6IetNmT
R2yRv9BKlGprQx6xRX1Yp4t2CRbkEVvoj0u5Ip5mQh6xxUmbAXCSGpBHbFE8
eMmrh0d1yCN2cOjbIPxoo04escNKo41ZHfZ/5DCP2EG/aLHmkcdvjzOP2GGp
6t4Re8+p0X6OHYotjKwul2lTf8IO4q4q6f6u/Wh/xw7XLk1zaWsyVjCP2OFj
b0PVF8fNab/HDtuO7N/qXm5N/Qw7TDk78O5TiT3t/9jBPM3WKaOfk4J5xA4m
Z7eZSFRdaD/IDnsM9CLfvHWl/ocdmvssePXqujvtD9kh0aef9uBaTwXziB1S
as7YdFvtTftFduDzmsuMJvtSv8QeCy/Idw/N9qf9I3vkdzph0CGIo2Aescfn
n3sPpSwB7SfZY4ZNvdugGVzqr9gj8F1m3dGRPNpfskeoz+naAzK+gnnEHmtD
R22ziRfQfpM9wo3uHNMTCakfY4/NhQ7qQ91EtP9kD5uYxkpf00AF84g9Jtqs
3JPTYxDtR9nDpFvX7G9t/+/f2OPoxZgOzxoG0/6UPYIyfl3odytIwTxij0vP
vuts+i+Y9qvsMfPZpYBRW0Ko32OPhiHl1fMWhNL+1UAcXdr7w8tRYQrmkYHo
aP+8oEgcTvtZA6Gx31S81CyC+kMDMUfur5i7JIL2twZinCzSVl8jUsE8MhCI
KPzmOiaS9rsGIr102/SnTZHUTxqIVBULf720KNr/GgjLBb2n37kapWAeGYh5
KldvGnKiaT9sIOQ7j6x4szua+k8DsaNiRLJH/xjaHxuIAfyTyzrOjVEwjwxE
rymLHoe2xdB+mfJ4r/Sr1c6JpX7VQFTMOX4s/G4s7Z8NxB1jxwWq/Djaj3dA
wr6Uq9Z74mg/zQGVp6ebKvrF0/68A05v8PU7Oy2e9tcc0DQj9YZXSzzt1ztA
UW65Ri8pgfbbHOBfbp+VdCqB9u8dIFsg/dDJPpH23xyQ7GipqbMokfbzHcC/
6bBwclsi7cc5YEHFxqTIzCTa33eAnkbf4HHnk2h/zgFZd8uCOzkk036/A35o
FQTXlSfTfp3y+DPWwuBbMu3/O2CdaanVlqQU2r9zwADtS6rT/0uhfoADrFTv
P6oekEr7eY74HCg+6TYplfoDjrj4d/VllZeptL/nCDWzwD76vDTqFzhiV/G8
M6PWpVF/xhFWNuYdTFT+3z9wROFqj5/d09IVzCOOiCof0oAj/+8nOEL3aIcp
D7v9v5/jiONHLlw+4C2m/oIjKrZZjHCQiRXMI47o2zNni2iRmPoNjjDOtZzz
S/H//o8jgu84RIc3i6n/4AjB3oUOAX0zFMwjjrhgvir6vCCD+hGOuL76/s+m
ogzqFzmik2138Y4VGQo2/zrh5EXOSdUzGTR+nNCyZ4fk0/sM6hc44T/xxVmj
9TNpPDmh6kbouKXcTOoXOcFMbjw7ODeTxpcTkhslfxeVZ1J/wQlbJMWOQw9n
0nhzwqSGm0WvX2Qq2PztBO34kL6N6hIaf04QdL4+Y4qjhPoRTlgVO7nf7lgJ
jUcn9PKpdc0dI6H+lBMMD7R41VZKaHw6wcPjSfmiMxLqXzjh98/YXR3eSWi8
OsE5OPXbby2pgs3/Tri03/DVTGcpjV8nxNm/er0uRkr9DidcHGg2atBIKY1n
J5gcLtYbu1xK/TAn3IyZ4Od3RErj2wlFTQOKZj6WUn/ECYuqA1zEv6U03p0g
//Zc65RRloL5wQm3LpjO3eufRePfCQfOuAVYp2ZRP8UJrlsSq2zGZlE9cMLQ
l6/GHViRRf03J1y1dfU6fzCL6oMTnjXtGyO9m0X9F+XxHLn5eubnLKoXTli6
R6uPe89sBfOHE9yPPqmS22dT/VDe/y//pZsNyqZ+jTNaz1uek0qyqZ44Y4dz
2WL78dkK5hNnjLkTW1q6LJvqizN+9K+3CqvKpv6OMyYOmhu95VI21RtnzEgp
q55Wl015A2c8ttXUePsrm+qPM964mGve0JVRP8gZ/lOuTPC3l1E9csaCeXVW
DnyZgvnGGeGt5pfWJ8qoPjlDN9jSdWWRjPpHzlA9lWDfZ5qM6pUz4uo7TO+9
Qkb5BmfEuHhrL98to/rljH1VdZvWnJRRv8kZ1Qur9a3uyqieOcNvrbnQ5a1M
wXzkjGNXC9UVbTKqb85YtXMh77qWnPpTzlBcDLybOUBO9c4ZT8zVto10klOe
whkpYz+v786VU/1Tnu/O97utIuXUz3LGzy8TD58Uy6keOuMAnlU/K5IrmK+c
cTj9dcX48XKqj85Y768dtHaOnPpfzjDpMfU6d4Wc6qXy50d9McneIqf8hjPG
7T7gq3lATvXTGX/mbDNyU8ipX+aMNTsCLz65JKd66oxk+XyRxj25gvnMGVHN
6itqXsipvrqgk5Pi6utGOfXXXLDpHT4u+SqneuuCifPLe178I6e8iAs2ergF
TOiSQ/VX+fvT9efV9MihfpwLDBet613cJ4fqsQvSzqxq2dE/R8F854KSjQGe
uRY5VJ9dMLy6v/oOuxzynguKBK5TCp1zqF67oIPjlYsHPHLIfy6Yu62i43jf
HKrfLmj5OyHmIieHPOiC5sgH9cv5OVTPXTAq2Km+SZRDPnTBj/tJE08NzqH6
7oLd94peG4XkkBddEHLyZOCv0Byq9y7QTHr2KC08h/zogoEh0+4LI3Ko/rvA
+vaGEfuUr5knXbAtKfbjOuVrNh+4QNbr0bQ+ytfMly7QnrNsqLby/dj84IK4
uB6/ypWfx7zpAr8ZDzOXB+fQfOGCJ5Hbmy2Ux8v8qTzeCk6dl/J82Pzhggyx
bMFNXg551AXLy1r9Pwfk0HyivL5OZ3xW+uSQT11g4rn97kX3HJpfXDDr/gjJ
ZKcc8qoL/I0/uZ20zaF+uCuO5t+unG2eQ351hdX7k38eGeUo2HrYFYvMgrfW
9M4hz7pCPf7p937K54Gtj13hp38lVEP5vDDfuiK8htd5svJ5YutlVww/iCnT
lM8b864rzsSusNJtklO/3RWCpg/xDi/l5F/l+43cXnpb+Tyz9bTy89S+fet8
RU4edoXE/qT32RNy6s+7InHS/h3aNXLysSt+a9gcadomp7yFK15WudyLWS0n
L7ui/NTc4uAFcurnu6JzdOWP65Pl5GdXeB8dVv96mFzB1uOuaNWu3jk7W06e
dsXPZZtPHY+XU//fFUNcLTZOGyQnX7tC5cWa84+95JTvcEWsU49dZ6zl5G1X
lNT+vAp9OeUFXLGnLHdXWBc5+dsVGw83nP/wVaZg63lXvD81YoN5nYw87oru
uhWK5hsyyhco33+i7abg4zLyuSu6nl52L2CnjPIkrrj6Z/2zc8tk5HVXpLkN
FTVMlVEeQXk/rlQsWV0sI78r39+wMbkxWUYeccPCxzVmN0Qy8ogbGo7NGBvu
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
q0Ysi9moXD+1c2AwF6iSDq36IWP1P5SLGbc2Fs17KmOejOSi544T5V6nZGw+
iFW+//c0y31bZMyXCVz0mZY07HuZjM0PKVyk8i6d7V4sY94UK6+XVEX+JVrG
5gsJF+8mTVy/zVPG/CnjImKP+gkHAxmbP/K4cK0s6z71TzbzaBEXg8443d32
gta3Q7hYmB8tqTydzXw6gouGF5M6yLfQereUC5sFY3+pzM5mXh3PxV9T98q8
fFr/TuIibNsVr61h2cyv07gYfHCpdq0TrYdncWE2X6d0mXY28+xc5fPg++FI
yJcstj5ewIXXMTWL23eymG8XcTHeOU3VsTaLrZeXcXHqve261GVZzLuruPha
fT5MPDqLrZ/XcmF8578Ez6Qs5t8NXFyPOKT5yieLrae3cGGiVX5QYpDFPLyd
i2HfhNsPtUnZ+no3F2+cfji+fiRlPq7iYqT316X1R6RsvV3DxWWDrU7HVtL3
6Q4pXy/fMCh/jJStv//j4kHiKoePSVLm5xNcnNHNcQ71kbL1+Bnl/T/doXJi
X/r+3Xku1t4af6Hsu4Stzy9z4R6q/7vwnoT5+rry+mpZzLatoe9f3ebi5te+
imOLJMzb95TPe99Z7+2GStj6/REXyd+Ns4ZESpi/n3FhvWPH0HJH+r7WKy4q
jLrnztGSMI/Xc6HDDVwmbqTvg77jYhy/KKzHhUzm8/dcPDxT83jZ5ky23v/I
hZpudsXvKZnM61+50Ep9fNI/g74/+oOLuKZ5RxIDMpnff3MxU6J+NdIgkzzC
UxbghiDL7xnkER7KKp9Pvnc7gzzCg1XBwbNZ+zLIIzws2BoouzE3gzzCwx2z
UdX9cjPIIzx4DxGo8kQZ5BEeKq1r1wSaZpBHeDht9O6R3R8xeYSHgB1q3T48
EJNHeIj7wBm3sFpMHuFhQ4/HU3QWiskjPEwaa1M8PF9MHuFhkPuUitpAMXmE
h0ytcM5DUzF5hIeouh+zjrTRfqYXDx4Szaap+9LJIzwcmvIgsJcsnTzCQ3+d
4cgwTCeP8PAzssPo4TfSyCM8OM3ctShsehp5hIeFKw54NPukkUeU/74+WTXq
Qyp5hIfYaS0rxm1IJY/wYF1+fkNxfCp5hAdVA47CrlsqeYSHHN0DFXuOpZBH
eDhzYPaJXyUp5BEeDupZN+tYpJBHeHC89/HQ13vJ5BHl/Todcmn97GTyCA/6
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
9Rcc8WFvMw/yCCs/nTtkyH/0e7ALZei6+kXBvvJ+5BEZZvWZ197pRV/yCOtf
R0L7jbnpTh6R4fvclXvOnepDHpGh9Zn+obX29CaPyHClZMlHr3Vu5BEZLh6Y
rbrUqRd5RAbP5mtm1qnagzwiQ2L5srr9nriSR9j1JVwbITnalTwig+rMjr3K
Fc7kERkGvs2/IhzTiTwiw5s5Y+u7B3Ygj8jQa9XB0gYDnMgjMhx9O2r2SZfW
5BEZbi1cHqh+3ow8IkP7329q31zdmDwiw8z8yw5zDtQnj8jwz3dBfFSvGuQR
GVreP3VIKqk4ynlEhmP3vu6blFZ6lPMI6x8h0SbvqHvenEdkqGK9nBny9rs3
5xE23mL+Li4bX43yNTKU9xl0tm3NepSvkSEz/pl85blGlK+RoY5r7eNO9ZpR
vkaG6PPbns5TtKJ8jQyBXuIXXxe0o3yNP5Yv6pzuVNae8jX+6Dtr7M5BDTpR
vsYfEceGr/Lr7Uz5Gn8UfpjxxlfVlfI1/oj5EdCzr9mV8jX+aKNbW7Phou6U
r/HH7fyA5vcO9KR8jT9O980bL0h2o3yNPzymyLY1H9+b8jX+EH1/H/NgZh/K
1/gjVvHz94JV7pSv8UfVo/KTQ3f1pXyNP9LraOo8PtaP8jX+6P70aRf91f6U
r/FHVl31qE9PBlC+xh95O9O7R332oHwNO172wcOnqgyifI0/vrjcNjg2Hkz5
Gn80dHdeo+7oSfkaf6hmWlZPcPeifA37/M2OZ5b5DKF8jT/ub7kcv1bF52v8
Uef299Si3qB8jT+2/lk1tKAAlK/xx4jWkzUrhg6lfA0736t1Aiznh1K+hv39
mjvffBTDKF/jD7PDlXvVS4ZRvsYfjw423X8o3IfyNf4Q6hv2i3nlQ/kadr7i
mKpV9MMpX+OPwKLvl+d8H075Gn9kv3wvaJLuS/kaf8x3y2udXWME5Wv8Uffh
858fckZQvsYfijemWQJHP8rX+KNH16kz5i73o3yNP6oFTll9saOA8jX+yB/W
ZszPrQLK1/ij8ukBFxz7CClf44/D76sM71AgpHyNP0yNyua2hYjyNf4oubsh
ofZZEeVr/HEktK39uVRM+Rp/7O+bbdx5Q0x5X39ETQn6L36khPK+/tB2FLyu
/1RCeV9/bJ4nLFoXL6W8rz86uy4Odv4gpbwvKzfdqVxollHe1x+1zOKwL2wc
cR7xR0jUqH5emf6U9/XHhSkupwZWk1Pe1x/i8OPVxX5yyvv64+LY8IHKaXLK
+7L6PFR7oP9FOeV9/TG5/fOHQx0UlPdl9fOiX3VXlYLyvv54YYqe8t9CBeV9
/ZFg++l5946C8r7+mPloZdW1rZSU9/VHeWm7vaGhSsr7+mOOY0J3hzVKyvv6
o5Eua/i+Z0rK+7L+8n7bHbmzivK+/uz7bJdTj+JVlPf1R1DvxKeRuSrK+/qj
1Fazwd0yFZdvrSTHj4D9nX3daL/HKnKUiqRV1hvVXN6V1YtdeCKjfI+aG081
5PC61Wuc53c1l3/9T46Yv1eumwdquPFVS47csCoRa8douDxsHTl+dx9W+USh
hhtv9eSo6OM258Y/+j3mBnIE3c8pKxmq5cZfQznq9R/y5epELZeXbSyH5Itv
+uHTWm48Osox1lCcsuQ/HZefbSrHw0NNV8ULddz4bC5Hx1lzylym67g8bUs5
rgafHfDggo4br63lyJTFjMysH8Dla9uydhQM6t9CHsCNXyc5Wn7ov3HNnAAu
b9tBjg3rk7NbXQ/gxnNHOZ7NbnRkShP6vcLOcjRfM6bDM00gN767yHFvmtMC
t0WBXB7XRQ5cWvo15U4gN967yfFo/4Z2K1sEcfncHnLsimz7rTAoiBv/veQo
KqiqvrQsiMvr9pbjk93S6vL9IG4+6CNHNfcC12NtKL/bVw6h0C1iTehIbn7o
L8eU8oiVxlUjuTyvhxy1xeXH3R+P5OaLQXLYeu7PLXUK5vK9nqw+wmcPnhwR
zM0fQ+TQ22cpHNcGc3lfyDHnzbOL858Gc/PJUDnMfx/OrtoxhMv/+sjRouTL
6IioEG5+8ZXjlnX/qB3rQrg8MBtHyHs84s2zEG6+Ecpxt6/gTZNOoVw+WCzH
xmmvBvSMDuXmH6kcMxo9dOi/PpTLC8vk2FY1Ttu9NJSbj+RyjEl69tqhUxiX
H1bKcbn7zW3PosK4+UktR8HfRxnr14VxeWKtHD5J5/1Uz8K4+SpAjhpxhz9Z
G4Zz+eIgOaK2VLT06h3OzV/Bchz7ud/hpzycyxuHyJF2qNmpXH04N5+FyeE8
QOmsmR3O5Y8j5LixZGfXbzvDufktSo6tX7IOT78czuWRY9h46i+43vxDODff
xckxu3986PL6EVw+OUGO4RtM/k17RnDzX6IcZxrXXjxFGsHllUfJserDTZey
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
TeQRJUb7dMt3OW0ij7C/z2+RX/OSiTyiRNTxFVmPbpnII6z9r0xy3/HIRB5R
YvbsNfmmVybyCKvPiuKa7p9M5BElSiRP+rz+aSKPKFG58qnei6qYySNKZF0a
Wd2rjpk8wvrP2gXb7zY2k0eUeLo8ylXf2kweUaJl7cIxfzqZySNKrAtfuSaz
h5k8osSCwbWW/+tnJo8oMUpbLck0xEweUWJZ1rL6T0aYySOs/x5/NMXX30we
UaJhlZfX1+jM5BElPIIvfPsWZiaPsPZ7s/Pd0HgzeUSJZpf2HZisN5NHlHjd
tU7QcZuZPKKEsOX9K18zzOQRJb4VhLRxyjaTR5Q41/i8t88cM3lECXHHYI/Q
JWbyiBLDLwf+Z1hjJo8oIX1ea/uYLWbyCGsfxwKX8Xlm8ogS1rID42wFZvKI
Ev/dDNuSeNxMHlFic81a29XnzeQRJVYtaJLd/6qZPKKEQfPSy6HETB5hx3v9
pvjJYzN5RAnTvhz33Fdm8ogSTo+HmUd9NJNHlDg1PHNO5x9m8ogSF23nsm79
M5NHlAg+sXBk+n8W8ogSD5qk1XZqYCGPsPqt+2rBgaYW8ogSgW8m/RW0tZBH
lHg488Hwq50t5BElFlqmJSh6WMgj7Hz2dk0+39dCHmHt8TFQPtDTQh5R4mjo
qcZrfCzkESWSChsdqCS2kEdYeym+egUoLeQRdn6PWm/cFGghjyihzx3+6X24
hTzC+l9KV6ee8RbyCOs/AdnuMakW8gg73+o9us+3WMgjSoRMeFD70DgLeUSJ
tYMSrpRMspBHlOhYbd24j9Mt5BElFPUjG/+bayGPKDHg2YS51ZdayCNKOEY+
rai6xkIeYePrUJz81yYLeUSJCYm/Zr/aYSGPKNGz39Qjl/ZayCNKKDv+K9l2
2EIeUWLaWF1p5kkLeUSJ2JPZD+VFFvKIEjXz5p1vetVCHmHt62bdeOO2hTyi
xNuRgyzTHlrII+z8zC8Hejy3kEfY9ZXO+PzgrYU8osTe3l5rxny2kEfYfFGl
gV/DnxbyiBK7m7R5vvKfhTyiRCePKWM71bCSR9h8J02uv7aulTyiRCX8XNas
sZU8osTVyhrnyS2s5BElIqbu3PGmnZU8okT/k4P7C5yt5BEl5q9xO7Kiu5U8
okSPauf93vaxkkeUOF/oc8NtoJU8wu4vOc+iU7yt5BElbrf+8Gudr5U8osSs
8l2Lroqt5BElvKZaPb8rrOQRdj9quuBNkwAreUSJuJNh61xDreQRJQ6m9473
iLaSR9j9pm78oCGJVvII6/9folt56q3kESX8pubU7WOxkkdYe98VNXAaayWP
KPHkcK3ONTKt5BElhhYM8i+daiWPKOFdXznrYI6VPKLEotyzL7LmWckjSuT0
aKbzX2Iljyix487RJ/VWWckjrP4WDM86td5KHmH9+103SdpWK3lEiQuVK/Vq
uctKHlEiaLasT8FeK3mEHe/FZp38kJU8okTdp+tWPzpmJY+oEPzmdv24M1by
iAp/yh6ve1FsJY+oMCUkNCL0qpU8osLiLl8El25ZySMqbNrjG9z/vpU8okLx
03/LFz6xkkdUmF75ct0PL6zkERX2XIza7v3OSh5RwTnZmJH1yUoeYcdL3D31
fLmVPKLCobyHp6r8tpJHVLBM2zuwb2UbeUQF9YIfL0Nq2MgjKjieHXU1vY6N
PKLC3Oi735c42MgjKiz7Wzdkm6ONPKLC5eTrVfa3tJFHVJhw6d+bgnY28ogK
c8bGNdvbyUYeUcG/wbPszS428oiKfd+RDZ/f00YeUWGRPEtgc7eRR1R42Ttt
sdrDRh5RYZjmaz8XLxt5RIV0r68dyofayCMqCGaHRhwaYSOPqFCpUYcvNrGN
PKJC/hq3uz3lNvKIClX6pTd/oLaRR1RocKP6romBNvKICoYFR9d2CLWRR1To
tHTr54JIG3lEhYxa59YI42zkEdYe9VrvvppkI4+o8O/C9s5KvY08okLPpKl/
i0w28gj7vEr7hnjabeQRFVwXCl9tGGcjj6jg4az581+mjTyiQpt579Mjp9jI
Iyq82NDTuHeajTyiwqVavW9VmmUjj6gwVNBkx/B5NvKICvdO/azIWGQjj6hg
Lqh+Yu8yG3lEha59wqo8W2Ujj6igq+V2tOZ6G3lEhcJn6385b7aRR9j7u5ft
89pmI4+oULfh4HLJLht5RIXZ404eVO+xkUdUWNn8SA3NARt5RAW7d8x96WEb
eUQFpyrlXt7HbOQRFSLa7erhcspGHlHhU6Vb2+ucs5FHVMjav+3Yi2IbeUSF
v+Vj4g9etpFHVIhuNHPTlOs28ghrnx+9MsS3beQRFbr1zPta856NPKLC94tR
/x19aCOPqHA1Y/nB5Kc28gir7zG7HRxf2MgjKqSN/Vdn72sbeUSFspOPdkjL
bOQR1t5Ndlc8/Ggjj6iwOvf21/ivNvKICklD9yx/+91GHlFhW+Ud32IrbOQR
FZZn96hy76+NPMLa99mKU35V7OQRFSInjfLeXt1OHlFhoG8tc51advKICu6R
L+Ii69rJIyokmm0tdzewk0dUSE7rP+tXIzt5hPXnTUvODW5qJ4+ocHdnm/Pm
FnbyiAof7Zi3ubWdPKLCjiGZLjfa2ckjKpwbHzPzRwc7eUSFH39TTjk628kj
bL451flSNxc7eUSFHIfGOwZ1t5NHVPALPRE7rJedPMLaL+T4r2F97OQRFTQf
Vo3y7Gcnj7Dx2fHjkZ4edvKICiPcR3xtMdhOHlHh63iPBn+97OQRFSZlhzW6
Bzt5hM0n3zSV8nzs5BHW/zIO3EsfYSePqFC7kvMmP6GdPKKCKsw7pqbETh5h
43fJpuYnZHbyiAqj91Y9ZVLYySOsfc78SnBS28kjbD5/1q/eaa2dPKJC6y7h
uyID7eQRFWptddb+HGknj7D7R4ZH5exQO3lExbw7Yk/DCDt5hPVPcTXjvCg7
eYS1d29nr/qxdvIImz+GRzXPjLeTR9h8JzHV+JBoJ4+w9vvWuLYm2U4eUeH2
lb+d96TaySPsfCRfgusa7eQRFSR5eXkhJjt5RIU1HX47b7bYySPsfBcuPPrW
ZiePsPn5xojxXcfYySMqLDXciAkdZyeP/H9+rGnPSbeTR9j9qe7Og3sn2Mkj
KlQ0n9/j9kQ7eUQF4bIpNz5NtpNHVND/0O6unmUnj6gQL7t9vtE0O3lEha36
e21azLCTR1Q4UeqR13ymnTyiwueHZ6Y0nG0nj6hwZkjomqpz7eQRFQ5OL6n6
YZ6dPKLCzU9N8q4vsJNHVJAPeZ+bt8hOHlFhwP3h37OW2MkjKjS6+nNB4DI7
eYTNhwUfpnVcYSePsPn+TO2SFyvt5BEVSva7TVy32k4eYed7XzAjcK2dPKLC
87qe32uut5NHVLiy8euZvA128ogaQTNC/6o22ckjamjaxa3+sNlOHlHDb8if
nZO22skjargMbejWeJudPKJGx/L5HZdtt5NH1JCuHJPTeqedPKJGypsC/aJd
dvKIGie++16ps9tOHlHjmKTZTnu+nTyixrObzg5P9tjJI2ron6aUD91nJ4+o
IWz/Nnr5fjt5RI09KxaHfjxgJ4+o0few+YXXQTt5hF3PgMx/kw7ZySNqZLY+
uu30YTt5RI0H53p++ldoJ4+o0erFjcvuR+3kETUC4/aJI47ZySNq/JlcEpd1
3E4eUWPhEd8uW07YySNqHL5YNefkSTt5RI0v29osv33KTh5RY+6slbrnp+3k
ETV2PJp74t0ZO3mEHX9QzcdlZ+3kETXOptbLf3XOTh5R46Z995AH5+3kETVC
02tOKS6yk0fY+y+2n5FfbCePqLHudkP1ggt28gj7/F5lj/UX7eQRNfynnu83
4pKdPKLGxtxCjeNlO3lEjdUTnvg8ZGXOI2pMqSqruuaKnTzC2surzaKQq3by
iBqTJIlVmlyzk0fUmKxTCE6xMucRNRSzPySlXLeTR9TY3TNK3+iGnTyixr3k
4oBdrMx5RA1btqCr4KadPMLq92DFkxJW5jyihrXff9kxt+zkETVcO890esvK
nEfUaLN1T27ibTt5RA37rVU9SlmZ84gasbnmLbo7dvKIGh2ahnQ4zcqcR9To
XjZuWfcSO3mE9YeySs1nsjLnETUq72+w7DUrcx5h46H4Rhfvu3byiBqzssYc
n8nKnEfUqOPilnSHlTmPsPo80q5r63t28ogaI9xsFYGszHlEDUeP+FdzWJnz
iBqjw9p9PsnKnEfUePP7YquPrMx5RI2qvTfEN71vJ4+ocfzZrXv9WZnzCBt/
xxfYFKzMeUSNsQMdh8WyMucRNSbYsgebWZnzCHt/fJf48azMeUSNq9s7FU9g
Zc4javRcuz8unZU5j7DrUTcbamVlziNq1Jw8JiiBlTmPqLF9bev9mvu8R9SY
es49yPM+7xE1mh/6NaLNfd4jaqx6npvx4x7vETUMuszal+7xHlFDdbzg5Yp7
vEfY+Rlntoq/x3uEvV/ntaX7Pd4janz8WnX+27u8R9R4HOv0aP1d3iPs/SFX
cwLu8h5h5VbadTXu8h5h9Wt832FnCe8Rdn1H7jZQlvAeUSPh5cjkD3d4j6hR
IyR/yNQ7vEfY9TbqOLXFHd4jahSPKxNuvM17RI3I+ZppPW7zHlHj97mV4p23
eI+o8bJmvTndbvEeUWNaQWnI2pu8R9h8tjdxb+ObvEfUKBOXLk2/wXuEzfeD
FjV8cZ33iBqPtp9v7Xed9wi73iEnjq69xntEjdz3Z//8uMp7RI1FnTvcFV7l
PaJGxc7mAQuu8B5Ro/rhL6PvXeY9oobn7Qrf1pd5j6jR5J39sO4S7xE2H3vv
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

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1: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
nwU0v7yQljiljWikgNZrL7Sv6KPo+j2S5psXnKsPtn1QL5LWby80nV6Z/cIy
guafFyL0wTcmWYfTeu6FiyeP7LjgEEbz0Qv/RT9saHANpfXdC6sFC59le4fQ
/PSCn2ahxduAYFrvvdAhwCNcGRZE89UL/Tc+qOwlDKT13wsN114/MF4WQPPX
G9Mdoz7MUfmTB7yR5tL94hr40Xz2xuDCfT2O6X3JB96YMHv64U/NfGh+eyP3
lPO2pHRv8oI3fO0GV5W19qL57g1l8oVWbvs9yA/eCDP6usf1pBvNf29ExVwr
2XPFhTzhjZxFFl9/3HeieuCNDr7DV5rx6xLzhTdObPTd/+KbPdUHb7y8K6pf
VN+OvOGNpo/vO+e42FK98EbPrvcy17WzIn94w77plG0rxjag+uGN7NXr1ptu
NieP+CBlYHzXP1eNqZ74oLbbxppuf35xzCc+aLK5xm5s5heO1RcfyPZv3R4x
5x3HvOKDVzNMnl2/fp9j9cYHhig4fDi3sIT5xQfJS0tFh7IflbD644Pvnp+V
6XvflzDP+MBivsJ99tUvJawe+WBqfl7kI/wuYb7xQatdopzwG8b0/O2DWbKf
3x5PNDcw7/jgW9rjp30jG9D+mQ8m59kM3XGrMT1/8cf36P2ek0ds6HndB6rl
u3+9n9GE9n98UC/P7X/n29kbWD3zwepRxkt1vk3peY1/LjE4tmrxxpGe731x
q9/h/54XORuYl3yRHXG6+t0QVwOrd77wUadvyZT8e77zxfjZ+QsjP3rQfoAv
GtjvvL+pjRftN/HvN+Vg4G2RN+2P+eLkzo691jX2oedBX1S8Wz3U+KUP7R/4
4k5uvbjqY74G5i1feIYlV/Ve6Gdg9dIXowbmru3e15+eH31Ru27JtnsxAbTf
4Itd25cMu2gdSPtbvqh5HjU9/HGggdVTXyzucW/mz8Iget70hcXabrHi0cG0
P+GHU70bjb4UH2JgXvPDjhbJ3EnbUAOrt35YOnXjyiblofR86octZvnn9q4J
o/0MP4zWOzTe0iOc9tP8sL+P143nQRG0H+iH+3cfrO1VGUHPs34o7HrZIWxb
JO1/+MH2dUJNU4nAwLznh/8teDhKUiCg/VI/WHnfmd+/SmBg/vPDvJl79UeT
hLRf4oe4FOF6v81C2r/zQ+fJIZfW1BMZWD33w3PLOe8iO4pof9QPab56dVmx
iPZX/JCndrAa31BsYF70x4vO8zfHdBPT/rA/RiZbDrA4IKb9X3/0u9Th8r1G
EtqP8ceP/Fr1wUwJ7Rf6I+nSsdRVxRLa//THodRnk6eZSQ3Ml/7oMu/+1JFt
pLR/4w+uRbM//TdJDcyb/jh19sGabjVSA1sv/FFrUAvaa2W0n+2PRluMR6fN
ldF+jz+W9h7eWXdfRvuT/rBTbTgqC5Qb2Hrij3ttwmb4Z8tpP9gfzWdGnrI+
JKf9IX+knpNlf64XZWBe9UfbCS6briVEGdjzbwCeN63M2zo7ysD8GgBT6+sR
OdejaD8pADvbWD6NcVTQfmgA/nTbeu9bewXt9wZgQeLWntuXKwzMtwHocGHv
neb3FbT/FIBHyR4Fb12VBubdAAy4dujXqA5K2h8PgO3Da3N/LlYamH8DsKql
6cVBN5S0XxWAytQQ2W1rFe2/BkD9WdszspnKwJ6vAxCu6vgtZ6KK9r8DsGFP
v8XFh1W0vxWA5SmJHx9+VBmYlwNgYz3l9PegaAN7/g5A7v1Ot8w7R9N+fyB2
C+d/Mi6Ipv2wQPg+6VLz/lQ07fcGovf1NkcvfImm/e1AOJxPki0KjDEwXwei
yFPZqnnbGNo/C8SuZaH2PyfFGJi3A/E/oefoRcUxBvb8HoiLT6uWeT2OMTB/
B2LOHNXUZQ1jab8tEG73E7NMZbG0vxyIAS6f2nbuEmtgz/eB8IyZsmDLlFja
7w9E7I09LZ8VxtL+HP/59oNuW92MNTCvB+J95d0+od9jDez5PxCHnAM7KTw4
A/N7ILb2mNJQoeZoPy8I9pcb3Q7pztF+dhDENwqCrfM52s8PQr2rG4dWrOcM
zCNBWN6hr3DXCY72/4Jw4GD+44GPOQPzSBDuDTRq4PuLo35IEAa+XL6qRyMY
mEeCILvaaeoe/rGDeSQI5sPd540NAO2fB8G9vbThKREMzCP851UPT54UC+pv
8MezyaPwRCJofzEINtfOzhzdCgbmkSCk3M5MKO4M6gcFoXeUp65Xb1B/Jwhn
S4ZULMkG7UcGYdCu30sSRoH264OxxDL/3PAJoP5FMMyPP3ruOx0G5pFgzAz7
npk+D7R/GYyyVkd2/1wMA/NIMOb1MW0ZvAoG5pFgbFMtO3prPah/FYw/p3yz
zbaC9juDMeOoc9Xe/0D9gWAYYo4cfrULBuaRYHQbYNF51V5QPycYznFbutw+
ANofDcaDVtXJCw7DwDwSjL4rr+y5eRTUTwtG5eiSoBUlMDCPBOP3muPRrwyg
/dRgNGuUPuXQcVA/IhjFwS3X2p0A9WtC0P9904DP/M+ZR0JQryGKM/jXzCO8
A0OPv0rh3495JASn4sp6nzsGA/MI//e/7t2+dATU7wtBlUXe/Y6HQPu1IVi5
Z5zn8P2g/f0QxAzbleS2B9QfCsG80b8bpxWB+lchuNyvpYP1DtD+bgiCbRY3
6bQZ5JEQLBCsOaBYB/JICI70Cz2ycQXII/zxBFy9vnYRyCMh6D79x/6IuSCP
hGD/wvs+KdNAHglBuTKr7FceyCMhaDNPNlbN3y/MI6Fo4bjujdNgkEdC8clk
0d38PiCPhGLntiUNJmeCPBKK5VVHNe5tQR4JxYVLK+OTUkAeCUXpq2aPbfjH
ceaRUGTEJt4cEAXySCiib+Z/6BEO8kgoBsxM+PXFG+SRUOyqkZzzaQrySCi6
aOSelfVBHgnFsIlG65d/58gjoWj15Evnlfz8ZR4JxXPpTId7pznySCheuab0
b7ONI4+EovqgeUPb2Rx5JBQeA/Yub5TNkUfCUH/lkAvNWnLkkTB8Xd9bXyrh
yCNhSHu//8hCB448EobuEYOebqyJJY+EYc7BUX3/3Iglj4ThoMWMBhuKY8kj
YRC2sRq1cF4seSQMP//nOvjmgFjySBjyZ3X7r0dSLHkkDPuGub+KD4wlj4Rh
yrI/j8YYx5JHwvByeECr+g9iyCNhcDRtYPZ2Xwx5JAw9W/1vT+DcGPJIGJKb
p/kf6x1DHgnDkxX3XHchhjwShq2LOnYydoohj4Rj28TAouL30eSRcJy/u/je
GX69YR4JR2bhl80xy6LJI+Gon5D90HlgNHkkHNOu10/spI0mj4Tjtmra7vqO
0eSRcIj9syu8KlXkkXBIGr4v2nBERR4JR2ne+YeLZqvII+GIWJoR862LijwS
jqFZE5aVClTkkXC4rZ9+yqGeijzCv54VNv16mZI8Eo6lx0ceslyjJI+Ew7fd
Vb/9A5TkkXB0tb++5HG0kjwSDqcjLSomN1CSRyIwak7Sg+23FeSRCGx4dj2l
+QYFeSQC8kc2liMH/fNIBN60C7nvF/3PIxGwuRO7rI3FP49E4MG+tk1srkWR
R/jn2p6d7FuuiCKPRKDHjYaDvHtGkUciYPyx4vPoyCjyCP/5GZGDe9XKySMR
mB14e99Tg5w8EoE7Z4bP+zBVTh6JQD9XTVlBupw8EoF3q3/hoqOcPBKBsfs+
FS1/KCOPRMDfsfKt2UYZeSQC1zo7Hm/YT0YeicTFY07fCgUy8kgkhl562aWa
9yPzSCS47LKSG4ek5JFIFH3v+bTDOCl5JBKpzcbOnaSVkkcikeHvUdDGQkoe
iUTshpGFVy5IyCORyDz+YvvHWRLySCQmWJSlHU+XkEcigS57O8fYScgjkSj+
4bSi900xeSQS9XvmXtAtFpNHIvFmc/Pt19uJySORmL3g5++mLmLySCSSBIZ8
m3si8kgkCmSHvx9fLiKPRMLt2EP38AwRrb8CBP54sbWlm4jmjwDrPVPby+8L
aT0WwLd96ou7y4U0nwTo+faKWUxHIa3PArQb0DO7m4uQ5pcAmS4JD5LuCmi9
FuCKPu7X98UCmm8CpH84PTG7jYDWb/7zsw9477IX0PwTQDohqPGIjZG0ngtg
OL7c4OcdSfNRgGP71+4bsCKC1ncBtJerde0cI2h+CjA3qumx5/PCab0XYM+a
ztmOjcJpvgowpdH1bZ8mhdH6L8C+bwHFo/+E0vwVYHzRjit7c0LJAwLcvpSg
WVcdQvNZgFm/eiTq+4aQDwQQf3vlue5pMM1vATps8ft1uEMweUGAe/mX7Rdd
C6L5LsDN8E+LxM2CyA8C/Il8s3Px8UCa/wKYG6dPPR0VSJ4QYL6kWmfYGUD1
QIDNN8+bzwgIIF8IUGv+pTJopT/VBwHendnSYKWdP3lDgPdvvHMrp/lRvRBg
W/MNKfZGfuQPAT7L+89xH+5L9UOAt9c2JtZ/60MeEcK2UVZeeVcfqidCvByy
WL7gtjf5RIh73c36KFK8qb4IYZHOWZWe8CKvCJGXsMy1RZQX1RshilumGC/u
6El+EeJtbVrrnDgPqj9CXDZ1+ZMidCfP8K8rrpx2d3OjeiREfGlpz3fmruQb
IX5fX7LoRLUz1Schbs0sM1p/34m8I4T1U6+EBWcdqV4J0aq5xHzF7qbkHyHe
j910sWSlA9UvIXp5ffU0m2ZPHhKiMmZMXvZQO6pnQuw736FHg8wm5CN+PGYO
kt9MsqX6JkRV7xYdbsttyEtCNCkfkRqWYEX1Tog3YxrcD/duRH4SYt0OQeXR
7/Wp/gmx2a70Y8UNC/KUEIvvHcko3mlG9VAIzvxUbvgME/KVEBn9R83t0qse
1Uf+/IoHz9089XcJ85YQL2bYjQrSfS9h9VKIbi0D3rSu96WE+UuI73cdLmgN
1SWsfgqRdHTejobGb0qYx4RYsdw8vcuUpyWsngqRsMvneAvvGyXMZ0LkTK5x
tHiytYTVVxEsjyU8s1df5JjXRPD+0KpF96EPOVZvRTjgv1kxZ/VLjvlNhKMm
XxLdjD5wrP6KcDh1SzvTiM8c85wIbvsm/e9/7Ws5Vo9FcJkX3lo/4SfHfCdC
QI9Q45hWRtSPEUEUUH3xZw9j6t+J8DlyeEj74abU7xVBO3ZAq8RJ5rQfL0L8
1MMLThVYUv9GhHWZQ5qdWNWA+n0ipLZ8+UqxtRH1h0UYYbztq89uK9q/F+Fq
XrNphzJsqN/Df/6fis/zu9hSf1CEn5terFnatQn1k0UYbbdj5NludrTfL4LS
+9Iw5+721B8S4ekUs0UzujlQP1EEH3n8C+euTan/LIJHTlGOobMj9Qf4878x
b2BuRyfqJ4mgOv6/T3Ftnan/KIKTwze5ZwsX6leLkMi55holu1I/QYQ/zd6b
vtS5Uf+JP/6txwKvRLtTv1KE/ScbYK/Yg/rbItxrP2HPwmBP6j+IsPi6ca7M
2ov6VSLkh1wrcZ3mRf1N/nq7pr7JMfam/XgxvlWG6pNzvalfIUZ+psxlwSdv
2p8Xo3V58pHUfj7UDxWjma7bhFFPfWi/XozBX3PPObT3pf6GGNfGF1V5XPGl
/XsxXqYFdF6g86P+qRiSlCbjhh70o/18Mbzb7ztxNNyf+iFijCzusmrAWn/a
3xfjclKPmZPsA6jfKoblD/9G9aYE0H4///mbzNc9qg2g/okYecmDbnv2DaT9
fzHW/yhVGsoDqT8rRpfi6V1KmgVRP0AMc4H1Q9dDQdRvEUO7tqTljaBg6g+I
cTHpW7eXi4KpnyvGsKY2xS1NQ6hfIEY9k+QPjtkh1J/hj7eg4qLoQQj1D8Q4
62j5cx3/nMO8LcaV6lOqXsX/+gliVBxwSRrrHkb9HDFatXr3vmJyGPUXxHD5
Y1K9uiqM+sX8eCrMvba0Dad+gxj3t+Wk/T4WTv0fMdq/Odh2Le9I9rwvhrPu
j8PcGRHUXxbjUdvm/c9/iKB+hBjvj0xVJ7eOpH6RGAsnNctzPBhJ/QkJzDOM
rRysBNSPluBdh2ET1ZyA+hUSTD9fu9JmkID6SxKURVTcz1vzL78iQfeQz8cX
lAmofy3BlqmSqwn8OsY8IkFUWpN5KyOF1I+S4NrxtOkFnYXU35CguotpQuAs
IfW7JfC6t6xtx8NC6ndIEGZ+JSHitZD6VxKkHd3+3+qmIup/SDDk7FSXnVoR
9ccl+K/IMiBjkIj6IRLUX9W0z6YVIup3SXDO5fnYWedE1B+RIPBRhaktP4+Y
RyS4MffWMoGnmPolEviN2fb0TaKY+mMSCFIWj9cMFVP/RII3xY1cJavE1H+X
oHXT4g6Gs2Lqp0jwLLxPZcUHMfXTJJBtVI/Y7Cyh/ooE2Dm+qJ5GQv16CaqW
LI2v6SOhfosEo1qHfcib96//JkF/M5PMzQck1H+RYEKOdVqPRxLq70swdlvv
EYfNpNSPkcBUlbBwa6iU+nUSLHts0SuyuZT6M/zx3/L4L3m4lPIAEmQkeIbU
Wy6lfo0UzsXF65JLpJQ3kmJz4ooHEc+k1L+RwjVtx/rN5jLKD0hhPfBsyb5g
GeVNpOht++h3x2QZ5ZOkaLCtKnLxABn1j6UoMP3t23uujPIGUoTNtC+8vEtG
+RQpls7B+gvXZJRnkmJq3pzyjp9k1G+WIk3aKHyCnZzyCfzxOB0ZFiOWU55F
ir09V8yb1UJO+ScpPnRZ3WVwtpz601JcG7LV8GaOnPIMUswbOHvxt//klH+R
Im+T1fnlF+WUl5Lip+MN1bVXcupnS9GrYOCdFWZRlH+QotP11tN+eEdRXkYK
7433le9joihfJUXPb/J7Q9tHUf9binH1RnSYMzSK8hJSOOrytsXMiaJ8DX8d
i+xKxm39l8eSYuLOo7Nan4yifrkUHUQPG5fcj6J8hRRVx9ZEHamJojyOFP1G
fbdMsfqX3+LHW7g5NztAQf11KZRdAuYExyoojyHFY8EB7bDWCsrvSDFwWofl
rfr/y3tJ0cr4zNKzExTUj5fiZWVf3eUlCspvyJAQN2Bd70IF5X1k2HN205FF
JxWUD5NhUOnSle3uKKh/L0P7DjnNC98qKO8hQ7CVW8ViIyXlg2SY6Gbaz8Fe
SXkyGco1LaoDApXU75dBe/TsjEsKJXmEf608kWqerCSPyLC9NCr9RicleUSG
+U8PbJYNVJJHZMgL6z4gfLySPCLDrcWvjh2YqySPyDBJMWXvnTVK8ogMgliL
QbOKlOQRGXbd2d/4domSPCJDkKD/zr2XleQRGRan5IwIfqAkj8jgWb9wmuiN
kjwiw9sv7RterVWSR2R43BK+ZuYq8gg/Dz4u/Xa5iYo8IkMjf9sDEZ4q8ogM
XOGxaX6hKvII//OtAcuLZCryiAz+I6Qu19Uq8ogMz3dEy2Ym/8s3yHDpV5Xn
/TYq8gg/fsHd6p/MVJFH+PN/WS9A3VdFHpHh3a1F29oM+ZeH4M+vT2ypyWgV
eUSGgdd7n07IV5FHZNhde/Oi/0wVeUSO7xkFLsvn/8tP8POwyee3W5apyCNy
WOxYPC5trYo8Ikf7kE42czaryCNyJFZnPez1n4o8IkfHA41CyneryCNyJI19
K6nYryKPyNF0zHX1zCMq8ogcbzxOL7hkUJFH5LD9XDN48ykVeUSOi1vP+bif
U5FH5NAbX3wTflFFHpFjeenupuWlKvKIHL+fdXjnXaYij/DH7204ZHZNRR6R
g8v8fWHSdRV5RI63o1L6rbuhIo/IERj/+3XHmyryiBwpS0Ys2s2/Zh6R4zLE
xzfxr5lH5OjjcPhwFP+aeUSOR9Ub7/Tm3495RA7fkgX95PznMY/I4ZgbeX7D
VRV5RI67ap/4XVdU5BE5Ctu5RHfiz4d5hK+bypN/tlxQkUfkmLDpZOWCsyry
iBzddx5q482PF/OIHGWl0atS+fFkHpFj8acyN3d+vJlH5HBY+y5iFn89mEfk
6P2zRriav17MI3LMqZTlt+SvJ/NIFP4X8jx/G3+9mUeicDbbYcEG/n5gHokC
N/NkE81yFXkkCi1Hn+42cYGKPBKF/qtKK3rPUpFHovC7tKfxp0kq8kgULsys
dvYZqyKPREEdtrbgyzAVeSQKjt9yrg36n4o8EgXTPomYl6Uij0ThVLP/tO06
qsgjUWhda64/01xFHolC/owx/92LV5FHonDc/nvFkhgVeSQKzW/4ZfwWqcgj
UbgzrFtOoyAVeSQKCalXN590U5FHohC9Iq6tn62KPMK/34WkzxFmKvJIFBbu
c333jK8fzCP8ulKzukj7VkkeicJ0nwGFqY+U5JEo3A443cbsmpI8EsU/T093
6X1KSR7h15Gy+H4j9inJI1G4Vhx4WLxFSR6JgteiT6NXLlWSR6JgfNnGb+90
JXkkCovNxvrl5irJI1HYvbTsY1U/JXkkCv/9EJraZyjJI1Goceh0+WWSkjwS
hTbFy8/2UynJI/y6+PpkzzUhSvKIAiMnSn0nOyvJIwrUG357qLulkjyiQGyK
w42eXxTkEQW6bbh/sNtzBXlEgeYrl622vaYgjyiwpKPiz5ASBXlEgaQJ7i2n
71CQRxQ4u8e3aeulCvKIAhkuq07emKQgjyjw/Hnz2/UHK8gjCqSUDy393ElB
HlHA/sk2n0WJCvIIvy7OMWn1nn9f5hEFlCVfH/7yVJBHFBjg1Ut9uoGCPKLA
jBsLv+n49Zx5RIECy5DJYx5FkUcUuDE/uOfA81HkEQVGLf3q5Fr8zyMK+IS3
8Mhb8c8jCkz7nvZl7aR/HlEg+UMn77ED/nlEAcO7aK+mbf95RIGnQ/4M6cv9
84gCWe0tVuUG/vMIv67nmXg1s/7nEQWsl7zLvfVFTh5RoPtFC4n3Qzl5RIER
c8svhJyWk0cUeJIlOvlpu5w8okDTRe5rRhfIySMK5DesfH46R04eUeCana9D
WWc5eUSBVtI5e5br5OQRBYrrRcQHh8jJI0qceittPtJaTh5RYklAk7Yz+XWK
eUSJEzmZD7rdlZFHlLgRUNX711EZeYRfp68dGpvBr8PMI0pMzHy7fvxkGXlE
iZcVtzr17SsjjyjRaVGN0CVVRh5R4suO1xvnCmXkESW29MnhLvMOYh5RItdk
Wv71r1LyiBI/1/v8WFMuJY8oUZ3VN1h+VEoeUaJl87ULF62WkkeUmN7H50xJ
npQ8wv/+tkx1cXcpeUSJtS4vZmXrpeQRJfKuJ4t+BEjJI0qsdozfm24pJY8o
cS1r/srB/HMC8wj/9zP/ZHe9ICGPKJFzpcdB9+0S8ogSvj+2fd88Q0IeUWL+
zCNHjPpLyCNKVN2YPTmIf45jHlHirbfrI88wCXlEiezXnVJeNpSQR3jX1bZq
N45/jmUeUWLyxl+TX10Qk0eU2GHWMtN3m5g8osRt/+R+gmli8gh/vHHlETa9
xeQR/vq6vhSejBOTR5TYZ9XyR6L/v7wiv67mf7LdaCImj6jwMHDezxtP/uUX
VbgjrlCXl4jII3zdPr2i996V//KMKthEpHztmSsij/BuShw9tKqdiDyiwvHb
S3umyUTkERUmlP9uOcVORB7h16HPb04s/iAkj6gQWTpFkVcqJI/w696IBzG6
bULyCL8O3S9v/WSykDzCOyEwzaJ9dyF5RIV02evb2zkheYRf96xkKeWuQvKI
CutarH77/KuAPML//rE+qkvXBeQR3o1ri4/N3Skgj6hQL2vID9EMAXmEX8fM
hg8v7ikgj/Djs7nTniYaAXlEhXNOaxTN3QXkERWURxs4PPoQSR7h1+X5yW3u
b4okj6gwz/pW7PKMSPKICj1z7G65NYkkj6iQJWrg2+1sBHlEhT8/Wof1Hx1B
HlHhQURArUoYQR5RYbOFaua1F+HkERXCPj99J1gWTh5R4fbLr97tUsPJIyrk
7LsflmgcTh5RofWwUU3M9oWRR6Ix7WnMrZl9wsgj0dhwzT73iVsYeSQa8zb0
MzEtCyWPRGPv4ZDsmgmh5JFopBntOb1PGkoeiUbDno/rJb4KIY9E43zOL///
loWQR6KxoOqC8HlyCHkkGif1OX5Vv4PJI9HQdVj383JRMHkkGuYOzQ/kdwsm
j0RjSpOaVrb2weSRaIxu3ePKsNNB5JFozPp937d4eBB5JBoBDb6lXAgMIo9E
o739voQjdwLJI9E45TPAavq0QPJINCYMvbVEogwkj0TDpd2vx0cqA8gj0Rhg
kfDId3kAeSQaK6YNmtE3KYA8Eo17yyben/fDnzwSDSx7eG7Zdn/ySDQGjgmP
m9zRnzwSDfGF3omtG/qTR6LxZeH1M5aH/cgj0bCb8W3X2r5+5JFoGH3e8cvL
xY88Eo2US6Yrppz3JY9Eo9/tDmNv5fiSR6IRfTRxoVWQL3mE/3nY9jLBbR/y
SDRyjRd5xk72IY9Eo2BkxiC51Ic8EoPvHacXuT/3Jo/EIDnm2aXqAm/ySAz0
BzN37VF7k0dioDkgSOz1wYs8EoN2B4vHNljtRR6JgalPrmp1ihd5JAbPA+aU
Jdd6kkdisH66Vbm6tSd5JAbdLm3p6rnbgzwSg2PGL8UvrTzIIzEouLHedXk/
d/JIDNZ1sHwafc6NPBIDYaNpqZf93MgjMRiw72lA8zxX8kgMisY6Rp594EIe
icGoqn7BIqULeSQGEpusW/MXOZNHYjBniuHzu49O5JEYzD+Xq9akOZFHYqBq
dnZEwXZH8kgMVp63bP7YwpE8EoOFi27nh2c1JY/E4HHlt3O5BgfySAzWJHW7
esnNgTwSA0VNWLrPSHvySAzymq+sGXPTjjwSA2mO66AnQjvyCH/+B4X9U2c3
IY/EYIx4+oIzlbbkkRjcG/h2XlK8LXkkBrFWqoaP1tuQR2KweXj2xglGNuSR
GLQM11oMOmRFHonB9fRns+oNbUweiYGRhcT9aHgj8kgsBlWdrtr4sgF5JBbB
3fXRJWvrk0diEdF8uLRRhiV5JBbZEYIGc5takEdiYfet/YuUq2bkkVjcSq14
lzDTlDwSix2LrsTlx5uQR2KRFGNvbWJiTB6JxSbT4q7njhmRR2Ix9FLq9sKa
3xzzSCwCbC796DHgJ8c8EovHU3dfO/LyG8c8wn/elMP6g12/cswjsfBpNbZb
1/ufOeaRWCza0ificNuPHPNILBrvGJWydHMVxzwSiyI7yzz52kqOeSQWsmyX
qxkrXnDMI/zvt79s7rD0Mcc8EotRD7P23o64zTGPxGJNsw/Xijtd4JhHYuH1
7tTJ2IKtHPMIfz5d2x53dz1cwjwSix+LfcxijpSVMI/EonzXBlfjwvIS5pFY
fP/fYjOj1KclzCOxkPfvGmCjfVnCPMKPd0hBTIDsbQnzSCz6Xjm0YPn8DyXM
I7HI6LHxrWvDTyXMI7Gwjti0aXZeTQnzCH8+0zKS3n/5WsI8wl//9+/6Sft9
L2EeiYXwYf11nR/+LGEe4XCx8N2crPQ/JcwjHHa5Sz6seWxE+UUOlw4MWJ/j
ZEz5Iw5bH20o2ZdmQnlGDmlFPpvbTTalPBKHd2cmGjoeMaN8IwfJ6T3Dj1ab
Uz6JQ8MLn6NyAywp78hh391bowo61Ke8EoeZMu0eo9kNKP/Iofm2nK4nDQ0p
v8ShjaGxyZ2PjSgPyWHgh2r3aD8ryjNx/H09QPWulTXlIzm+/iwYOlRjQ/km
Dn10czOalttQXpLDuQ93vTpm21LeiUNB4JXZassmlJ/kMKrhr2HnVjWh/BOH
6lyvLe8ldpSn5HBtYMC33RfsKA/F4X1CGGefaU/5Sg5TvMa3sK2xp3wUh5JG
axtvneZAeUsOtl24lHL3ppSX4nD3XvSH9buaUv6Sw7fKHbdN9Y6Un+Kw/fiN
ih+3HSmPyWHWpFCTqX2dKE/FobJ3B/stP50on8khwxBt2nG2M+WrOJywfXxs
tacL5TU5bHHLFw0rcqG8FQfv+8vSyuHK8hJGgPeEc5aXy1xZPs4U6Nv/WYu0
TDeWn7AE7O0++3WqcmN5l0bAoQ+SnC9j3FmewhrolNUkwaWRB8vT2QFms0IK
zi71YPkKR0DimdLmV4Any8e4AiGS3EWHij1Z3sIDmDltSOgfTy+Wv/MB3L5/
u/yshxfLXwQA3x66HJq+3YvlaUKA352iBn/64MXyGOFAypZLY9xl3iyvx7P3
z5U+WZa53iyfIQUqlx0sLC7xZvmbKGBSizEVHqY+LK/Bc6Fq7qxFiQk+LN8H
fjwaljcTz/Rh+Q0d//7t+sy9d8WH5XXigcH72tWo7XxZniMJiLx0z7JnG1+W
B0wDrvWK7hi/1JflO1oCe1TlY17c82X5njbAw8UhJvDwY3mPDoCR94GxbTL9
WH6wM3A232dS0Do/lv/oxo9PqMeOvc/8WB6oB9Dn5ZDpv/z8WR6kD3BkjdGB
Pz38Wd7wf0BTo72lhzf5s3xINrDBYWEP4Ut/lh8aCtj+3u+SGRjA8iI5wJv8
+GnxvQJYPnE0UHBqXOrLTQEsPzIeKDpZaMlVBLD880SgmY2kbap/IMuTTAGy
2o0vt88KZHnGGUCCkYOkYF0gy5fMBgbum2h+5nEgqzcF/P1kNqBmp0cQy5ss
AkY9yd+YlhHE6s8y4FnU1CMblgax/MlKQJcb96TwVhCrR2uBw74rDv/PLpjl
UTYC52OHfH6cFszq01ag7fsTUsuZwSyfsgOY92Z2yLOzwaxeFfHnZ/5ybLZJ
CMur7AGq11c82h0bwurXASAias+PTSNDWH7lMGB6fHxeyp4QVs9KgMLoKd6b
3oewPMtJwNmz0ayioFBW384CVqczhvfvFsryLReAjBeX595dHsrq3WV+fhgZ
5n69EcryLteA/hcXhJ5pHMbq302er6sPOOrjwlj+5S4w+9GKRkPHhrF6+ADY
mnngRIt9YSwP84SfX2WTPz1+F8bq43OgsePU9h7+4Swf8woYcZgrapARzurl
W/541ZI9GwvCWV7mAyCY8t6n6lw4q5+fgK9+3w5V/A5n+ZmvQNKpR6qZkghW
T38A80dF9HzUJ4Llaf4Abz2zfzxaFcHqq7Ea6zeIjs26HsHyNeZqGPX4mf3K
IpLV2wZqZOW2vlelimR5Gys1ztqcKFk/MJLVX1s15m0/8cJkfSTL3ziocX/0
dXubW5GsHjurYX1rb4MsUwHL47jxn5c+9s5Cd/r+jJcaazfVtlspE7B8jp8a
Uw/cyh6VJmD1OkiNVdlx9cN7C1heJ1SNT32qzfaOp+/bRKqxfcrP1CZLBSy/
I1ZjxmqLS7pdAlbP5Wpctg/vkXxewPI8SjXic+qZBD8RsPoeq0ZZwPzZ5bUC
lu/RqGH5sk91po2Q1fs4/vwnT3Y4EihkeZ9ENeYP6/biTSx9nydFjeisqqQP
rYUsb91cDZv7iyTn+wvZetBaDe6eYsbwiUKWn2ynhnqAILp2qZCtDxn85yUm
SlKLhCyfncmPZ5fzmTlnhGy96K7G7TH9dg6/L2R5y15qCB91sUr8KGTrRz81
nE4n9a+yELE890A12jROPNDHnf5/JIPV2Hz2xZP9IhHLZw7nr98F37t34+n7
RaPUqE7ImX0lQ8Ty32PVuNn94scl2ZRXzFPD1DDiq3SyiOU5J6lx3bHZ7E3L
KL84TY1DpeO3VhaKWF58lhqCsRdVxidFLM84Vw3zec2i3t0SsfznAjW0F2YX
bK8UsXzjEjUmli+JjfktYvnyFWo8eH9HsM5WzPKOq9VIR0Tncj8xy4uuV2P/
uorDL+T0fafNaqTaHeNONROzPPo2NUriHj4a1knM8pCFapyUPSz4PlDM8qW7
1Wi983haiwlilo/cp8awe7WNxywQs/z6QTUmXe1yetQmMctLHuWvr2fsgKQD
YpZHPa6GuHVcvarzYpafPK2GbcHCET3uiVne/Rx/PI2LLxS+FbM85SU1Vq+d
8/nCLzHLr5ap8aPNpKqDVvT9qxtqNHvbZl+up4Tl42+rcTAzUmcjkLC85T01
ikavXTACEpZ3faRGbofN63elS1j+8pkai96v/d+xTAnL01eosW1Ou6qVgyQs
j1mphnJsrX/6eMrHvufnd39765tzJCyfWa3GT+MNW8JWS1j+vkaNqP4m1W0K
JSyv+Y2fL7c+VrQ8SnnaX2oM/bFwmu8lCXlEgz2bh9w5XS4hj2iQEjvsuvK1
hDyigZqrGDXhK+VvG2kw+NKQKyvM6Ptj1hrMjgi7Ns1OSh7R4FD7sfmJ3lLy
iAb1Bite3YuQkkc0mJM28w+ipeQRDXYam5XmJErJIxosaDu35cQ2UvKIBlXt
Ry7K7C4lj2jQ+k7vpTaDpOQRDfq/zMqcP1pKHtHgY1ZZ1aupUvKIBvNG9U22
XSglj2gw1Ss1t9FaKXlEg5A11XnlO6TkEQ2kTQN65h6Qkkc0MK5pGlF1Ukoe
0WDW5MTH0itS8ogGnQasmJhWLiWPaBAfGu8Z/UJKHtHAeundQz+qpOQRDT5k
qzrP/i4lj2jw+8p228+mMvKIBkMKDQ/CrGXkEQ0e9O15McpZRh7hjy/u0TNH
Xxl5RINHL04ILoTJyCMaFNz4dThNJiOPaBBqcnXOFk5GHuGvX+LVfTcSZOQR
DU5XVKhuNJeRRzQ4YpwSsrmDjDyiwf7webNSusvIIxp0e1KQfbafjDyiQVi9
iU/th8rII/zvd3j2VjpaRh7RICpg8sqQfBl5RINbk2fV+zRDRh7R4E+DfgFz
5svII/z9E/bI+c8yGXlEg5qrta8162TkEQ1KL9lv7LBVRh7R4H7HB+3jimTk
EQ0mbkt0NN8vI4/w49V85dulR2XkEQ3O3ez1ut4pGXlEgwuh+e6xF2TkEQ3u
SJyWppbJyCMaGKkX9BffkpFH+PGcs3vL23sy8ogGM0uHdx71REYe0cBzWfjq
+xUy8ogGIpP+o+3eysgjGnyzsLb0rJaRR/jjc1a1+lMjI49o8GJpxyF7vsvI
Ixo0zvTJif0jI49oME06ZdhKEzl5RIOf7c6OvWohJ4/w5/c7a3N5Qzl5RAP/
awEmB63l5BENkoY7bupvJyePaLDbYtKGmqZy8ogGA1Ya2bVykZNHNFh7oZP5
VHc5eUQDK6/d8+d5yckjGpz4r1XZIF85eUSLx/kPrvoHyMkjWuQr/AuLguTk
ES0uZ+lybUPl5BEtLALnpyWEy8kjWlRu3aJuHSknj2hhs75D7yihnDyixfhb
R8qrRfR9CDctuiz1KsqTyMkj/Pu3sjd6JZWTR7R4Ydn9qZ9cTh7R4tEVu4FR
UfT9iVAtenftc8xHISePaOGw6MmrZ/xr5hEtGr+RWIxWyskjWtwwayN6o6Tv
Wyi1SIrKnihUyckjWtwxfWuXxr9mHtHi6LqsX1r+NfOIFusn7Gpvo6LvZyRq
kXL9sWYP/37MI1pMMo+6Hsm/Zh7RQtJG7D+RPx7mES12JU5qWRhF3+dopwVU
TUfu4s+PeUSLiw9Mds2UyckjWlw4saYp+PFgHtGiz+Mhpy+K5eQRLR44Rt2N
5MeTeUSLr4fv/a+/QE4e0eKd4/jVeRFy8ogWnb/kTB8YJiePaDEnKDlJFiIn
j/Dj3XjX75uBcvKIFstc5x5P9ZeTR7TYmWW8a42PnDyihZtP88qLnnLyiBYx
qprpZW5y8gh/vS8vKip0lpNHtGhxqNHInvz9yjzCj19AhnFtEzl5RIvNjQ70
7c7f78wjWjw9Ob5sCz8fmEe0ODlV2+IcP1+YR7SYbHnI6gQ/n5hHtOj45rzf
In6+MY9oEdwlv1j3Q0Ye0WLuOv/y0i8y8ogWirn2B4QfZeQR/n4Kedp/0DsZ
eYS/HwISnaa/kpFH+PEeFV4+9pmMPKLFtZfLr6U+lJFHtLg05bz39zsy8ogW
qzrYvRp/XUYe0cLn+i/9s1IZeUSL0ixJhvc5GXlEiwW205JUJ2TkES1caz9J
hEdk5BEtIp8WKEz2ycgjWhRc3zJq104ZeUSLJktXOkfz9ZV5RIvqtr/k6/n6
yzyixQr3nK8Vy2XkEf56Dnwy0mKhjDyiRfP7kU9MZ8vII1rcnT467dFkGXlE
i/OXjF8uGicjj/DXf6fnhdAcGXlEhxczmruuGiQjj+gQu0L+611vGXlEhwXT
5xW4dpWRR3SINuN+B7SXkUd06NGc627Dr2fMIzp0elj0/Da/3jGP6BByt2zj
GMjIIzqMMnw/Xy+Kvv/uocPr2s1DsyJl5BEd1ncdeH5jgIw8okPr16ZvT7vL
yCM6jPVVGJ22p+/Lh+tg+7A2eH1DGXlEh5H7k2dlGsvIIzq83dMu9VftP4/o
4H2347yRVf88okO7wztH3XzxzyM6nPQ4F2F7/59HdIifLroWdu2fR3RY9Hjh
tKBz/zyiw/baXSNNj/3ziA7LZV3OGor/eUSHs36zF3fa+s8jOvRpHG99b9U/
j/Dns2BrS8UCKXlEB5sWb6flTJOSR3Qo759xe8lYKXlEh2Rpp67LhkjJIzq8
N/RKGdNbSh7hz29yg+PqTlLyiA5c7asnL5tLySM6uPsdvjkwTkoe0eFlcsqJ
u0opeUSH7tPGlfpHSskjOsztqndv5Sslj+iwsf/G21mOUvKIDsOrDvi0aygl
j+ggzd3uF/FHQh7hx2vmIZOXHyXkER3ahEorJlRIyCM6+EzP/ViP9zDziA7P
N/1OzSqVkEd0+N8bzmebQUIe0WHy5bKC68US8gh/vMNanH28SUIe4a9/62EV
V5dKyCM6HLhV23TzTAl5RAf/L9vGZY6TkEd0ePyqV/zvbAl5hH//EueF47Mk
5BEdvtc/MOdlGwl5RIeFufGdxYkS8ogOB+fcDcxSScgjOpyJmGk3KlxCHuGP
p+W0hGH88wrziA6FRebvW9tKyCP857XVh7qZSMgjOnztNC/w3GcxeUSHw5PU
DTpUiMkjOvz3bN/3q7fF5BEd8qdkeAn45yvmER1++G5eN/SQmDzCz8f99ltX
bxeTR3QYIgnruGuFmDyiw7PQMY+3zhKTR3SoHLY6c9pYMXmEP777IpN0/nmQ
eUSHemceVv3qIiaP8PP3UfPU+eli8ogefS+o42zUYvKIHjan+v4ZKhSTR/T4
3HrO2uPeYvKIHqlGOa2+8M+vzCN6DHj5kbMzFpNH9PDKuz7D6aOIPKLHEM3H
LuZPReQRPd6lhD2/f1VEHtHDx6c7VhwXkUf02J8weoVul4g8okepWVevW2tE
5BE9yix+f0qfKyKP6FHsqOX2jhORR/QoOO8TYjJQRB7R42h4wX1lZxF5RI/Q
CVPHZqSIyCN6tHr+W947WkQe0WOEyQdB51AReUSPuOtt58W6iMgjenyPFefV
ry8ij+hx9f64oJKv//ZH9KhZq9rZpeLf/oge5xdlxby58W9/RI+1M2q/dz35
b39Ej6eln61P7fq3P6LHtAetN9iu+bc/ooe7r+PjZrP/7Y/oYblJ9Gbg6H/7
I3q0P7nm3fi+QvKIHh+et7Ue205IHtHDWpGc0ytOSB7Ro03fgekxEiF5RI/g
dkUlf7yF5BE9Rl75/q7QWkge0eO3Vm6S9EtAHtHjyrRmgTcqBeQRPfrPcZjQ
7I6APKJHiNMwVeFpAXlEj/oj1Ll/dgvII/z4JKb2iV0jII/o0VvaN7zfLAF5
RI9xazpXTRolII/w759ddWt2LwF5RI+2F8obTm4lII/oseHMnb391ALyiB7r
o5b/5CLo+6KF/M97lVqYuArII3rkXLb7s8eCvj+6T4/Nexztd7yKJI/owbVa
vObS8UjyCD9eK05+vLgskjyixzybbe23DYkkj/Cf55Tg1zs5kjzC388Tpq81
86fvm17ix9ckxWvirwjyiB4XjravenwzgjyiR8qp3p08CyPII3pEr/I8GDuZ
vo96T4/YyzbNuc4R5BE9Drc7PMRbRt9Pfcbfv0nTB75oHEEe4eef/kbBjBf0
fdVKPQ7+KQ+1PxpOHtHD4e6FqeMW0PdXq/UI63zoa2m/cPKIHj1vbT3zRxNO
HtHj7pUJWgeXcPIIf7w7HI9YVYeRR+JgHek79u3ZMPJIHGY1TLhduCqMPBKH
w0NtHNoMCyOPxEH337v8p0lh5JE4TFwiH9rKJ4w8Eof45DDBjtpQ8kgcOq2v
Mqu8HEoeiUNF2XSN1cZQ8kgchnx+I3LODSWPxOFd4Qvfhs1DySNxiDkQ0e15
QCh5JA6nh3VVbvwZQh6Jw+J5P2pTroWQR+IwqqBT5cPNIeSROBQNvdCh3ZgQ
8kgcpmh7LTrUIoQ8EoetxcrXZkEh5JE4KI+FrVb+CiaPxGFXtLlp+2vB5JE4
jJ80qHvXzcHkkTgMr19j2Wp0MHkkDm+rf3LC5sHkkTjsKSlr+c0/mDwSh3OV
i+fs+B5EHolDyYR2sUlXgsgjcTAu+7Lt5vog8kgcztRIvJJzgsgjcTixYPer
wuQg8kgctg94m/rbK4g8EodBDaJXKmsCySNxELe/7Z51PpA8EgezjDKX3JWB
5JE4ZF6wfzguO5A8wr8++L9dg/WB5BH++mvHPWzpHEge4c9XdK7Q910AeSQO
7Tat7ffUEEAeiYP7idjOcxcEkEfi0LX1jivhvQPII3FInFpmeVgVQB6JQ+WU
vi2irAPII3HoI25Ss/GpP3kkDrfPyxWm+/zJI3E4u8S3V8tp/uSROKzcXnNm
foY/eSQOy3I3rjkd6U8eicOKNfWiXxv7k0fisHzCzse/b/qRR+Jwv2HoLfOt
fuSRONzreKZ7vdF+5JE4vB+1tex9qh95JA6rrK51v+LtRx6Jwz4ru6z1n33J
I/z45to79TvrSx7h38+25ZmAZb7kkThILbz23urvSx6Jw9oja0JyOV/ySByu
j7zc376JL3kkDlX+w4+ve+5DHuHnW72oAQH7fcgjcVB0nXJg9TQf8gh/vfts
e2GV4UMeiYPb+YPKoRE+5JE4vMlZ8/OKkQ95JA6thrsO8rnuTR6Jw8sJB+/2
2+hNHonDk6flY3aM8CaPxGGH2641zxO9ySNxsOCrnb2bN3kkHs9M2g6Ofu9F
HonHq9KVWzIMXuSReGyNmNJ/WIEXeSQe4+Pb1puS5UUeiYeLhc+2eTIv8kg8
tr+7sHWhpRd5JB4L19efHLDXkzwSj59J6wc5tPckj8Tj+hjTJbU/Pcgj8UiX
9B9ftsaDPBKP5Un7/lup8yCPxMPHtuP6zFfu5JF4SG8OeO480508Eo9PY9Z+
Oh/pTh6JR55rbMvs627kkXjMHBMyyWaEG3kkHrYXKhpscXEjj8RjiMOsHlHH
XMkj8Sj7UeZwoqsreSQe61V/luvNXMkj8djY/NeIk1tcyCPxqHFIDI5OdiGP
8OPVoTaiqMqZPMKPz/QDFl7znckj8YhJviycKXMmj8RjsrdDaM1d6u93j8fZ
Rn8GdRzjRB6Jxw3JgvElXk7kkXj8n6b7jqvpj/8Anvbe+96rvde91ybum9Dd
eyArFGVmZPQVCiVkRrasjGSTeUOyMhv2SlYhoZDU7/P7fd6/P8/j6t5zzmec
5zk+79dpzJle41Pmhh4h7Zly52vGeDf0SCyoEicPemvphh6JhQH7j2hiil3R
I7Hw4N2SzbsVruiRWOj6YVaucbMLeiQWnvXZdCgx3wU9Egu3Pm6deKuPC3ok
FkLcL8eyXzmjR2LB4NbjkvwMZ/RILPgtFfQwDnRGj8SCzM6qz4ybTuiRWJjq
Vtjn/SQn9EgsODb3PDrC3gk9EgvmwybbPT3hiB6JhTCrjHtxOkf0SCxINg1K
fNvqgB4h/YfhJkjZ7oAeiYX4T+8+mwxwQI/EQtxQTnnBO3v0SCwI/zMXDFpm
jx4h/eGFxadv4fbokVhIXFjOFRbYoUdiYdrNXZvKPtqiR2Jhwgpeg4Jtix6J
hYd6udWP2TbokViwrt33fL/eGj0SCx2Zkf1nmlmjR2LBoqbRQyuzQo/Egn0P
21jZRkv0SCzcvHa9cPQrC/QIOd8/Z3ouD7JAj5DvY2b/d2+qOXokFk4yVh6M
LDFDj5D2fB+88ICBGXokFpqCPR6DwBQ9Egu277qsaF5jgh6JhQL78bNuPDVG
j5D26FUy8ZyfMXokFtYFDRxcMckIPcKHQ1n9nrWfMkSP8OHJqqYOZUcn9Agf
oOhi9k1+J/QIH5LCPARj1xqgR/jg8dQraEBJh556hA/3ApbOMBO366lH+BA2
/oG7++s2PfUIH1533nh61sy/euoRsp2bV+9j0aqnHuEDM/yEvPP233rqET7E
OLdnTOryS089wofJWYc8bG8266lH+HA5we2Q8aifdH0Xhw//jl69rWj+rqce
4UODwxDbX8ub6Hqvnnw4GV9g1OL7TU89wgfPKb6zds78Qtd/AR8yv85baLun
Xk89Qj6v0fN6VX2g68FiyefFh675mbzTU4/wYSqX5/Ogey1dHybjgzVz0fns
hy/11CN8yJPMMunU6wldL6blw/vq30EOBZV66hGyPztHD053qaDrx0bywbRw
+Sufz6V66hE+3Hjd99dY90K6niyBDyW3r0YMmL6XRz3Chz9r7v66m1bKox7h
Q6fRr9ds2HibRz3Ch3f7tz/5oqvkUY/w4awbb4yg9jGPeoS09/4dnR8nv+RR
j/Dh9GrzkFu/39D3Gi3kQ939E37R5+t41CN8aCmaH6z/7wOPeoT8Xr56nLxv
PY96hA/Lij6ZfWn7zKMeIfvXdDR27flGHvUIH/bc+XZ4e3QTj3qED+O8+pQ2
b/7Oox7hw7bMDa0Vv3/Q/NdtfHBuvNruq23mUY/woSw2cVrL8RYe9QgfRs4w
bB5k95tHPcKH+WM6uthP/EPzYov4sNJ9X42qvJVHPcKHlKM+2XY+bTzqEXJ8
IxY090/7x6Me4cPeicV3PlW103zZ83zoyih9behmQNfn6/kgdqzqL7xqQNfX
XuVD6p0R44RTO9H1+tf5UN+Sv9uQYUjX297iw9ug43HTyw3p+v27fOC+LP+U
n2JE198+5INw2rtDs5jGdD1/NR/0HdadzK8b0/W4T/jQOzlCIEsxoev7X/Ch
sWfQOyHDlK7PfcOHrNzb3VvLTOl6/zo+rHF6vnP4FDO6XvcjH6a9scxKcTOn
6/8/86FiYqukZ6k5Xb/7jQ+rJvSNOzrBgtYD/OBDwmmtyxN7S7qe9xfpf/3P
vj1WYknrA/7yYfvH65G9R1vR9b0d5PwPrx6VYmZN6wUMBfDA0P+Nttiarvc1
FUB89TtWvdqGLh+0FEBHv+iM0L82dP2vrQD2/O6R5lZgS+sJHAQwte5x6tHB
dnQ9sIsA4j7Y1P1ssKP1BR4CuDt6mMd0vj1dH8wUQMX3ik+XNtvTegNvAVwL
jN76+rM9XS/sL4C6wrZPNf0caP1BsACe9Xy6omC1A10/HCaAI1vdeFDrQOsR
ogTwOn3K+eNdHOl64i7k74fZXfy92JHWJ/Qg+z+moMOhxpGuL+4tgOmJA3jt
gU60XqGfACzPLO15cTauNx4gADPbufulN5xo/cJgAYydtll83N2Zrj8WCGCO
Y23thwnOtJ5BIgDTPhdDGkuc6XpkhQDyA+xeXzd3ofUNGgHI6tjXUoa40PXJ
QwRg278p/3OhC613GC4A6+3rGT1/udD1yqMFcKO6ykY92JXWP4wVQJLnGzbk
udL1y+MFkFE1YnDbW1daDzFRALxF4+yzuW50PfNUAXRanal4u9CN1kdMF8BI
3qUKm3tudH1zqgDWzF0xyIzlTusl5glg2NGnC+4lu9P1zukCGFxiAYkl7rR+
YpEAJu3+Krxt4kHXPy8hx7flYUK70oPWUywTQP356dqOHR50PfRKAbz71FF7
57MHra9YLYAfhzs/TOrlSddHrxfAaKsP9Q+XeNJ6i3wBlOvqfpo/9KTrpbcK
4JeDS4lVZwatv9ghgKEl9W1Pkxh0/fRuAZRuF6xIPcWg9RiFAtBfzY56acCk
66kPCmDW3pSjDmImrc8oFsBjF3hiv5FJ11cfF0C67a6Zz94wab3GadJ/Ms9I
UsJZdL31WQH49HRkP0xl0fqNiwLQrTz14V8pi66/vkzaU+fa/6dlZ1rPcY30
zyJPi1PqznQ99g0B7CjxsIHtnWl9R4UAEpc988z70JnWi90XQOubfIOTbC9a
71ElgMXmf1dsnetF68ceCWB2HmOV9IoXrf94Rvqv94CGcSbetJ7slQD+Ddvo
kRXiTetB3grgSuiVcysl3rS+7L0ADM2izsxJ8ab1IfXk9x0yfsXmedN6s68C
2N22YdzfEm9aL9JE2v/7wg9rn3vT+rNmAVyYk5Nka+BD60f+COCPrlvVZD8f
Wo/2j+zfgt4Oxwb70HoSAyHU1C+zfJzkQ+vTjIVQslR4sHaFD60vMRfCEJen
T+8f8aH1atZC+OR4Z+muhz603sROCOWbvubrmn1o/ZqTEBIHQ1ujmy+tP3ET
gh+jdcvE3r60no0hhFtjc8beGu5L61E6C6E1P6+f9QJfWt/mKwRVTIs7p8CX
1qcECmHKywsve171pfVuoUI4cD7qP793vrReJUIIV+puvfhm6kfr3zhC6NPO
+7Yz2I/Wr3QTwuaQ1J1dhH60Hq6nEKZ+WPZs/0Q/Ws8SLQT2n4pcg5V+tD4O
yPENKC/sXexH61sGkvNRxHHW3fOj9XKxQvAxNrii+eZH611EQuj6Qruju4M/
rZ+TCWHxjNWb/3Cw/kUlhJ85fXZtV/rTejqtkMxbjL0BM/xpPcww8nmvoLW5
6/xpfd1IIZz8kDPkyQl/Wh8zRgjxRvs+mFT503q7BCGs9raOcv7pT+tlkoQw
fevizsbOAbT+brIQ5s233FfdJYDWz6QI4Zmy4lS2KoDW480UwnOn8H6sGQG0
nmaOECw6LkWtWxtA6/P+E0LPuZK0+mMBtL5moRAmfn7o4PcggNbrZQohZ9/8
uuhvAbTeJksIv84U1/WwC6T1e8uF0PHgj5FzZCCtv8kVQkBAQNcH4kBaz7dW
CAJeyPipEwNpPc4GIRR+Yq/6uiyQ1vdtFsJ5003bpfsDaX3ONiH8mfota1V5
IK33KxBCUuWvvsfqAmm9zl4hMNcUnDhhGETr/w4IITPf4fkG7yBav1MkhF2D
th0c1i+I1gMeJf2x323HjrggWs9zkuyPVGW+eG4QrQ8sEcLlQZ0XfNoQROt7
zgtBWzVoYtTJIPQI+f5E58uaB0HoESF87GQya/jXIPSIEHb4XE2LsQpGjwgh
dW3oLcvgYPSIEMxksZrjA4PRI0I4Fadx7B0fjB4RwspdpS0F84PRI6R97vn/
/rQpGD1C+mOIxNrxdDB6RAjXZ3QN8XwYjB4hv3fFeJDh12D0iBAmDXPT3rII
QY8Iyf3vT+X0gBD0iBAsl6m4rRCCHhHCGqFnQ/zwEPSIEBziR8w8MDsEPSKE
3VWjrt1fG4IeEUJR+9rqR4dD0CMiSB+3YeulGyHoERG8X9PDcclbzHuyFMGu
HymRYe0h6BERXDo25dNR91D0iAieL1vcx7VLKHpEBIkHerDiJJgH5SGC/Vm9
shaMD0WPiOCxfsL0zEWYD+UtAuOG+48St4SiR0TQOPfg0ZBTmBcVLIKnucNa
bt8NRY+IoPuj6bskH0PRIyIYkHCsuLhTGHpEBFuWGbg0emKeVA8RnChKvWfb
NQw9IoIewdrHNpIw9AjZX2+b0M8JYegREShGdNMfSA9Dj4jA1n/92sEbw9Aj
Iqix89xx5UgYekQEzg21r1g3wtAjIhiX3U0+5HUYekQEGVsyG1J+h6FHRBC4
Nulwsn04ekQEVZOK1wwIDkePkP3fGLP+Dy8cPSKCG1cGHlulC0ePiGDJ+V91
xlPD0SMimDqwImzo0nD0iAhYX+MyVmwLR4+IYENj0rvtJ8PRIyIoba9VrL4d
jh4RwcXgF2Wja8PRIyLoe3BjH/s/WM+5SATl1+ed2G4XgR4RQcNet1DrwAj0
iAgW+gRvGxIdgR4RQUlhruViZQR6RARgq52WOyECPSIC2cRjFbPTI9AjItj3
5S8L1kegR0Sw8mTJmA8HItAjIrhSuHbTZH0EekQEI2XDLz+sikCPiODMIbsn
rvUR6BERcGzuvurVEYEeEYHN51dVfZwj0SMiiCw9eYYZEokeEUHl49qs530j
0SNk/7oGDUpTRqJHyPfrEhp/J0aiR0SwNLBwqSYtEj1C+t85ptWaVZHoERE4
9mbOP7Q7Ej0iAs1xnxd7zkSiR0TA/nw3bP7tSPSICFwHNSR1fRWJHhGBaOnY
/FvfI9EjIki4ICjhmUahR0Rwzbb61jqPKPQIOb6N8Q/Kw6PQIyJY13Pance8
KPSICO7M3ld6UxmFHiHtrbhbtCkhCj0igqFONev4c6LQIyL4yr4/uyYnCj0i
gkzWj2Ex26LQIyLo6buJt+pIFHpEDLu7QfC5y1HoETGEVy5zK6uMQo+IIeFh
b/vD76LQI2IY36+Py6xfUegRMax1ve2ca8xGj4hh9O3oYIUNGz0ihlmuW8qN
XNnoETG4btrRtLczGz0ihl3BLod6BLHRI2Lod+7Rz5IoNnpEDOnSqvshPdno
ETE4vjDvnwNs9IgYpsPi2Kd8NnpEDDk+ie89FGz0iBiS3r70Egxlo0fE8Dk3
qmV8PBs9IoaUSwcmpiax0SNiWLLsSMbMFDZ6RAwbpp3oO2YuGz0ihv38njt4
i9joETGYBj04YL2MjR4RQ6vYZ/TN1Wz0CPk+p+dls/LZ6BFy/I/KnjrsZKNH
xCB4W7xnWyEbPSKGgpHzAzyOsNEjYhB29xu9+DQbPSKGpxa7da8ustEjYnB2
s7MLvcZGj4jhWMCyZeMq2OgRMYTMGHArt5KNHhHD/O1pVfufstEjYjBbv/jQ
cXLLRD0iBuncC8qij2z0iBge5a+5k9fIRo+IoUOyyGtqCxs9Qj7/5ibu+Y+N
HhGD4ZVv2iYjDnqEnL+aUzGbLTnoETEYGXu7dnHgoEfE0Ha75cF5Nw56RAzj
+PZpXTtz0CNi4LkpXLb5c9AjYigcXLSnOZSDHhFDOfhF9ONw0CNieHDm2vHU
Hhz0iBis1x7rtaMvvn/pqBjuVTuWn4nhoEfEsCrPb3ipgIMeEUPTszCDszIO
ekQMjzcuOl2gwfc16cWQmZ2dOS+Ogx4Rw76Q4xNj4jHP4Dr5vh3zZ7QlctAj
YhDvnr1j7yTMN7hLvm9K75/9pnPQI2KQHJicemM25h1Ui8FTVR46YD4HPSKG
/sdNXYsyMP/ghRg29muPNs3moEfEYJu7bI98JeYh1ImhU/+1iuVrOegRMSz9
ais4vRHzET6L4Ya90eoHWznoETFMaEoPe1GAeQk/xPAyb4f3k30c9IgYPhzK
nXntEAc9IobmWRnhu45y0CPk+M9clEw9xUGPSGDgrlUvws9x0CMS4F9WvXl6
iYMekcC79ykj517loEcksNl95DDzGxz0iARupeU/zargoEckEDfgcN2v+xz0
iITME13Th1Rz0CMSOLn8YdGBJxz0iAQeGPZIbXjBQY9IIGkH6zWrloMekUDP
o5Jv8J6DHiG/x9xcpK7noEckIFW+8Rz6lYMekcBktk1/6XcOekQCwS2OAV1b
OOgRCVyO/FFh2cpBj0jg0Paz/R7+46BHJJDOnr8wpxMXPSKB329G5Xcx4aJH
JGBwLHfFHXMuekQCZ7L7jx1izUWPSGBl5HnfKjsuekQCI6MED8CJix6RwJaK
mFnbXbnoEQnM/mTj8sWDix6RAPO385lwFhc9IoHP7+/Hj/DmokfI8duUMRb4
cdEjEkhkpDWsCeSiRySQb7jyUV4IFz1CjvfD5vc54Vz0iAS62sq9UqK46BEJ
7L8Wn83nctEjEjihWxXs0I2LHpGAvLnA9HYPLnpEAsl7JoWk9uaiRyQwPaJi
o2NfLnpEAh3mhUN28rjoEQnMlHyZ7jWAix4h3781/8uqgVz0iAQeORTdaxrM
RY9IoCWyq/cgARc9IoHGW4PfLxNx0SMS6N9hGFIq4aJHJPDJZU3jBxkXPSIB
8Wzf/p2UXPSIBMLym/yt1Vz0iAS2fui/y1zLRY9IwPHiqNIWHRc9IoEpg3cu
rRnKRY9IwCU1vq0wjoseIdtNFiETR3DRIxJQ/zN39h7FRY9I4MrUmrLy0Vz0
iAR2bP4+YNQYLnqEfN7nfd6nsVz0iASakgdcS0jgokck0Dd75+PKRMwPfSaB
qaG7HnWZwEWPkP5i03RzSRLmib6VwBcD3pmbyVz0CGn/mkGFHRMxX7Se9FfF
9YKgyVz0iASsHFcW95+CeaNNEti9bEK1ZCoXPULGXx23s3ga5o/+Ie3bWrE6
OoWLHpGAZT+vbl7TMY/UQArLDno4/STb1CNSiDxxgnt+Bhc9IgUT7uctM2dy
0SNSeKS9qfWexUWPSCF0w5CJl8g29YgUBuUXv5Gm4vuF3aTQP/jD5Qdkm3pE
CiF+Ac6xs7noESl4jV/7uphsU49IYfWVUVEWc7joESmkvC0z15Jt6hEpZA82
mJVHtqlHpKAP1P13nWxTj0hh8SSXoM9km3pECl22rZxvNJeLHiHHe8s924Zs
U49IITjDVWZJtqlHpOB98fPTP+TvqUfI790z6/qcbFOPSKHzkKdjjpFt6hEp
/Ip6MXUu2aYekUKPYavGdiXb1CPkfP2YNbiWHB/1CDkeP6ZPJtmmHpGCj4VT
myvZph6RQlJx06tt5HxRj0jBt0Vd7Ua2qUekkL7iVd1icr6pR6Rg96iX2zvS
PtQjUnhZ5zCr50wuekQKy0cyzBaQ9qQekcLcVLuaEtLe1CNSsHxSVP+O9A/q
ESm82npGYkq2qUekEN7lj5kn6U/UI1KwHwK+PqS/UY9IocMwfi+D9EfqESl0
03XdbEH6K/WIFLqvz7domIh5R2ulMNQ0pU1P+jv1iBRG/tqblp2E+UebpeC0
w3/1QDJeqEekYOT8asDP/3+/Y4EUONEVWzeS8UY9IoUXFz/sixyH+UgHpDDs
Gyf5LBmv1CNS+FpxpLFHPOYlHZXCuVfJcJCMd+oRKZzsmZJgPxLzk0qkcHB4
9fjk4Vz0iBSU3YvlJcMwT0kvhUQzt5DWIVz0iBRuD41qjSLzD/WIFG5887wz
VMNFj0gh5lynQ7NVXPSIFBxL7bYtU3DRI1KQecwqWkXmP+oRKVx5llC7jMyP
1CNSkNt48ueQ+ZN6RAppeXfeDyPzK/WIFD5Fll7nxHLRI1JoH9LtZxuZn6lH
pPCfYOasC2T+ph4h7fHyunoacNEjUriZm77FvR8XPSKFcSPrlaf6cNEjUth2
Z/Tiwb246BEpqCt696rozkWPkM8PVc0b3JWLHpHBBbtc5SkOFz0ig7Damzfd
yfWKekQGRTFfP00j1zPqERkkp4+7cJFc76hHZOD7O1/YQa6H1CMyGOH/d1s3
fy56RAanU//pR/tw0SMyCNG4nFvYmYsekcF0y/N5eQwuekQGc0qShu9w56JH
ZHBZuMNtuwsXPSKDPxOe31/jyEWPyGBR0p4188j1n3pEBlYD5/+fD6hHZBCz
uFEWZsFFj8ggK3rp6B/EF9QjMtj3++72o4Zc9IgMThwd6jy2g4MekcGL8yW3
LNs46BEZDL268Hbhbw56RAZDTvG9ezdz0CMyMC058PByEwc9IoPNTN7nfsRL
1CMymKbcl3qMeIp6RAbcp+lpHh846BEZWPRKNp79loMekcGbBivGrVcc9IgM
Tg2zuOn4nIMekcHH2xbuiscc9IgMDutOOyyp4qBHZJD27Ky+mPiQekQGy7+U
ht0lfqQekcH4+3NHvSW+pB6RQUbi+nFfyzjoEXL8AVcGNpZy0CMyuGh12uL9
BQ56RAaJq/0vPizhoEdk8Hnz1QmnTnLQIzIwmyV0zSUeph6RQdullHvDizjo
ERmsGPtjm89+DnpEBs3Lc5Y/381Bj8jg37ofBSt3cNAj5Py0N9R33cJBj5D2
Hc+d9nADBz0iIz5e2idxLeaNF8ugqX6/9hvxP/WIDJbFxd2etgzzx0/LoPfo
0bs/LOagR2RQNzHto3oh5pFflIFj+bQ9JWkc9IgMZi8weeM4G/PJr8kgNbGj
cCy5X6EeIePpr7/RocmYV14hg1eJfds+TuCgR2TgMNF+G2sc5pdXyeBZXGIj
fxQHPSKD9w7m/5KHcdAjMnjw6tK9THJ/RT0iA6csdco6OQc9IoP68HUNm0Qc
9IgMtLJB/I2DOegRGXif67ZmeX8OekQG39Oi7qdGc9AjMpj17J/tUHI/SD0i
g3TxJB2Xy0GPyECUMPiEYQQHPSKDm5W68FtBHHr9NZDDO+Wkimxf9LyhHBp3
yLb1Y3Ho9dhYDsbT7uxvcMPxZCqHrIRjv1c5cuj12UwOB0yubwizwfFlIYff
h5+suGTGoddrKzl0LDtZxzfE8WYjh6/ZvvtvteHzBDs5qFVfX8f8YtPx5yCH
OqjNP9mEzxec5ADSG0+Yn9l0PLrI4Zlj8uH/3uPzBlc5vDy9mlX1mk3Hp7sc
vD8Zd/V7hs8fPOUQVJ3bmlTNpuOVKYfuHi3z9t/D5xGd5TD+Qif9y5tsOn69
5fDQf8596zJ8PuErh6s2Xme5l9h0PPvJoXn++Qx5CT6vCJDDm4sOPRKPs+n4
DpKDi/TdqxlF+PwiRA5bXvxeOncfm473MDkkgm332TvxeUaEHB4kvG+ZtJlN
x3+UHEJk/SuHrcfnGxw59Dd9WQW5bDofcOXgun6eiVc2Pu/oKod5vyqnNC9i
0/mhO/k+xj7PsjR8/tFTDjX3Djkun8Wm80VvOUy9sH20cCo+D4mWk/HUw9Yw
iU3nj35yMGkMDzg+Bp+PgByOzO52ZNhwNp1P+pP9KTI5/VeDz0ti5JDyTR6T
J2PT+WWQHGzEN0cHCfD5Sawc/Md4uR8fgO8jEJDzP8FwRrdofJ4iksNslnfa
sW5sOv9I5OBxxb93YBSbekYqhwLb82fXBeP7C+RykIWtMGr1YVPfKOWQU8jz
Gcpg0/lJLYcRKWnMY85s6h2tHNoq3rZ3ssX3HQyRQ5yY8VBkxqb+GSaHm+VX
duQasOn8NVwOfQq+167/EUU9NEIOLxJKCtrfRdH5bJQcCsttVg17HEV9FE/a
81fApf23ouj8NlYOvcexB3y6EEW9lCCHhIIhkcwjUXS+Gy+H0LjyvP4FUdRP
SXKoGLRt+dB1UXT+S5bDNpt/vuOWRFFPTZJDWGynqfGzo+h8OEUOC0ZdzlAk
RVFfTZND6gp5Ste4KDo/TpdDl4sXJZaSKOqtmXLYk+MUVtkvis6XqWR8BA9h
rmJHUX/NkUNn9cqu/Xyj6Pw5Vw6dBEeXvnaKoh5LI+fv8NmAVJMoOp/Ol4N1
9jb/jpZI6rMFcrAME21I+4jPnxfJoTr08MqGJ5HUa5lyWCM+wJLdxufRS8j3
zfYeuu9CJPVbFjm/+78qmw7j8+ls0h9f17PYOyKp53Lk8J/bh4oxq/F59Qo5
WEUdnb5sUST1Xa4cIt7a+O6Zjs+vV8th2IUrX46PjaTeW0vOV6cVH0+p8Xn2
etI/D/oEHB4USf2XJwd3effT+d3x+fZGOaz1nV08JyiSenATGb+PlntL3PF5
9xYyP2139XK1iKQ+3EZ+3/nkhco/EXR+3yGHR5y/VkvrI6gXC+SwIma+V8Sz
CDrf7ybz4eNrFjdvR1A/7pHDpZJhL4ZeiKDz/z45eFWeL3pVFEE9uZ+Mt25j
c4Zti6DXg4Ny8G0ry761MoL6soj0n1jZuaj0CHp9KJbDhshkTs6UCOrNo+T4
j842eDoygl4vjslh68HKXl6yCOrPE3LYfKuycSgvgl4/TslhaMb1rjlREdSj
Z8jx//3ledQrgl5PzsrhttX+k7ftIqhPz8uhMsjZ+UVHOL2+XJST+5XporrG
cOpVvRy04d8nvXkVTu9/S0l/OXohp+peOPXrFTL/j/x5+qI+nN4Pl8lhjOsp
o21Hwqlny+VQZuecOX1HOL0/vkHm+7tesf1WhVPf3pLDBI/X8QYLwun9cgVp
3wbNu5Ip4dS7d0n7Jqe9HT8ynN4/35NDz+cxU2yk4dS/D8jxbtmy8UDfcHo/
XSmHdZYTUqIjwqmHq+UQvjzLppwZTu+vH8nhWMqD+YOtw6mPn5D2+utSdfFv
GL3ffiaH4AGdfcMbwqiXn5PrZdeiuWuehtH775dySM6e9/nLzTDq59dy+HYs
ekX/s2H0fryW9IfH25NX7A+jnq6Tw747gzbd3RhG78/fk/NjcC/EPCuM+voj
uX7Nuh/RKzWM3q/Xy6H8/OPT8Qlh1NsNZH/eTqlZpA6j9+9f5PA0xXH7phh8
v02jHL4M6+N1gBtG7+eb5DDp59CJR33w/yt/yGHvl5p1R+zD6P19MzmeQU4H
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
9hetX56mgthbK40ba1t41CNkPDJTGBPHtNB65pkqcF+++yKjtplHPaIC8f4Q
u05jmml98xxyfN/LujBqf/KoR0j7Nf+QJo/5Seud01SQP+t75tfaHzzqEbK/
K882F479waMeUUH7447yDXXfedQjZH7Y2MvzfMJ3HvWICqor8x1cPjTxqEdU
sGSpzb09E5p41CMqGHZp0Mzk+m886hEVbCw77Js46RuPekQFhktft0S9aORR
j6hgTOXnfga1X3nUIyr4GnJ/ZN8PX+j7aVaroOC9buOHz5951CMq+KS9F9zx
vYFHPULmI2MD1eI/9TzqERWsMeJqZhvU0/fZbCT9u0/4lMdmn3jUIyr4cqbr
80K7jzzqETI/fbd/8c7tA496hOyvl2nxWu/39P03O1TQlP5keXHIOx71iApW
77l/vFeXOh71iAr63jg2smvftzzqERUsdiy7tT22lr4vZx+Z7+rvceYq3/Co
R8h4HOB19+qI1zzqERUMuPv3+L+HL3nUI2R78wxPTcNz+n6dYhVMujB4YK7x
Mx71iAo0qxkFBzo/4VGPqOBy3vadhb0e8ahHSP+3yTyWramm7+M5pYITeZn9
JdMredQjZL6+MeZi86oHPOoRFUwofuRjMuIej3pEBXnq95KPW27T9/dcVEFh
6+GHec+v86hHVLD3b8ciW68yHvWICjIfXg1TjS3lUY+o4PHhb31uKs/S9/2U
kf73M0mQVXuMRz2igqluRcFlDXt41CMq4M6ZnPwkkb59LfaWCsx+paZFjVmj
px5RwdIEnu3umYV66hEVPDeJHDzT/YSeekQFlpPSN3+ffk5PPaIC+38+me/q
SmleRaUKJipPm6XnlumpR1TAGH3Pa0D3GzS/4pEKuvAYjpznt/XUI6R/nfYJ
Ei68R/Msnqng6PwC9eA1D/TUIypw7B73PS2+kuZbvCTXnwNl666xq/XUIyoY
e+/ua9+OGpp3UauCrSp1xrqKx3rqEfL339193TY9pfkX71Vwv+ZG8uFxz/XU
Iyrwb/tlpo16SfMw6kl/zfbZZ//nlZ56hHz/RtXcr69f03yMLyqwGfhR8qLs
jZ56hJyPPgn71ftraV5GE7l+8ipHq5e/1VOPqGCP82HZ88l1ND+jWQWDo15J
Psve6alHSPvFX++6mPOe5mn8VkH6iq4vdzt+0FOPqGCmKNFf9OMDzddoI/1j
r3Xt3MqPeuoRFQjOx36POvGJ5m0YqEE7s5A9eW29nnpEDbZRYXM5KQ00f8NY
DQlT+u//T/ZZTz2ihuTs65ulEV9oHoeZGvaoLSILLb/qqUfUMOZpKW/ph680
n8NKDZYdLsUNVxv11CNqCPW8d6hB9o3mddipYaBT8co9F7/pqUfUMOTUqEne
YU00v8NJDSNcH/YYld+kpx5Rw4MpIa9Hm3yneR6uaij/ptcETP+upx5RQ8P2
gGVFL7/TfA9PNeT5eU9sEf7QU4+ooazw4GfDMz9o3kdnNfgebG5/4PtTTz2i
BvOaxHVjc3/S/A9fNcx6mr/lzJ+feuoRNVj3j7O4O66Z5oEEqMFm0PG7++41
66lH1CA+WPOif+8WPfWIGgLXdwvZsadFTz1Cvm/4tN2XbH/R91FFqCEjeThv
55xfeuoRNfy2MPoWU/tLTz2ihqr+BfsPiH7rqUfUoD5UOPzByd/0/VVd1fCR
f67jHOuPnnpEDZ1HHF2SuPSPnnpEDWv7r6+t/PpHTz2ihhd9d1sa6fB9V9Fq
WDRS8v3HpVY99Yganoi65e4L/KunHiHnw4dd6Zn7V089ooYPAwadljf/pe/H
ilFDS/ficP7wNj31iBok82rCOl1t01OPqGH5kLgDaSH/9NQjarh7xWrLmVX/
6Pu0RGooCPzYcrL5n556hBz/QN8TM+La9dQjpH0sWOU/Stv11CNquDZqUmC3
wA499YgaHttU3+qxvENPPaKGnVnig38bO/TUI+TzsW0jINSA5iUNUcNPx/y0
scMNaP7aMDX023ghZHyuAc1PGq6G9OhB40SlBjSPbYQaingBQfbfDWie0ig1
zDk3fsopv040ny2etE9uVPc+mk40X2msGuYqz8wrWNqJ5rUlkPburej58Uwn
mrc0Xg1nTMdPtPvUiea3Jalhx5e59m6ehjR/KVkNK7N8/TuEhjTPbZIaUs/Z
776eZkjzmKaQ79trlTOtyJDmu01TQ+KKpuo/zw1pPtN0NaRdPZM51saI5r3N
VMPzzcmrD/c1onlNqWoAYcSfR5ONaP7bHDWsft7rfO02I5rfNFcNyxhvKu/c
MaJ5cGlqGJ2WA5v+GdE8p/lqmGh6sn1ghDHNh1ughlv871YPhhvTfKdFanCJ
/pbQd4UxzYvLJOOly1TLnPPGNO9piRoE1wb/Ol1vTPPjstTw69y40DIPE5r/
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
DTrdsr76wKVgUfco84reLqY/jQUFQQdWF62u75L11QtLCpIcjVfVF3Yx/Wqs
KFAZOPTGzuwuWV/96EfB6+aYy7qvu5j+Nf0peH+H5349pUvWV0/IuMDe9+mc
G11MP5sBFIyPePCr7HSXrK++DKTg/I1Jd6MOdzH9bQZRYH7i7+SZwV2yvnoz
mAL91Zc3N27AfjdDKHjrsH7FHbpL1ld/hlKQ7GansM4N+99YU/App8jVdm6X
rK8eDaNAZ9Aal+6JXUw/nOEUnIxJac8Y1iXrq08jKJgc92DJFU4X0x9nJAV3
cl2X7dLqYvptjaKgNydA0bOnk+mXY0NBDl9N6FjXyfTfGk2uv02rYGJhJ9M/
h4ybYJjC8OxOph/XGAoSTocuHvC6k+mnM5aCMGnVrH4PO5n+XOMomPBlYc7A
m51Mfx1bcr7LQvVHne1k+nWNJ9dnzZaqKUc6mX47dhTMTVVfuXhXJ9O/awKZ
Xw2rPav8O5n+OxMp+LAwZtpBr06mn9ckCtIjnI4lLO+U9fnKnoIGnaH7chd0
Mv29JpP9ZttrqDG1U9bnrSkUGO59MBVsOpl6OZVc3+dDurb365T1+WsaBY/e
j3R/qt/J1E8ytvvv8mwlpU5Zn8emU3A43eu1a0sHU09nULByzaI/l8s7ZH0+
m0mBotOYgx0/O5j6ChRsnFGe7pHRIevz2iwyv87Ox1JlHUy9nU3Bs1S7uoHJ
HbI+vzlQMK0rIC/qSgdTf+dQ4PAi303pRIesz3NzKfhRv4i382AHU4/nUeCU
FF7Wub1D1ue7+WS/Cfzkdq3vYOrzAgoGhmdeUqc7ZH3ec6TgC2fT+5NuHUy9
XkjBpgG2gTbzOmR9/iNjQeuP22/sO5j6vYiCkIl2Xr4jO2R9HnSi4Oljo/Na
Vh1MPXemQD5+Hj9Fr0PW50MXUn/o2BhfxQ6mvi+moDomy8WypV3W50VXUl8n
Pt2XU97O1PslFBTuGT71VF67rM+PSyloVfyzWprZztR/NzJ/B+OMRr5ol/V5
0p3Um/GzJ3Xda2fuB8so4Kzf/fnLtXZZny+Xk/rQbF2YcKqduT94UDA4u9M3
6nC7rM+bPApG+abRW0PamfsFGQ8QQ+YK/3ZZnz/5FEx9OPn2Mu925v4hoMA5
y6/Didcu6/OokIJ6l1spjovamfuJiNSvKfGFi2a0y/p8KqZAq2Z4kNu4dub+
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
rzKUDaZMPkLchaauQbv4BzO7m2E=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.400929959253691*^9, {3.400930061540773*^9, 3.4009300869473057`*^9}, 
   3.4009301704874306`*^9, {3.400930203274576*^9, 3.4009302182461042`*^9}, 
   3.400930249270715*^9, 3.400930319591832*^9, {3.400930632391616*^9, 
   3.4009306573575153`*^9}, 3.400930811429059*^9, 3.4009308569645357`*^9, {
   3.400930940484632*^9, 3.4009309536635823`*^9}, {3.400931119492032*^9, 
   3.400931127153048*^9}, 3.4009311943496723`*^9, {3.4009313495828867`*^9, 
   3.4009314989676914`*^9}, 3.4009315816365633`*^9, {3.40093161290152*^9, 
   3.4009317177122307`*^9}, {3.400931750569477*^9, 3.400931886414813*^9}, {
   3.4009319711065936`*^9, 3.400932064581003*^9}, {3.400932154380128*^9, 
   3.400932168830907*^9}, {3.4009322003161807`*^9, 3.4009322675628767`*^9}, {
   3.4009322976461344`*^9, 3.4009324233769264`*^9}, {3.400932492265984*^9, 
   3.4009325688360863`*^9}, 3.4009421787144127`*^9, 3.400947971934654*^9, 
   3.400948051388904*^9, {3.4009501759839215`*^9, 3.400950190464744*^9}, {
   3.4009528042732162`*^9, 3.40095284008471*^9}, {3.400953369716283*^9, 
   3.400953523727741*^9}, {3.400953599947339*^9, 3.4009536273767805`*^9}, {
   3.400953721341896*^9, 3.400953765635587*^9}, {3.4009537995944176`*^9, 
   3.400953892628194*^9}, {3.4009539409376593`*^9, 3.4009540190599937`*^9}, {
   3.4009542233437395`*^9, 3.4009542615586896`*^9}, {3.400954297900947*^9, 
   3.400954311901078*^9}, {3.400954705987747*^9, 3.4009547541469965`*^9}, {
   3.400954803277643*^9, 3.4009548094465137`*^9}, 3.4009548460291166`*^9, 
   3.400954882932181*^9, {3.4009549905769663`*^9, 3.400955012157998*^9}, {
   3.400955054328637*^9, 3.400955144638496*^9}, {3.4009551899636707`*^9, 
   3.4009552341271744`*^9}, {3.4009553909827213`*^9, 3.400955403660952*^9}, {
   3.400957375756686*^9, 3.4009574132506*^9}, {3.4009574451464643`*^9, 
   3.4009575270041695`*^9}, {3.4009575711176014`*^9, 3.400957657401672*^9}, {
   3.4009578100812144`*^9, 3.4009578346064796`*^9}, 3.4009578807528353`*^9, {
   3.4009600462767057`*^9, 3.400960066115232*^9}, {3.4009869395985165`*^9, 
   3.4009870511288896`*^9}, 3.423235012043416*^9, {3.423235044224416*^9, 
   3.423235079744416*^9}, {3.423236825991416*^9, 3.423236848412416*^9}, 
   3.423236890029416*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1fl92B/2+cw5/w9f7N5j\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "[", "n_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"En", "[", "n", "]"}], "/", "M"}]}], ")"}], "^", "2"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"Z", "^", "2"}], "*", 
      RowBox[{"a", "^", "2"}]}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"r_", ",", "n_", ",", "k_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"r", "^", "gamma"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"lambda", "[", "n", "]"}]}], "*", "r"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1", "+", "gamma"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"En", "[", "n", "]"}], "/", "M"}]}], ")"}]}], "-", "k"}],
         ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}]}], 
     ")"}]}]}], ";", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"r_", ",", "n_", ",", "k_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"2", "*", 
       RowBox[{"M", "/", 
        RowBox[{"En", "[", "n", "]"}]}]}], "-", "1"}], "]"}], "*", 
    RowBox[{"r", "^", "gamma"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"lambda", "[", "n", "]"}]}], "*", "r"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1", "+", "gamma"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"En", "[", "n", "]"}], "/", "M"}]}], ")"}]}], "-", "k"}],
         ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"1", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "/", 
  RowBox[{"f", "[", 
   RowBox[{"1", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400931595957155*^9, 3.400931603838488*^9}}],

Cell[BoxData[
 RowBox[{"-", "274.0683506328937`"}]], "Output",
 CellChangeTimes->{3.4009316041489344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Randbedingungen", "Title",
 CellChangeTimes->{{3.4009456458298798`*^9, 3.400945652599614*^9}}],

Cell["r << 1", "Subtitle",
 CellChangeTimes->{{3.400945774544963*^9, 3.400945776387613*^9}}],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.400945633602298*^9, 3.400945637107338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{3.4009509680228176`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{3.400958183137643*^9, 3.400987450312888*^9, 
  3.400988139804328*^9, 3.4009963465350275`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", 
          RowBox[{"(", 
           RowBox[{"2", "-", "En"}], ")"}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"En", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.400998443410186*^9, 3.4009984451326623`*^9}, {
   3.423284699790286*^9, 3.423284721651286*^9}, 3.423284777165286*^9, {
   3.4232881845102863`*^9, 3.4232881845622864`*^9}, {3.4232886580632863`*^9, 
   3.4232886729762864`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"s", "+", "n"}], ")"}]}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", "[", "n", "]"}], "-", 
         RowBox[{"a", "[", "n", "]"}]}], ")"}], "*", 
       RowBox[{"L", "/", "En"}]}], ",", 
      RowBox[{
       RowBox[{"b", "[", "n", "]"}], "+", 
       RowBox[{"a", "[", "n", "]"}]}]}], "}"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "x"}], "*", "L"}], "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.400942218441538*^9, 3.4009422462415123`*^9}, {
   3.400942288612438*^9, 3.400942289854224*^9}, {3.40094492128804*^9, 
   3.40094492304056*^9}, {3.4009449752055693`*^9, 3.400944981094037*^9}, {
   3.4009984105529394`*^9, 3.4009984548165874`*^9}, 3.4009985537188015`*^9, 
   3.423238292328416*^9, {3.423238853878416*^9, 3.423238853886416*^9}, 
   3.423239239577416*^9, {3.4232848910312862`*^9, 3.423284924519286*^9}, {
   3.4232849771992865`*^9, 3.4232849816882863`*^9}, 3.4232850851192865`*^9, {
   3.4232851155442867`*^9, 3.4232851190892863`*^9}, {3.4232852166232862`*^9, 
   3.4232852212632866`*^9}, {3.4232853017872863`*^9, 
   3.4232853578722863`*^9}, {3.4232860212202864`*^9, 3.4232860455242863`*^9}, 
   3.4232861578952866`*^9, {3.4232862268152866`*^9, 3.423286239474286*^9}, {
   3.423286274630286*^9, 3.423286282948286*^9}, {3.423286467698286*^9, 
   3.4232864943692865`*^9}, 3.423286626262286*^9, {3.4232867119752865`*^9, 
   3.4232867128982863`*^9}, {3.4232867617072864`*^9, 
   3.4232867879052863`*^9}, {3.423287021882286*^9, 3.4232870250462866`*^9}, {
   3.4232871507672863`*^9, 3.4232871512382865`*^9}, {3.4232874473342867`*^9, 
   3.4232874693482866`*^9}, {3.4232875342732863`*^9, 
   3.4232875611792865`*^9}, {3.4232875933012867`*^9, 
   3.4232876231542864`*^9}, {3.423287751698286*^9, 3.4232877948392863`*^9}, {
   3.4232878462012863`*^9, 3.4232878579762864`*^9}, {3.4232879050652866`*^9, 
   3.4232879053662863`*^9}, 3.423287940137286*^9, {3.4232879837252865`*^9, 
   3.4232879868392863`*^9}, {3.423288677611286*^9, 3.4232887020362864`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "/", "x"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.423287036802286*^9, 3.4232870401782866`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"u", ",", 
              RowBox[{"r", "[", "x", "]"}]}], "]"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"r", "[", "x", "]"}], ",", "x"}], "]"}]}], "-", 
           RowBox[{"D", "[", 
            RowBox[{"u", ",", "x"}], "]"}]}], ")"}], "/", 
         RowBox[{"x", "^", 
          RowBox[{"(", 
           RowBox[{"s", "-", "2"}], ")"}]}]}], "/", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "x"}], "*", "L"}], "]"}]}], "*", "En"}], 
      "]"}], ",", "x"}], "]"}]}], ";", 
  RowBox[{"g1", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4009421893997774`*^9, 3.4009422140652447`*^9}, {
   3.4009422958828926`*^9, 3.4009423156813617`*^9}, {3.4009423745359907`*^9, 
   3.400942376318554*^9}, {3.4009426337687488`*^9, 3.400942655179536*^9}, {
   3.400942688627632*^9, 3.4009428007588687`*^9}, {3.40094480687352*^9, 
   3.4009448593690047`*^9}, {3.4082554141736097`*^9, 
   3.4082554263010483`*^9}, {3.408255543259226*^9, 3.4082556087333727`*^9}, 
   3.4082556651845455`*^9, {3.423238293023416*^9, 3.423238295482416*^9}, {
   3.423238327753416*^9, 3.423238335934416*^9}, 3.423238869476416*^9, 
   3.4232392417704163`*^9, 3.4232849659912863`*^9, {3.4232850764362864`*^9, 
   3.423285093698286*^9}, {3.4232851442012863`*^9, 3.4232851451002865`*^9}, {
   3.423285231066286*^9, 3.4232852596082864`*^9}, {3.4232865054422865`*^9, 
   3.4232865067342863`*^9}, {3.4232866300322866`*^9, 
   3.4232866301662865`*^9}, {3.4232867217472863`*^9, 
   3.4232867497012863`*^9}, {3.423286798151286*^9, 3.4232868302082863`*^9}, {
   3.4232868705082865`*^9, 3.4232868908482866`*^9}, {3.423287029953286*^9, 
   3.423287077974286*^9}, {3.423287153283286*^9, 3.4232871538582864`*^9}, {
   3.4232874773962865`*^9, 3.4232874777992864`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "En", " ", 
            RowBox[{"b", "[", "n", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["En", "2"], " ", 
            RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"1", "+", "n"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
            " ", "k", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "n", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "-", 
           RowBox[{"a", " ", "Z", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k", " ", 
            RowBox[{"b", "[", "n", "]"}]}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "n", " ", 
            RowBox[{"b", "[", "n", "]"}]}], "+", 
           RowBox[{"a", " ", "Z", " ", 
            RowBox[{"b", "[", "n", "]"}]}], "-", 
           RowBox[{"2", " ", "a", " ", "En", " ", "Z", " ", 
            RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"En", " ", 
           SuperscriptBox["x", "n"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "En", " ", 
              RowBox[{"b", "[", "n", "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["En", "2"], " ", 
              RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}], 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}], "-",
         
        FractionBox[
         RowBox[{"En", " ", 
          SuperscriptBox["x", 
           RowBox[{"1", "+", "n"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ",
              "k", " ", 
             RowBox[{"a", "[", "n", "]"}]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ",
              "n", " ", 
             RowBox[{"a", "[", "n", "]"}]}], "+", 
            RowBox[{"a", " ", "Z", " ", 
             RowBox[{"a", "[", "n", "]"}]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ",
              "k", " ", 
             RowBox[{"b", "[", "n", "]"}]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ",
              "n", " ", 
             RowBox[{"b", "[", "n", "]"}]}], "-", 
            RowBox[{"3", " ", "a", " ", "Z", " ", 
             RowBox[{"b", "[", "n", "]"}]}], "+", 
            RowBox[{"2", " ", "a", " ", "En", " ", "Z", " ", 
             RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.408255426571437*^9, {3.408255547074712*^9, 3.408255608993747*^9}, 
   3.408255665795424*^9, {3.4232379408044157`*^9, 3.423237948636416*^9}, {
   3.4232382970284157`*^9, 3.423238306130416*^9}, 3.423238337419416*^9, {
   3.423238855182416*^9, 3.4232388700204163`*^9}, {3.423239242239416*^9, 
   3.4232392446064157`*^9}, 3.4232847423482866`*^9, 3.423284778408286*^9, 
   3.4232849281382866`*^9, {3.4232849667862864`*^9, 3.4232849877582865`*^9}, {
   3.4232850786762867`*^9, 3.4232851459002867`*^9}, {3.423285226231286*^9, 
   3.4232852599612865`*^9}, {3.4232853081562862`*^9, 
   3.4232853591492863`*^9}, {3.4232860251682863`*^9, 3.4232860482922864`*^9}, 
   3.4232861604042864`*^9, 3.4232862407012863`*^9, {3.4232862757782865`*^9, 
   3.4232862842272863`*^9}, {3.4232864698602867`*^9, 3.4232865071932864`*^9}, 
   3.4232866309312863`*^9, {3.4232867461722865`*^9, 3.423286750564286*^9}, {
   3.4232867806092863`*^9, 3.4232868304542866`*^9}, 3.4232868914442863`*^9, {
   3.4232870520272865`*^9, 3.4232870782982864`*^9}, {3.4232871543012867`*^9, 
   3.423287157479286*^9}, {3.423287458710286*^9, 3.423287478290286*^9}, {
   3.4232875447702866`*^9, 3.4232875630482864`*^9}, {3.4232875983412867`*^9, 
   3.4232876280602865`*^9}, {3.4232877553312864`*^9, 3.423287797408286*^9}, 
   3.4232878606822863`*^9, 3.4232879081752863`*^9, {3.4232879423522863`*^9, 
   3.423287960375286*^9}, 3.4232879926692867`*^9, {3.4232881929942865`*^9, 
   3.4232882002652864`*^9}, {3.423288691019286*^9, 3.423288704637286*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"En", "-", "1"}], ")"}], "*", "Z", "*", 
    RowBox[{"a", "/", "L"}]}]}], ";", 
  RowBox[{"L", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "En"}], ")"}], "*", "En"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.4232882324172864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"g1", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "n2"}], "}"}]}], "]"}], "/", 
          RowBox[{"n2", "!"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n2", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"g2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4232389609104156`*^9, 3.423238967189416*^9}, {
   3.4232852656432867`*^9, 3.4232852736552863`*^9}, {3.4232853682892866`*^9, 
   3.4232853713152866`*^9}, {3.423286532920286*^9, 3.4232865540242863`*^9}, {
   3.4232868961152864`*^9, 3.4232869010232863`*^9}, 3.4232870847602863`*^9, {
   3.4232875087122865`*^9, 3.4232875131682863`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
       RowBox[{"b", "[", "0", "]"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "En", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       RowBox[{"b", "[", "0", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", "k",
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"a", "[", "0", "]"}]}], "+", 
          RowBox[{"b", "[", "0", "]"}]}], ")"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"a", "[", "0", "]"}]}], "+", 
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"2", " ", "En", " ", 
           RowBox[{"b", "[", "0", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "1", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a", "[", "0", "]"}], "+", 
              RowBox[{"b", "[", "0", "]"}]}], ")"}]}], "+", 
           RowBox[{"a", " ", "Z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a", "[", "0", "]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", 
               RowBox[{"b", "[", "0", "]"}]}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "-", 
          RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"a", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "2", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "1", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "1", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "3", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "2", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "2", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "4", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "3", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "3", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "5", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "4", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "5"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "5", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "5", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "6", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"5", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "5", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"5", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "5", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "6", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "6", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "6", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "7", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "6", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "6", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "7", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "7"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "7", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "7"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "7", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "8", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "7", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "7", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "8", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "8"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "8", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "8", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "9", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "8", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "8", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "9", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "9"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
           "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "k"}], "+", 
           RowBox[{"a", " ", "Z"}]}], ")"}]}], " ", 
        RowBox[{"a", "[", "9", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "9"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "+",
           
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}], "-", 
          RowBox[{"2", " ", "a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"b", "[", "9", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
        RowBox[{"b", "[", "10", "]"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"9", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
            RowBox[{"a", "[", "9", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"9", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
              "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], 
               " ", "k"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "En"}]}], ")"}], " ", "Z"}]}], ")"}], " ", 
            
            RowBox[{"b", "[", "9", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
            RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4232383462974157`*^9, {3.4232388674074163`*^9, 3.423238870773416*^9}, {
   3.423238963707416*^9, 3.423238967443416*^9}, 3.423239245196416*^9, 
   3.423284743295286*^9, 3.423284778913286*^9, 3.423284994165286*^9, 
   3.4232850993062863`*^9, {3.4232851363672867`*^9, 3.4232851471402864`*^9}, {
   3.4232852276202865`*^9, 3.4232852739322863`*^9}, {3.4232853101242867`*^9, 
   3.4232853718122864`*^9}, 3.4232860526592865`*^9, 3.423286161618286*^9, 
   3.423286242427286*^9, {3.423286276835286*^9, 3.4232862847152863`*^9}, {
   3.4232864718982863`*^9, 3.4232865080282865`*^9}, 3.4232865545832863`*^9, 
   3.4232866318442864`*^9, 3.4232867576972866`*^9, {3.4232870831232862`*^9, 
   3.423287085097286*^9}, 3.4232871591872864`*^9, {3.4232874608772864`*^9, 
   3.423287513882286*^9}, {3.4232875461522865`*^9, 3.4232875634952865`*^9}, {
   3.4232875990872865`*^9, 3.4232876286792865`*^9}, {3.423287756262286*^9, 
   3.4232877976972866`*^9}, 3.4232878632492867`*^9, 3.423287908920286*^9, {
   3.4232879428992863`*^9, 3.4232879606592865`*^9}, 3.4232880022772865`*^9, 
   3.4232882011432867`*^9, 3.4232882355832863`*^9, {3.4232886944702864`*^9, 
   3.4232887072542863`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], "-", "k"}], ",", 
      RowBox[{"a", " ", "Z"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", "Z"}], ",", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "k"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.423238886036416*^9, 3.423238927916416*^9}, {
  3.4232392525464163`*^9, 3.4232392550984163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["k", "2"]}], "+", 
  SuperscriptBox["s", "2"], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["Z", "2"]}]}]], "Output",
 CellChangeTimes->{3.423285162479286*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4232876857342863`*^9, 3.4232877019892864`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4232876983982863`*^9, 3.4232877023972864`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"n", "+", "s", "+", "k"}], ")"}]}], ",", "a"}], "}"}], ",",
        
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"n", "+", "s", "-", "k"}]}], "}"}]}], "}"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "L"}], ",", "En"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"En", ",", "L"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.423239640183416*^9, 3.423239696373416*^9}, {
   3.423241057064416*^9, 3.4232411345284157`*^9}, {3.4232413078294163`*^9, 
   3.423241313788416*^9}, 3.423241373025416*^9, {3.423241480121416*^9, 
   3.423241509301416*^9}, {3.4232420881864157`*^9, 3.423242106523416*^9}, {
   3.4232847622852864`*^9, 3.4232847721122866`*^9}, {3.4232855272672863`*^9, 
   3.4232856131992865`*^9}, {3.423285789151286*^9, 3.4232858290742865`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", "En"}], "+", 
     RowBox[{"L", " ", "n"}], "+", 
     RowBox[{"L", " ", "s"}], "-", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}], ")"}], " ", 
        SuperscriptBox["L", "2"]}], "+", 
       RowBox[{"2", " ", "a", " ", "En", " ", "L", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["En", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}]}]}]]}], 
    RowBox[{
     SuperscriptBox["a", "2"], "-", 
     SuperscriptBox["k", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}], "2"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", "En"}], "+", 
     RowBox[{"L", " ", "n"}], "+", 
     RowBox[{"L", " ", "s"}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}], ")"}], " ", 
        SuperscriptBox["L", "2"]}], "+", 
       RowBox[{"2", " ", "a", " ", "En", " ", "L", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["En", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}]}]}]]}], 
    RowBox[{
     SuperscriptBox["a", "2"], "-", 
     SuperscriptBox["k", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.4232858238722863`*^9, 3.4232858293152866`*^9}, 
   3.4232866468082867`*^9}]
}, Open  ]],

Cell[BoxData["  "], "Input",
 CellChangeTimes->{{3.4232866658152866`*^9, 3.4232866663902864`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"n", 
    FractionBox[
     RowBox[{
      RowBox[{"a", " ", "En"}], "+", 
      RowBox[{"L", " ", "n"}], "+", 
      RowBox[{"L", " ", "s"}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{"2", " ", "a", " ", "En", " ", "L", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", "s"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["En", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}]}]}]]}], 
     RowBox[{
      SuperscriptBox["a", "2"], "-", 
      SuperscriptBox["k", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "->", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4232858363332863`*^9, 3.423285849592286*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     RowBox[{"-", 
      SuperscriptBox["En", "2"]}]]}], "+", "L"}], "}"}]], "Output",
 CellChangeTimes->{3.4232858498292866`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"a", " ", "En"}], "+", 
      RowBox[{"L", " ", "n"}], "+", 
      RowBox[{"L", " ", "s"}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{"2", " ", "a", " ", "En", " ", "L", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", "s"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["En", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}]}]}]]}], 
     RowBox[{
      SuperscriptBox["a", "2"], "-", 
      SuperscriptBox["k", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "s"}], ")"}], "2"]}]], "\[Equal]", "0"}], ",", 
   "En"}], "]"}]], "Input",
 CellChangeTimes->{{3.4232858918442864`*^9, 3.4232859200802865`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"En", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "L"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"En", "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", "L"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4232859204002867`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "s"}], ")"}], "^", "2"}], "-", 
   RowBox[{"s", "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.423242813011416*^9, 3.423242826200416*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["n", "2"], "+", 
  RowBox[{"2", " ", "n", " ", "s"}]}]], "Output",
 CellChangeTimes->{{3.423242821471416*^9, 3.423242826380416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["a", "2"], "-", 
     SuperscriptBox["k", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}], "*", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "/", 
          RowBox[{"(", 
           RowBox[{"En", "-", "2"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "s", "+", "k"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "-", "En"}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "s", "-", "k"}], ")"}], "/", "En"}], ",", 
         RowBox[{"a", "/", "En"}]}], "}"}]}], "}"}], "]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.423242005911416*^9, 3.423242033483416*^9}, {
  3.423242122768416*^9, 3.423242126182416*^9}, {3.423245995740416*^9, 
  3.423245996293416*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}]}], 
      RowBox[{"En", " ", 
       RowBox[{"(", 
        RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"k", "-", "n", "-", "s"}], ")"}]}], 
      RowBox[{"a", " ", "En"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.423242007986416*^9, 3.423242033661416*^9}, 
   3.4232421266244164`*^9, 3.423245996835416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.4009458192492447`*^9, 3.4009458408803487`*^9}, {
   3.400946842951256*^9, 3.4009468433918896`*^9}, 3.4009470024005327`*^9, {
   3.400947078089368*^9, 3.4009470799320173`*^9}, {3.4009472019775105`*^9, 
   3.4009472065040193`*^9}, 3.4009473566999903`*^9, {3.4009479809275856`*^9, 
   3.400947981358205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"En", "=."}], ";", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Z", "*", 
         RowBox[{"a", "/", "En"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s", "-", "k"}], ")"}], "/", "En"}]}], "}"}], ",",
       
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s", "+", "k"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "-", "En"}], ")"}]}], ",", 
        RowBox[{"Z", "*", 
         RowBox[{"a", "/", 
          RowBox[{"(", 
           RowBox[{"En", "-", "2"}], ")"}]}]}]}], "}"}]}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S", "[", 
    RowBox[{"n_", ",", "En_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "En", " ", "Z"}], 
        RowBox[{
         SuperscriptBox["n", "2"], "+", 
         RowBox[{"2", " ", "n", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "k"}], "+", "n", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", "n", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DS", "[", 
    RowBox[{"n_", ",", "En_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "Z"}], 
        RowBox[{
         SuperscriptBox["n", "2"], "+", 
         RowBox[{"2", " ", "n", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "+", "n", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}], ")"}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"(", 
         RowBox[{"k", "+", "n", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}], ")"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
       FractionBox[
        RowBox[{"a", " ", "Z"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"m", ",", "En"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DS", "[", 
   RowBox[{"m", ",", "En"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4009468289010525`*^9, 3.4009468303230977`*^9}, {
   3.4009468999331923`*^9, 3.400946913452632*^9}, {3.400946971355893*^9, 
   3.400946993698019*^9}, {3.400947041286448*^9, 3.400947084518613*^9}, {
   3.4009471373946447`*^9, 3.4009471483003263`*^9}, {3.4009471948773007`*^9, 
   3.4009472099790163`*^9}, {3.4009472427361183`*^9, 
   3.4009473434609537`*^9}, {3.400947634449374*^9, 3.4009476433822193`*^9}, {
   3.400947679804592*^9, 3.400947760951275*^9}, {3.400947861706154*^9, 
   3.400947876186976*^9}, {3.4009481236428003`*^9, 3.400948156510061*^9}, {
   3.400949902150168*^9, 3.400949941426645*^9}, {3.40094997856004*^9, 
   3.400950000541648*^9}, {3.400952221485208*^9, 3.400952256385392*^9}, {
   3.4009908809859533`*^9, 3.4009908830989923`*^9}, {3.4009909374871984`*^9, 
   3.400990978365979*^9}, {3.4009961267590046`*^9, 3.40099613910676*^9}, 
   3.408257415911968*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", " ", "En", " ", "Z"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"k", "-", "n", "-", "s"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"En", " ", 
       RowBox[{"(", 
        RowBox[{"k", "+", "n", "+", "s"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.400990865754051*^9, 3.4009908833894095`*^9}, {
   3.4009909817208033`*^9, 3.4009909927466574`*^9}, 3.4009961393971777`*^9, 
   3.408257416482789*^9, 3.423237972399416*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"a", " ", "En", " ", "Z"}], 
       RowBox[{
        SuperscriptBox["m", "2"], "+", 
        RowBox[{"2", " ", "m", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}]]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "+", "m", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{"En", " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", "m", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.400990865754051*^9, 3.4009908833894095`*^9}, {
   3.4009909817208033`*^9, 3.4009909927466574`*^9}, 3.4009961393971777`*^9, 
   3.408257416482789*^9, 3.423237972460416*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"a", " ", "Z"}], 
       RowBox[{
        SuperscriptBox["m", "2"], "+", 
        RowBox[{"2", " ", "m", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}]]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "k"}], "+", "m", "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}]]}], 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{"k", "+", "m", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}]]}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"a", " ", "Z"}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.400990865754051*^9, 3.4009908833894095`*^9}, {
   3.4009909817208033`*^9, 3.4009909927466574`*^9}, 3.4009961393971777`*^9, 
   3.408257416482789*^9, 3.423237972517416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"n", ",", "En"}], "]"}], ".", "u"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"n", ",", "En"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"n", "+", "s"}]], " ", 
     RowBox[{"a", "[", "n", "]"}]}], ",", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"n", "+", "s"}]], " ", 
     RowBox[{"b", "[", "n", "]"}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.423241434629416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"UN", "[", 
   RowBox[{"R_", ",", "N_", ",", "En_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}]}],
       ",", 
      RowBox[{"U", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}], 
        "*", 
        RowBox[{"R", "^", "s"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", "1"}], ",", 
       RowBox[{"n", "<", "N"}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{
          RowBox[{"S", "[", 
           RowBox[{"n", ",", "En"}], "]"}], ".", "u"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"U", "+=", 
         RowBox[{"u", "*", 
          RowBox[{"R", "^", 
           RowBox[{"(", 
            RowBox[{"s", "+", "n"}], ")"}]}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "U"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400989632150216*^9, 3.400989712836237*^9}, {
   3.400989750600539*^9, 3.4009897537150173`*^9}, {3.400989833710045*^9, 
   3.400990001391158*^9}, {3.4009900408078365`*^9, 3.4009900664647293`*^9}, {
   3.4009901214538*^9, 3.4009901689120417`*^9}, {3.4009902380514593`*^9, 
   3.4009902600130386`*^9}, 3.4009906173368444`*^9, {3.4009961521955805`*^9, 
   3.4009961710226526`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "[", 
   RowBox[{"r_", ",", "g_", ",", "En_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}]}],
       ",", 
      RowBox[{"U", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"DU", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"du", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"n", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Label", "[", "begin", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"U", "+=", 
      RowBox[{"u", "*", 
       RowBox[{"r", "^", 
        RowBox[{"(", 
         RowBox[{"s", "+", "n"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DU", "+=", 
      RowBox[{"du", "*", 
       RowBox[{"r", "^", 
        RowBox[{"(", 
         RowBox[{"s", "+", "n"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"du", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"DS", "[", 
         RowBox[{"n", ",", "En"}], "]"}], ".", "u"}], "+", 
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{"n", ",", "En"}], "]"}], ".", "du"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"n", ",", "En"}], "]"}], ".", "u"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", "g"}], "  ", "||", 
           StyleBox[" ", "OperatorCharacter"], 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "g"}]}], ")"}], "&"}], "[", 
        
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"u", "*", 
           RowBox[{
            RowBox[{"R", "^", 
             RowBox[{"(", 
              RowBox[{"s", "+", "n"}], ")"}]}], "/", "U"}]}], "/.", 
          RowBox[{"r", "\[Rule]", "R"}]}], "]"}], "]"}], ",", 
       RowBox[{"Goto", "[", "begin", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "U", ",", "DU"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400991013005789*^9, 3.4009910301604557`*^9}, {
  3.4009911055989313`*^9, 3.4009911284417777`*^9}, {3.400991194717077*^9, 
  3.400991293408989*^9}, {3.400996176009824*^9, 3.4009961798453393`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "=", "1000"}], ";", 
  RowBox[{"g", "=", "0.01"}], ";", 
  RowBox[{"rU", "=", 
   RowBox[{"U", "[", 
    RowBox[{"r", ",", "g", ",", 
     RowBox[{"1", "/", "M"}]}], "]"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rU", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"rU", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "*", "137"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "R"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400990548087269*^9, 3.4009905510114737`*^9}, {
  3.4009905908387423`*^9, 3.400990590958915*^9}, {3.4009906234856863`*^9, 
  3.40099071171255*^9}, {3.4009979119159346`*^9, 3.4009979897879086`*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
+xGZ
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1nc81d8fB3CjJTIqkkJGJRTulczrrWRHJGWPe62Q1ZBR5r33cykaCikj
mSkkq+KIrMqehYiKb0i25u/8/rqP5+PzeXzOOfe8z+t9JFx8LVw52NjYWtjZ
2P7/+23ut4me2yKFqh2cHuL2uTrg4SWybkaX9qPrihbuSXU1QdzTbtszxrTP
Jf3YQk3oqgmpzmZbkzGvfe1C5UJl+FjNnztRx1bTOWFD/odtL53na6rXzM3P
p2+Bp7xvgp2kOZGYxj79H+lSwLE9XeBOwWZk2ls/+z2dDL0p25TVayXQlY/2
1rxLZODezrP2+DpJVDSxVCtvrAwWsR6k3caSSOCXzE3PRWUoFI+U4+2WRN3i
Vw+OGaqA2FGK5fAnKWTjeTK4d04Vjpdyqicu7Ebuvz9zvtSlgCj553GDyX0o
ae0V7w/JFDjW4rQtdo8sauIV7lmdoUDMf+s9r1NlkayEUbZKsjY40WiKk4Oy
aFnylHT/BQBQiBlseiuHqvSfN5i/0YHJYx4TtIz9CK5HcR89pwsmc8v0i/GK
qHFYiMKRqgvd4SorObmKyFQ+36+mThcelFk019QqIvvG9h61LUdhfzrx8uG8
Igr+I5p+oOQo5AzlHTOxUkKlnhXKwrN6kJ1d8pN3GwnJHJ62/+ZlCLKTd/4g
Ohk9iQ9PyL1pCFzrLS4tppKRytCWOtfnhrDv59/hzU/J6GiQuszIRiNQW1RN
2vCRjFweM+a684yAb5ejwOhBZZQqIsmo/moMJy6PMY9/VEYC81ZF16mmYFl4
cDZEQgWJ2UtYMlim4F7gfjJKWQXJN35bDi02hbub38+d11dBBnfDtT3+mULZ
ujR2UR8VdPlIfivlrhkoSKXeDSxXQUvNl5fOex6Ho7zxO0wMDiGqSOdWqQxz
kLJu11+wUUVnzMq/3Cs1hwBzaeOLXqrILzq1QrjJHNZ7L/R9CVFFl2fc7Hi/
m8OApXR5bKoqSnn168GqpgVYWD7Mnx5URe1ndpPb+y3gl6/98R02aojyPMg8
jN8SJg4X76DpqaNdnZOt93dbgtXlDs3qk+qIfdLGBKlbgt4htTkOV3VUL6Sl
z+lqCaX2g8YmUerIKIBdi6i0BNt81W0j1erIah9LJtHlJNxapo4JkTSQ7527
/x6VWgH7ver/hLg00fHHPGGtzVawzdrK84OgJiK9Dvv5fdgK+oZ0OOIkNdHS
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
G///+aDJ4j/spcyCTwex/wfsnWbE
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.40099793102341*^9, 3.4009979904789023`*^9}, 
   3.4009982013220797`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EN", "[", 
    RowBox[{"iEn_", ",", "g2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rU", ",", "fU", ",", 
       RowBox[{"n", "=", "0"}], ",", "i", ",", 
       RowBox[{"En", "=", "iEn"}], ",", "ll"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Label", "[", "begin", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fU", "=", 
       RowBox[{"U", "[", 
        RowBox[{"r", ",", "g", ",", "En"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rU", "=", 
       RowBox[{"fU", "/.", 
        RowBox[{"r", "\[Rule]", "R"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ">", "0"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"En", "-=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], "+", 
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "1"}], "]"}], "]"}], "+", 
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"n", "++"}], "\[IndentingNewLine]", 
          RowBox[{"Goto", "[", "begin", "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"En", "*", "M"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.400947470503632*^9, 3.40094758327579*^9}, {
   3.4009476230329585`*^9, 3.4009476274392943`*^9}, {3.4009478839180927`*^9, 
   3.400947939658243*^9}, {3.40094809134636*^9, 3.40094809619333*^9}, {
   3.400948160305518*^9, 3.4009481607862096`*^9}, {3.4009481926820736`*^9, 
   3.400948203247266*^9}, {3.4009482873982687`*^9, 3.400948369195888*^9}, {
   3.400948407571069*^9, 3.4009484900897245`*^9}, {3.400948552289163*^9, 
   3.4009486771787453`*^9}, {3.4009487438446064`*^9, 
   3.4009488376194477`*^9}, {3.400950242890128*^9, 3.4009503158350177`*^9}, {
   3.4009503541701407`*^9, 3.4009504228589106`*^9}, {3.400950458460102*^9, 
   3.400950494812374*^9}, {3.4009505390459795`*^9, 3.4009505680376673`*^9}, 
   3.400950941494672*^9, {3.40095104625531*^9, 3.400951063419992*^9}, {
   3.400951300290595*^9, 3.400951300440811*^9}, {3.4009514440372925`*^9, 
   3.4009514532305117`*^9}, {3.400951638346696*^9, 3.4009516390477037`*^9}, {
   3.4009518538766127`*^9, 3.4009518860428658`*^9}, {3.4009519721767197`*^9, 
   3.400951977244006*^9}, {3.40095214877065*^9, 3.400952167187131*^9}, {
   3.4009581615966687`*^9, 3.400958161837014*^9}, {3.400958192050459*^9, 
   3.400958283872493*^9}, {3.4009583363980207`*^9, 3.400958451092944*^9}, {
   3.4009600812169476`*^9, 3.4009600828993664`*^9}, {3.400960228699016*^9, 
   3.4009604264133153`*^9}, {3.400960460562419*^9, 3.400960472048936*^9}, {
   3.4009874644732494`*^9, 3.4009875523195667`*^9}, {3.400988131171915*^9, 
   3.400988167774547*^9}, {3.400988295227816*^9, 3.400988333002133*^9}, {
   3.400988386779461*^9, 3.4009884170229487`*^9}, {3.4009884637801824`*^9, 
   3.400988549493432*^9}, {3.400988583692608*^9, 3.400988607166362*^9}, {
   3.400988647544422*^9, 3.400988716573682*^9}, {3.4009887611077185`*^9, 
   3.400988774036309*^9}, {3.4009888383988576`*^9, 3.4009888968529105`*^9}, {
   3.4009891847168384`*^9, 3.400989290739291*^9}, {3.400989437290021*^9, 
   3.4009895433325024`*^9}, 3.400989622366147*^9, 3.400989688451173*^9, {
   3.4009897304115086`*^9, 3.4009898085438576`*^9}, {3.400990352716339*^9, 
   3.400990377672224*^9}, {3.4009904158270884`*^9, 3.40099051552044*^9}, {
   3.4009905730631824`*^9, 3.4009905956055965`*^9}, {3.4009906960400143`*^9, 
   3.400990732862963*^9}, 3.4009907642080355`*^9, 3.400991079060771*^9, {
   3.400991307258904*^9, 3.4009915362581887`*^9}, {3.4009924364726334`*^9, 
   3.400992467447173*^9}, {3.4009930471006737`*^9, 3.400993088870736*^9}, {
   3.400993326242059*^9, 3.4009934259354115`*^9}, {3.4009938012851377`*^9, 
   3.4009938554430127`*^9}, {3.400993887949755*^9, 3.4009938969727297`*^9}, 
   3.400993998809163*^9, {3.4009940678183937`*^9, 3.400994095838685*^9}, {
   3.4009942222304273`*^9, 3.4009942261160145`*^9}, {3.400994266464032*^9, 
   3.400994333640627*^9}, {3.4009943853249454`*^9, 3.4009944924289536`*^9}, {
   3.4009945282003903`*^9, 3.400994708719965*^9}, {3.40099474084616*^9, 
   3.4009947627376385`*^9}, {3.4009947956449566`*^9, 
   3.4009947965863104`*^9}, {3.400994830465026*^9, 3.40099483081553*^9}, {
   3.4009949138649487`*^9, 3.400994992808464*^9}, {3.4009950240333633`*^9, 
   3.4009950367416368`*^9}, {3.400995090669181*^9, 3.40099518974164*^9}, {
   3.400995219915027*^9, 3.4009952925995426`*^9}, {3.4009953273895683`*^9, 
   3.400995350142285*^9}, {3.400995624647003*^9, 3.400995669331256*^9}, {
   3.400995705633456*^9, 3.400995772659835*^9}, {3.4009958254657664`*^9, 
   3.400995863089867*^9}, 3.400995906602435*^9, {3.40099598188068*^9, 
   3.4009960330142064`*^9}, {3.4009960728214464`*^9, 3.400996073532469*^9}, {
   3.4009963174431953`*^9, 3.400996321348811*^9}, {3.4009966041454525`*^9, 
   3.400996651513565*^9}, {3.4009966847012863`*^9, 3.4009967151650915`*^9}, {
   3.4009967542012224`*^9, 3.4009967600095744`*^9}, 3.4009968029212785`*^9, {
   3.4009969419712224`*^9, 3.4009970784775085`*^9}, {3.4009971587028675`*^9, 
   3.400997162858843*^9}, {3.400997416413437*^9, 3.4009974224621344`*^9}, {
   3.4009976591925364`*^9, 3.4009976652612624`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "=", "3000"}], ";", 
  RowBox[{"g", "=", "0.001"}], ";", 
  RowBox[{"EN", "[", 
   RowBox[{
    RowBox[{"13", "/", "M"}], ",", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4009948153633103`*^9, 3.400994822593707*^9}, {
   3.4009950581323953`*^9, 3.4009950581924815`*^9}, {3.400995755435067*^9, 
   3.400995755705456*^9}, {3.4009965620649443`*^9, 3.4009965799306335`*^9}, {
   3.40099662856056*^9, 3.400996632996939*^9}, {3.400996670240493*^9, 
   3.4009966941949377`*^9}, {3.4009967270421696`*^9, 
   3.4009967331509533`*^9}, {3.4009970103996177`*^9, 3.400997143871541*^9}, {
   3.4009971803439856`*^9, 3.4009973702170095`*^9}, {3.4009974839605646`*^9, 
   3.4009975220353136`*^9}, 3.400997677048211*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "13.605873074754973`", ",", "0.0004417179152369499`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4009948247167597`*^9, 3.400994832257603*^9}, {
   3.400994923508816*^9, 3.4009950033736563`*^9}, {3.4009950423697295`*^9, 
   3.4009950599249725`*^9}, 3.400995120271747*^9, 3.4009951920549664`*^9, {
   3.400995238892315*^9, 3.4009952972562385`*^9}, 3.4009953423210382`*^9, {
   3.4009956504440975`*^9, 3.400995670813387*^9}, {3.4009957151471357`*^9, 
   3.400995778688504*^9}, 3.4009958322755585`*^9, 3.4009958744361825`*^9, 
   3.4009959116096354`*^9, {3.400995990713381*^9, 3.400996035407648*^9}, 
   3.400996075905882*^9, {3.4009963043643885`*^9, 3.4009963248137937`*^9}, {
   3.4009965683439727`*^9, 3.4009966725337906`*^9}, {3.4009967065827503`*^9, 
   3.400996763013894*^9}, 3.4009968115837345`*^9, {3.4009969895195937`*^9, 
   3.4009973841870975`*^9}, 3.400997425937131*^9, {3.400997484841832*^9, 
   3.400997522986682*^9}, {3.400997667023797*^9, 3.4009976818951807`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "  ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "13.605873075061169"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "=", "2000"}], ";", 
  RowBox[{"g", "=", "0.001"}], ";", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.400994677134547*^9, 3.400994685596715*^9}}],

Cell[BoxData[
 RowBox[{"plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rU", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"rU", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "100", ",", "R"}],
   "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"En", "=", 
   RowBox[{"4", "/", "M"}]}], ";", 
  RowBox[{"rU", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400994229060248*^9, 3.400994253345168*^9}}],

Cell[BoxData["129.07158507732734`"], "Output",
 CellChangeTimes->{{3.4009942343478513`*^9, 3.4009942540862336`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "0"}], ";", "x"}]], "Input",
 CellChangeTimes->{{3.400994156205488*^9, 3.4009941579880514`*^9}, {
  3.400994260926069*^9, 3.400994261867422*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.40099426215784*^9, 3.4009942636700144`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "0"}], ";", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "=", "n"}], ";", 
     RowBox[{"x", "<", "10"}]}], ",", 
    RowBox[{
     RowBox[{"n", "++"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.40099410702477*^9, 3.400994160892227*^9}, {
  3.4009941955120077`*^9, 3.400994201340389*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994201871152*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942019011955`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994201931238*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942019813104`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942020113535`*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994202051411*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942020814543`*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942021014833`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994202111498*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942021315265`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.400995358524338*^9, 3.400995362510069*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot", "[", 
   RowBox[{"liste_", ",", "R_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nN", "=", "100"}], ",", "table", ",", "max", ",", 
      RowBox[{"st", "=", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"liste", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "#", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"#", "/.", 
             RowBox[{"r", "\[Rule]", 
              RowBox[{"i", "*", 
               RowBox[{"R", "/", "nN"}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "nN"}], "}"}]}], "]"}], "&"}], "/@", 
         "liste"}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ll", "=", 
  RowBox[{"plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "^", "2"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"10", "*", "r"}], "]"}]}], "}"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"ll", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.400991670671466*^9, 3.400991804103331*^9}, {
  3.4009918417274323`*^9, 3.4009924492009363`*^9}, {3.4009924926534176`*^9, 
  3.400992589402536*^9}, {3.400992636199827*^9, 3.4009927210117807`*^9}, {
  3.4009927880181313`*^9, 3.4009928064346128`*^9}, {3.400992840513616*^9, 
  3.4009929196474047`*^9}, {3.400992972152904*^9, 3.400993006952944*^9}, {
  3.400993118232957*^9, 3.4009933169687247`*^9}, {3.400993520621563*^9, 
  3.400993568179949*^9}, {3.4009936553653154`*^9, 3.4009937848715363`*^9}, {
  3.4009953770009055`*^9, 3.400995613731307*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["r", "2"], "4"], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Csc", "[", "11", "]"}]}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "r"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.400993776409368*^9, 3.400993785121896*^9}, {
  3.4009953877764*^9, 3.4009955064370255`*^9}, {3.4009955377620687`*^9, 
  3.400995613971653*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {-1.0000097353062907`, 1.0000093772765368`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.400993776409368*^9, 3.400993785121896*^9}, {
  3.4009953877764*^9, 3.4009955064370255`*^9}, {3.4009955377620687`*^9, 
  3.400995614041754*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["r gegen Inifinity", "Subtitle",
 CellChangeTimes->{{3.4009558103857937`*^9, 3.4009558166447935`*^9}, {
  3.4009578741533456`*^9, 3.4009578770174637`*^9}, {3.400998560808997*^9, 
  3.4009985611294575`*^9}}],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.400945633602298*^9, 3.400945637107338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{3.4009509680228176`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{3.423237147692416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"1", ">", "En", ">", "0"}]}], ";"}]], "Input",
 CellChangeTimes->{3.4010118634071937`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4232881413322864`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"En", "-", "1"}], ")"}], "*", "Z", "*", 
    RowBox[{"a", "/", "L"}]}]}], ";", 
  RowBox[{"L", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "En"}], ")"}], "*", "En"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4010047011784143`*^9, 3.401004728127165*^9}, {
   3.401004934473877*^9, 3.401004935104784*^9}, {3.401007664659691*^9, 
   3.4010076829359713`*^9}, {3.4010081987877293`*^9, 3.40100820195228*^9}, {
   3.4010085526765966`*^9, 3.4010085529469852`*^9}, {3.401010076007038*^9, 
   3.401010081054296*^9}, {3.401010963823656*^9, 3.4010109657964926`*^9}, {
   3.4010118334541235`*^9, 3.401011839562907*^9}, {3.401012398316355*^9, 
   3.401012403844304*^9}, {3.4010133451778755`*^9, 3.4010133727475185`*^9}, {
   3.401013411312973*^9, 3.4010134418568926`*^9}, 3.401013486921693*^9, {
   3.4010139002059665`*^9, 3.401013919373528*^9}, {3.40101496351493*^9, 
   3.40101496401565*^9}, {3.401015282143094*^9, 3.4010153135782957`*^9}, 
   3.401015705391696*^9, {3.4010157690632515`*^9, 3.401015769513899*^9}, {
   3.4010162274824257`*^9, 3.401016230616933*^9}, {3.4010164403785553`*^9, 
   3.4010164568222*^9}, {3.4010185723942432`*^9, 3.401018572764776*^9}, {
   3.401018724202533*^9, 3.401018724983656*^9}, 3.423288154276286*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.423288137474286*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "En"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"En", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.400998443410186*^9, 3.4009984451326623`*^9}, {
  3.4010153085510674`*^9, 3.4010153097427807`*^9}}],

Cell[BoxData[
 RowBox[{"u", ":=", 
  RowBox[{"{", 
   RowBox[{"u1", ",", "u2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4010148394264994`*^9, 3.4010148398170605`*^9}, {
  3.4232873222532864`*^9, 3.4232873776412864`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"hb", "[", "r", "]"}], "-", 
         RowBox[{"ha", "[", "r", "]"}]}], ")"}], "*", 
       RowBox[{"L", "/", "En"}]}], ",", 
      RowBox[{
       RowBox[{"hb", "[", "r", "]"}], "+", 
       RowBox[{"ha", "[", "r", "]"}]}]}], "}"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "r"}], "*", "L"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.400942218441538*^9, 3.4009422462415123`*^9}, {
   3.400942288612438*^9, 3.400942289854224*^9}, {3.40094492128804*^9, 
   3.40094492304056*^9}, {3.4009449752055693`*^9, 3.400944981094037*^9}, {
   3.4009984105529394`*^9, 3.4009984548165874`*^9}, 3.4009985537188015`*^9, {
   3.4009985861754723`*^9, 3.400998659460851*^9}, {3.4009989793608446`*^9, 
   3.4009989815539985`*^9}, {3.4009990509638047`*^9, 
   3.4009990589452815`*^9}, {3.4009991816417103`*^9, 
   3.4009991854972544`*^9}, {3.400999633511467*^9, 3.400999650966566*^9}, {
   3.400999854579347*^9, 3.400999854679491*^9}, {3.40099988649524*^9, 
   3.4009999030590577`*^9}, {3.4009999844460864`*^9, 
   3.4009999883316736`*^9}, {3.4010000806544275`*^9, 3.4010000835786324`*^9}, 
   3.4010001991147647`*^9, 3.4010047174117565`*^9, {3.4010131968846397`*^9, 
   3.4010132323256016`*^9}, {3.401013481173427*^9, 3.401013481894464*^9}, {
   3.4010135166344175`*^9, 3.401013518567197*^9}, 3.401014540166184*^9, 
   3.4010147879725122`*^9, {3.4232872623932867`*^9, 3.4232872750902863`*^9}}],\


Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"U", ",", "r"}], "]"}], "-", 
               RowBox[{"D", "[", 
                RowBox[{"U", ",", "r"}], "]"}]}], ")"}], "/", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "r"}], "*", "L"}], "]"}]}], "*", "En", "*", "r"}],
            "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ha", "'"}], "[", "r", "]"}], ",", 
           RowBox[{
            RowBox[{"hb", "'"}], "[", "r", "]"}]}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "/.", 
    RowBox[{
     RowBox[{"ha", "[", "r", "]"}], "\[Rule]", 
     RowBox[{"u", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"hb", "[", "r", "]"}], "\[Rule]", 
    RowBox[{"u", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], "/.", 
  RowBox[{"r", "\[Rule]", "rr"}]}]], "Input",
 CellChangeTimes->{{3.4009421893997774`*^9, 3.4009422140652447`*^9}, {
   3.4009422958828926`*^9, 3.4009423156813617`*^9}, {3.4009423745359907`*^9, 
   3.400942376318554*^9}, {3.4009426337687488`*^9, 3.400942655179536*^9}, {
   3.400942688627632*^9, 3.4009428007588687`*^9}, {3.40094480687352*^9, 
   3.4009448593690047`*^9}, {3.400998964769864*^9, 3.4009989666625853`*^9}, {
   3.4009990052881265`*^9, 3.400999008632936*^9}, 3.4009990624002495`*^9, 
   3.4009991028584256`*^9, {3.400999333269741*^9, 3.400999432722747*^9}, {
   3.400999562769746*^9, 3.4009995661546125`*^9}, {3.400999664746381*^9, 
   3.400999667810787*^9}, {3.4009998564820833`*^9, 3.400999856582227*^9}, 
   3.4009999130334*^9, {3.401000112289917*^9, 3.401000162151614*^9}, {
   3.401000203781475*^9, 3.401000223459771*^9}, {3.401000317795419*^9, 
   3.40100044563925*^9}, {3.4010019715133486`*^9, 3.401001986064272*^9}, {
   3.4010021306321507`*^9, 3.4010022470595646`*^9}, 3.401004698114008*^9, 
   3.4010047522218113`*^9, {3.401004853918043*^9, 3.4010048993934336`*^9}, {
   3.401004961322483*^9, 3.401005046514984*^9}, {3.401013263901005*^9, 
   3.4010133299259443`*^9}, {3.4010134948430834`*^9, 
   3.4010135044168496`*^9}, {3.401013551794976*^9, 3.4010136111202817`*^9}, {
   3.4010136707460194`*^9, 3.4010136765744*^9}, {3.401013711354411*^9, 
   3.4010137132170897`*^9}, {3.40101382704076*^9, 3.401013875159952*^9}, {
   3.401013955495469*^9, 3.401014015031077*^9}, {3.401014058223184*^9, 
   3.4010141594887967`*^9}, {3.401014544752779*^9, 3.401014545904435*^9}, 
   3.401014726714427*^9, {3.401014823393445*^9, 3.401014832156045*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "a"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "En"}], ")"}], " ", "u1", " ", "Z"}], "+", 
     RowBox[{"u2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
         "k"}], "-", 
        RowBox[{"a", " ", "Z"}]}], ")"}]}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
     "rr"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"u1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
         "k"}], "+", 
        RowBox[{"a", " ", "Z"}]}], ")"}]}], "+", 
     RowBox[{"u2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "En", " ", "rr"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["En", "2"], " ", "rr"}], "-", 
        RowBox[{"a", " ", "Z"}], "+", 
        RowBox[{"a", " ", "En", " ", "Z"}]}], ")"}]}]}], 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
     "rr"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.401014110748712*^9, 3.4010141599795027`*^9}, 
   3.401014479539006*^9, 3.4010145477070274`*^9, 3.401014727655781*^9, {
   3.4010148239242077`*^9, 3.401014841960142*^9}, {3.40101497118596*^9, 
   3.4010149803190928`*^9}, {3.4232872701972866`*^9, 
   3.4232872765702868`*^9}, {3.4232873302842865`*^9, 3.423287379722286*^9}, {
   3.423288148309286*^9, 3.4232881601992865`*^9}, 3.4232885958502865`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"u_", ",", "rr_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "a"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}], " ", "Z", " ", 
        RowBox[{"u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "-", 
          RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
        RowBox[{
        "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       "rr"}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "En", " ", "rr"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["En", "2"], " ", "rr"}], "-", 
          RowBox[{"a", " ", "Z"}], "+", 
          RowBox[{"a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{
        "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       "rr"}]]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.401014042280259*^9, {3.4010140765495358`*^9, 3.401014082468046*^9}, {
   3.4010141522984576`*^9, 3.4010141880498657`*^9}, 3.4010144661998253`*^9, {
   3.4010145104634733`*^9, 3.401014573393963*^9}, {3.401014611088165*^9, 
   3.401014612880742*^9}, {3.4010146654563427`*^9, 3.4010146884894624`*^9}, {
   3.401014737089346*^9, 3.4010147845876446`*^9}, {3.4010148601863503`*^9, 
   3.4010148626899505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "/", "x"}]}], ";", 
  RowBox[{"u", ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], ",", 
      RowBox[{"b", "[", "n", "]"}]}], "}"}], "*", 
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"n", "+", "s"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.4010149395003986`*^9, 3.4010149454389377`*^9}, {
   3.4010150167614946`*^9, 3.401015063869232*^9}, {3.4010172003613567`*^9, 
   3.4010172309453344`*^9}, 3.4010172898800783`*^9, {3.4010179998008947`*^9, 
   3.401017999961125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"u", ",", 
            RowBox[{"r", "[", "x", "]"}]}], "]"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"r", "[", "x", "]"}], ",", "x"}], "]"}]}], "-", 
         RowBox[{"D", "[", 
          RowBox[{"u", ",", "x"}], "]"}]}], ")"}], "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"2", "-", "s"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "n", "]"}], ",", 
       RowBox[{"b", "[", "n", "]"}]}], "}"}]}], "]"}]}], ";", "g1"}]], "Input",\

 CellChangeTimes->{{3.401001843329029*^9, 3.4010018615251937`*^9}, {
   3.4010018974768896`*^9, 3.401001933719003*^9}, {3.4010022743087473`*^9, 
   3.4010022865763874`*^9}, {3.401002446075736*^9, 3.4010025010347633`*^9}, {
   3.4010026441505537`*^9, 3.4010026442807407`*^9}, {3.4010033586880083`*^9, 
   3.401003358768123*^9}, {3.4010034172622337`*^9, 3.401003440145138*^9}, {
   3.4010043886490192`*^9, 3.4010043904516115`*^9}, {3.401004473831506*^9, 
   3.4010044752335215`*^9}, {3.4010046118199234`*^9, 
   3.4010046184194126`*^9}, {3.401010159046443*^9, 3.4010101667475166`*^9}, {
   3.40101243078304*^9, 3.401012446455576*^9}, {3.401012542173211*^9, 
   3.40101257057405*^9}, 3.4010148873554173`*^9, {3.401014919962304*^9, 
   3.401014954381797*^9}, {3.401014998955891*^9, 3.4010150059759855`*^9}, {
   3.401015051451376*^9, 3.4010150535544*^9}, {3.401015087523245*^9, 
   3.4010150939224463`*^9}, {3.401015149482338*^9, 3.401015188318181*^9}, {
   3.401016279467176*^9, 3.4010163760160065`*^9}, {3.401016446657584*^9, 
   3.401016447989499*^9}, 3.401017218767824*^9, {3.4010172559813347`*^9, 
   3.4010173212652082`*^9}, 3.401017423842707*^9, {3.4010174606356125`*^9, 
   3.401017498590189*^9}, {3.401017544035536*^9, 3.4010175475005183`*^9}, {
   3.4010180123389235`*^9, 3.4010180125592403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "n"}], " ", 
     SuperscriptBox["x", 
      RowBox[{"1", "+", "n"}]], " ", 
     RowBox[{"a", "[", "n", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"1", "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "k"}], "+", 
       FractionBox[
        RowBox[{"a", " ", "Z"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}], ")"}],
      " ", 
     RowBox[{"b", "[", "n", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"1", "+", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          "k"}], "+", 
         RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "En"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["En", "2"]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
         "n", " ", "x"}], "-", 
        RowBox[{"2", " ", "a", " ", "x", " ", "Z"}], "+", 
        RowBox[{"2", " ", "a", " ", "En", " ", "x", " ", "Z"}]}], ")"}], " ", 
      
      RowBox[{"b", "[", "n", "]"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.401016343859768*^9, 3.4010163762162943`*^9}, 
   3.4010164488807807`*^9, 3.401017204407174*^9, {3.4010172435835075`*^9, 
   3.4010173217559137`*^9}, 3.401017424723974*^9, {3.401017462217888*^9, 
   3.401017498920664*^9}, {3.4010175447665873`*^9, 3.401017547861037*^9}, {
   3.401018004607806*^9, 3.4010180129998736`*^9}, 3.4010185778320627`*^9, 
   3.4232886061882863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       RowBox[{"(", 
        RowBox[{"-", "n"}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Z", "/", "L"}]}]}], ")"}], " ", 
       RowBox[{"b", "[", "n", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", 
         RowBox[{"1", "+", "n"}]]}], " ", 
       RowBox[{"(", " ", 
        RowBox[{"k", "+", 
         RowBox[{"a", " ", 
          RowBox[{"Z", "/", "L"}]}]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "n"}], " ", "x"}], "-", 
         RowBox[{"2", " ", "s", " ", "x"}], "+", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "L"}]}], ")"}], " ", 
       RowBox[{"b", "[", "n", "]"}]}]}]}], "}"}]}], ";", 
  RowBox[{"g2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4010163647798495`*^9, 3.4010164275400944`*^9}, {
   3.401017325741645*^9, 3.4010173588091936`*^9}, {3.4010173952015233`*^9, 
   3.4010174480875697`*^9}, {3.401017511368563*^9, 3.401017596360776*^9}, 
   3.401017781937622*^9, {3.4010178353444176`*^9, 3.401017891364971*^9}, {
   3.401018049782765*^9, 3.401018064103357*^9}, {3.4010181502972975`*^9, 
   3.401018191186093*^9}, {3.4010183948689747`*^9, 3.401018411282576*^9}, {
   3.4010186374578*^9, 3.401018650666794*^9}, {3.401018701660118*^9, 
   3.4010187332154927`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "n"}], " ", 
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"a", "[", "n", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "+", 
           FractionBox[
            RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
         RowBox[{"b", "[", "n", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", 
           RowBox[{"1", "+", "n"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", 
           FractionBox[
            RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
         RowBox[{"a", "[", "n", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "L"}], "-", 
           RowBox[{"n", " ", "x"}], "-", 
           RowBox[{"2", " ", "s", " ", "x"}]}], ")"}], " ", 
         RowBox[{"b", "[", "n", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.401017792542872*^9, {3.401017838258608*^9, 3.401017891615331*^9}, 
   3.4010180655654593`*^9, {3.4010181553044977`*^9, 3.4010181921775184`*^9}, {
   3.4010183983139277`*^9, 3.401018411583008*^9}, 3.40101858888796*^9, {
   3.4010186407024655`*^9, 3.401018651608147*^9}, {3.4010187033124943`*^9, 
   3.4010187334658527`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z", "*", 
       RowBox[{"a", "/", "L"}]}], "-", "k"}], ")"}], "/", "n"}], "*", 
   RowBox[{"b", "[", "n", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.40101880945512*^9, 3.401018830865907*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4010188493524895`*^9, 3.4010188692811456`*^9}, {
  3.4010199036985645`*^9, 3.4010199203324833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "L"}], "-", 
     RowBox[{"n", " ", "x"}], "-", 
     RowBox[{"2", " ", "s", " ", "x"}]}], ")"}], " ", 
   RowBox[{"b", "[", "n", "]"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"1", "+", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "k"}], "+", 
      FractionBox[
       RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"k", "+", 
      FractionBox[
       RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
    RowBox[{"b", "[", "n", "]"}]}], "n"]}]], "Output",
 CellChangeTimes->{{3.401018852497011*^9, 3.401018863092246*^9}, {
  3.4010199060419345`*^9, 3.4010199206128864`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"2", "-", "En"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"En", ",", "L"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"Eigenvalues", "[", "M1", "]"}], ";", 
  RowBox[{"B", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Eigenvectors", "[", "M1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4010077407991743`*^9, 3.40100775697243*^9}, {
   3.401009472849741*^9, 3.4010094991876125`*^9}, 3.4010113876330643`*^9, {
   3.4010199402010527`*^9, 3.401019948102414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"1", ">", "En", ">", "0"}]}]], "Input",
 CellChangeTimes->{{3.4010098571623554`*^9, 3.4010098629506783`*^9}, {
   3.401009931369059*^9, 3.401009955794181*^9}, 3.4010101404997745`*^9}],

Cell[BoxData[
 RowBox[{"1", ">", "En", ">", "0"}]], "Output",
 CellChangeTimes->{
  3.4010098670365534`*^9, {3.4010099334220114`*^9, 3.401009956104627*^9}, 
   3.401010141391056*^9, {3.401010995539261*^9, 3.4010110230187745`*^9}, 
   3.423237084309416*^9, 3.4232371571464157`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["=>", "Subtitle",
 CellChangeTimes->{{3.400956011845478*^9, 3.4009560118955507`*^9}, {
  3.401002183938802*^9, 3.4010021858114944`*^9}}],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.423237165625416*^9, 3.423237166541416*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z", "*", 
       RowBox[{"a", "/", "L"}]}], "-", "k"}], ")"}], "/", "n"}], "*", 
   RowBox[{"b", "[", "n", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "n_", "]"}], ":=", 
  RowBox[{"b0", "*", 
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", "^", "2"}], "-", 
            RowBox[{
             RowBox[{"a", "^", "2"}], "*", 
             RowBox[{
              RowBox[{"Z", "^", "2"}], "/", 
              RowBox[{"L", "^", "2"}]}]}]}], ")"}], "/", "i"}], "-", 
         RowBox[{"(", 
          RowBox[{"i", "+", 
           RowBox[{"2", "*", "s"}]}], ")"}]}], ")"}], "/", "2"}], "/", "L"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4010199845047584`*^9, 3.4010201814880066`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.401020092229659*^9, 3.4010201222528305`*^9}, {
  3.4010201725251184`*^9, 3.401020178143197*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"16", " ", 
    SuperscriptBox["L", "4"]}]], 
  RowBox[{"b0", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["k", "2"], "-", 
     RowBox[{"2", " ", "s"}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["Z", "2"]}], 
      SuperscriptBox["L", "2"]]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "-", 
     RowBox[{"2", " ", "s"}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["Z", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "-", 
     RowBox[{"2", " ", "s"}], "+", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["Z", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     RowBox[{"2", " ", "s"}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["Z", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.401020093781891*^9, 3.401020182549533*^9}, 
   3.4232371711604156`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", "^", "2"}], "-", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "*", 
         RowBox[{
          RowBox[{"Z", "^", "2"}], "/", 
          RowBox[{"L", "^", "2"}]}]}]}], ")"}], "/", "i"}], "-", 
     RowBox[{"(", 
      RowBox[{"i", "+", 
       RowBox[{"2", "*", "s"}]}], ")"}]}], ")"}], "/", "2"}], "/", 
  "L"}]], "Input",
 CellChangeTimes->{{3.40102019569844*^9, 3.401020198182011*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "i"}], "-", 
   RowBox[{"2", " ", "s"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["Z", "2"]}], 
      SuperscriptBox["L", "2"]]}], "i"]}], 
  RowBox[{"2", " ", "L"}]]], "Output",
 CellChangeTimes->{3.423237180718416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Exit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4010204288236575`*^9, 3.40102042978504*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"En", "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.4232373432314157`*^9, 3.423237373369416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "i"}], "*", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]]}], "-", 
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "En"}], ")"}]}], " ", "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], "-", 
        FractionBox[
         SuperscriptBox["a", "2"], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]]]}], "i"]}], "==", 
     "0"}], ",", "En"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4010201986126304`*^9, 3.401020301520605*^9}, {
  3.423237049180416*^9, 3.423237050167416*^9}, {3.423237132927416*^9, 
  3.423237133581416*^9}, {3.4232372226314163`*^9, 3.4232372519284163`*^9}, {
  3.423237292603416*^9, 3.4232373032494164`*^9}, {3.423237351952416*^9, 
  3.4232373617634163`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]},
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]},
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]},
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.401020406271229*^9, 3.4010204386377697`*^9, 3.423237082519416*^9, 
   3.423237130622416*^9, {3.423237217260416*^9, 3.423237239033416*^9}, 
   3.423237310369416*^9, {3.423237359602416*^9, 3.423237374194416*^9}}]
}, Open  ]],

Cell[BoxData["'"], "Input",
 CellChangeTimes->{3.4232372190464163`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.423237130360416*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ET", "[", 
   RowBox[{"i_", ",", "k_", ",", "Z_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["i", "4"]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["i", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["k", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["i", "2"], " ", 
      SuperscriptBox["Z", "2"]}], "-", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["i", "4"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["k", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["i", "4"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           SuperscriptBox["k", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["Z", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["Z", "2"]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               SuperscriptBox["a", "4"], " ", 
               SuperscriptBox["i", "2"], " ", 
               SuperscriptBox["k", "2"], " ", 
               SuperscriptBox["Z", "4"]}], "-", 
              RowBox[{
               SuperscriptBox["a", "6"], " ", 
               SuperscriptBox["i", "2"], " ", 
               SuperscriptBox["Z", "6"]}]}]]}]}], ")"}]}]}], ")"}]}]}], ")"}],
    "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "4"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["k", "4"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.4010203554781923`*^9, 3.401020381085013*^9}, {
  3.401020425639078*^9, 3.401020498583968*^9}, {3.4010205541138163`*^9, 
  3.401020567082464*^9}, {3.4010207121811056`*^9, 3.4010207606908593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "*", 
     RowBox[{"ET", "[", 
      RowBox[{"n", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "a"}], "]"}]}], "-", 
    RowBox[{"Energie", "[", 
     RowBox[{"n", "+", "1"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4010204456178064`*^9, 3.401020614690922*^9}, {
  3.4010207164372253`*^9, 3.4010209884483585`*^9}, {3.4010210296375856`*^9, 
  3.4010211140089054`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.67315083799258`*^-11"}], ",", 
   RowBox[{"-", "1.9083965252519874`*^-7"}], ",", "5.309908068795721`*^-11", 
   ",", 
   RowBox[{"-", "1.348201550399608`*^-10"}], ",", "3.2418734363659496`*^-11", 
   ",", 
   RowBox[{"-", "5.865169461216624`*^-11"}], ",", "5.5718984981467656`*^-11", 
   ",", "2.1091323132438333`*^-11", ",", "1.878794342324852`*^-11", ",", 
   "1.0133882621943258`*^-10", ",", 
   RowBox[{"-", "1.464051102573194`*^-12"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4010204806782207`*^9, 3.401020615031411*^9}, {
  3.401020714774835*^9, 3.401020988808877*^9}, {3.401021041724966*^9, 
  3.4010211143794384`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "*", 
     RowBox[{"ET", "[", 
      RowBox[{"n", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "a"}], "]"}]}], "-", 
    RowBox[{"Energie", "[", 
     RowBox[{"n", "+", "1"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4010211305727234`*^9, 3.401021143441227*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "5.67315083799258`*^-11"}], "-", 
   RowBox[{"1.2647660696529783`*^-10", " ", 
    SuperscriptBox["n", "2"]}], "-", 
   RowBox[{"2.842170943040401`*^-14", " ", 
    SuperscriptBox["n", "3"]}], "-", 
   RowBox[{"2.540190280342358`*^-10", " ", 
    SuperscriptBox["n", "4"]}], "+", 
   RowBox[{"1.4210854715202004`*^-14", " ", 
    SuperscriptBox["n", "5"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "n", "]"}], "6"],
    SeriesData[$CellContext`n, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`n, 0, {-5.67315083799258*^-11, 
   0., -1.2647660696529783`*^-10, -2.842170943040401*^-14, \
-2.540190280342358*^-10, 1.4210854715202004`*^-14}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4010211287200594`*^9, 3.4010211440821486`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", "510998.910"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"En", "-", "1"}], ")"}], "*", "Z", "*", 
    RowBox[{"a", "/", "L"}]}]}], ";", 
  RowBox[{"L", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "En"}], ")"}], "*", "En"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.4010210191525087`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{3.4010210202440786`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verh\[ADoubleDot]ltnis bei r=0", "Title",
 CellChangeTimes->{{3.4009515898669853`*^9, 3.4009515953548765`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"S", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "En", " ", "Z"}], 
         RowBox[{
          SuperscriptBox["n", "2"], "+", 
          RowBox[{"2", " ", "n", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "k"}], "+", "n", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"n", "+", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["k", "2"], "-", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", 
                 SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"En", " ", 
          RowBox[{"(", 
           RowBox[{"k", "+", "n", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
        FractionBox[
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]}], "}"}],
     "/.", 
    RowBox[{"En", "->", "Enn"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"S", "[", "10", "]"}]}], "Input",
 CellChangeTimes->{{3.4009522676215487`*^9, 3.400952283113826*^9}, {
  3.4009527650267825`*^9, 3.400952769252859*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.00006081154100833443`", " ", "Enn"}], ",", 
     RowBox[{
      RowBox[{"-", "0.10000022188458049`"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "Enn"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.083333481256387`", " ", "Enn"}], ",", 
     RowBox[{"0.00006081154100833443`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "Enn"}], ")"}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.4009522833641853`*^9, 3.4009527695933485`*^9, 
  3.401020396877722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Enn", "=."}], ";", 
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}]}], 
  ";", 
  RowBox[{"U", "=", "u"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", 
    RowBox[{"n", "<", "3"}], ",", 
    RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"S", "[", "n", "]"}], ".", "u"}]}], ";", "\[IndentingNewLine]",
      
     RowBox[{"U", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"U", "+", "u"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}], ";", 
  RowBox[{"n", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/", 
   RowBox[{"U", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4009522989465923`*^9, 3.4009525754341617`*^9}, {
  3.400952643992744*^9, 3.4009527053209295`*^9}, {3.4009527605904036`*^9, 
  3.4009527734088354`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"91.35044102604739`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3.662751763692355`"}], "+", "Enn"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1.6262886176197724`", "\[InvisibleSpace]", "+", "Enn"}], 
     ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.0109728221664999`"}], "+", "Enn"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"181.38339842774778`", "\[InvisibleSpace]", "+", "Enn"}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.4009526829387455`*^9, 3.400952706502629*^9}, 
   3.400952773659195*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Runge", " ", "von", " ", "links"}], "Title"]], "Input",
 CellChangeTimes->{{3.4009555053171263`*^9, 3.4009555110553775`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "Enn"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Enn", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"U", "=."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"4000", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Enn", "=", 
   RowBox[{"13.605", "/", "M"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"91.35044102604739`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3.662751763692355`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1.6262886176197724`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0109728221664999`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"181.38339842774778`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";", 
  RowBox[{"U", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"r", ",", "u"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k0", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{"u", ",", "r"}], "]"}]}]}], ";", 
     RowBox[{"k1", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k0", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k2", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k1", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k3", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", "k2"}], ",", 
         RowBox[{"r", "+", "h"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u", "+=", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"(", 
        RowBox[{"k0", "+", 
         RowBox[{"2", "*", "k1"}], "+", 
         RowBox[{"2", "*", "k2"}], "+", "k3"}], ")"}]}]}], ";", 
     RowBox[{"r", "+=", "h"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"U", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "u"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "n", "}"}]}], "]"}], ";", 
  RowBox[{"x", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"137", "^", 
            RowBox[{"(", 
             RowBox[{"i", "-", "2"}], ")"}]}], "*", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}]}], "]"}], "//", "N"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.400955516443125*^9, 3.400955525636344*^9}, {
  3.400958009277645*^9, 3.400958014795579*^9}, {3.4009881226396465`*^9, 
  3.4009881242419505`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
fln/4Jakn4y78hEsrW7mO/8X4/58DCtQ8fjbRBblQLBcNOCvZw9jKQ4OSrt+
ylDpZSzPQXnyQsWBOrISB+PPK29YcqKPsRpn8O+z7M9+uv2MtTjo8p2++Ns3
sg4HT6XkgoUlA9Sfg7+rt+q1ef+m/hzs37ygtsTkD/Xn4HvMp0aziX+pPwfi
1aMlG7+TbTnodbzs4Nr0j/pzIGmZeqrQVqSK6c/BmvdtqjZNZHcOxqg4dVqt
HsbYhwPZk6dflt0gBwx+P/vOFuQZizIO5yDMc2HBjNvkOA4cy7x/2lsOZ5zG
wfV5U5xdnpFZHNT+dkre6SLGmMfB7o7yN3Z/yCUcFI+xO34qQZxxGQd7+ufZ
t2uPYFzNgYLGY1fBXXIdBwFHa3f2eIxk3MyBS9rlx28mSTBu4WDk+cm7E+rI
bRyI8r+EzDohyfgjB/AKLG/QlWLcxUHl1asBGd/J/Rz0G5rbXy8dxVi0AI9K
l3zacVyasVQBqieUPsw2k2EsX4DeqpedRcqjGSsVQHTKjOmCbrJaAZIXpfIb
78sy1ipAl56pW5adHGOdAqy/eLskrplsUICpraaJz9aMYWxYgG9zU/Rja8nm
BSjYUO/WYCbPeGPB4N/Xp1/nNJBtCxDz22ivgfVYxg4FSD272Z71iuxSgP2N
CYf6DypQ/wLg4q3JO0UVqX8BeNukaz+nkgMK0NBdmlazcBz1L0BhtnWu6CNy
XAFm64nX3vIZT/0LkJ12s01XfQL1L8DWUuXz+5vJvAKIR937ERU8kfoXIPBd
76bqZUrUvwBp0fJxWgPk6sH//jPdXD5fU6b+BUgpqCudHzKJ+hdg+wy57VOs
Vah/AbZcdvF6NWMy9S+ARqH/8oxhU6h/AWZJ96j6vyZ3FaAiIXb3C0dV6l+A
dfdGxi9pIYtyUS1tW9ZlNZX6c3F90lV15XtkeS5GhfY03NmgRv25MLx33FH9
EVmNC2PvU1b6O6ZRfy5UWJtqZ3wk63DxPextySgfderPhesLo7vDRmtQfy5k
p4bzZnDI5lws1r/ATTecTv25cHRuljrxhmzLxYXOVT87w2ZQfy4WBhoclVyg
Sf25WKq7/UzPa7I7F7uyc+c8TZxJ/bloXWuzvnm9FvXn4q6dfcdImVnUn4tS
eaFoThM5jotPFa8uV6XOpv5cuMVrrkp0nkP9ucj+7fx31bK51J+LcrUgz97x
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
JlmnGLx/EttydS9Q/2JsHGfjlnX3QtX/AFYQzng=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJw12Xc8lf0fx/GSskpWgwpJZTQkLZXeSYUSiTYKZaUkGsjeK3vP43COg0Ol
QTREQ4uSuzSUVKgkq9L6+T2uj/ufHs/HdV/nc75ezrmu62um9RHTAwKjRo3q
GDNq1P//Zf7rWUP/XmP+lQF3tqfommPS1xkrIWa1EJ8zaiZZDcrc6KvbWuaS
F+HWTzG345sWkJegyZ99wnSeJnkFnN+59swcs4S8GtEbM6vWFy9j7Ass17F4
VKuqTdZFQcznp7GnV5H1YFTy+W9EoQ55A1q6vFqu7QBZH5GFM7jx+mvJhjhS
p/9mkooueTPcvqSlSH0f8RZYtM9+YnRxHWOY4DMs6wMO6pG3wnfmVm0H4fVk
U9zTWcMpyhjxNjwMupT7bdYGshlGLTEQfpE1YnP0vH+3YbT4RvJ2LD0/FP/9
6Ih3oILjrb7p3oh3oq/2ZkiAnD55F4Ln2KQo7RvxbkRJz/vOzhjxHmjMXjLN
v2HEexEpJh8+7/eILdD5LlZIStGAbImQQNmb6atGbIWHqZsDF5iSFfeh88uR
p2r7yTn7sPVi9LwvDiPH9+O5wXTph4dGju9H0nz1zUqOI8etcWFw/U9t65Hj
1lgpPVh9wHzkuA1mzRJs+7xu5LgN2HNOu05ZMHLcFp22IftVZUaO2yIpRjLf
ZpDWo3gAQWYHzQSfknMOwG4av3ZD2cjxg5gSY8+2CR05fhB7BT5OirUYOW6H
ksiGOwIaI8ft8Dj8slTXP/r5K9pjOefRuOMPyDn20Dx9KfJJyshxB8wJ8z0+
33rkuAMqXj5PLFYdOe4Im/unGk583UDHHbEm6tbi8vNkRSf4n64TCjo+ctwJ
Psk73ootHzl+CPztd8/b/6Dfr5xD8FSoeltxiazojNdjjxhNPz5y3Bnc9EP2
RYtHjh/GZJ08Xb8e+v3NOYwotS8pF4vJikeg4TbhnbX9yPEjCLw9Z3/GLLKE
C5SvlqmcfE2fBxMX9O/u0RBNJce4oE3+h+WBbeQGF5z8tzg2fQJZ4iiuWgfx
qm/T58vkKHgKfRkv/MgxRzHb6tsxwVXkhqMon7LecsMgfV4lXCFUHXyJX0Y2
ccXbjI2Shk7kGFcs0Xu1UnkOucEVWarNW/Tf0udf4hiqq+XOXs8gmxyDyYdq
xeSd5JhjkHvoU9kkQ244Bu55MQHBvDV0vhse9SbcNppBNnHD1M7oiMQU+r6J
cYOUe6VQpwy5wQ0XN/cNmMWtpvPdsWv26OnvJcgm7pAQ/radHUPfXzHuKFv6
Kz9DktzgjpWvf2r9F7+Szj+OzBK3g3unkE2OY1B3/avFGfR9GHMci3WeBdkq
kRuOwztfPLu/cAWdfwISc2/WdGqSTU7gQ97gF/3q5XT+CYw34YRONiA3nIBT
srnz9mb6/pU4iTnPV/SIHSCbnMT7r/M/rBhYSuefxCFro6K2YHLDSUz6u0VV
WI4scQrRAWmvivj0/W5yCgsGp7c+1CPHnMLVca/fHX2pReefgsTvnRsS3ckS
Hug9kC66QoJs4oE/jerv9hYvpvM9cCy/cskoQ3KDB6rUsxWUOun6IuEJjWYl
jxthZBNPnErOeP1SnRzjCf3FljzXR4vofE+MNXQX8HMjS3gh57+1/42dRjbx
wuv77z7+rdGg870gtcevzuEQucELrp52zeumkCVO4/6u8edkQhbS+afRwIt/
4NZG18OY03A3KviSC3LDadSfm3EjMXc+ne+NAWGLKoOxZBNvnEoVkr/kNI/O
98YSLe++5iZ1Ot8bL7tnz2CBLOEDBScPU8lSNTrfByI3vsyeoUiO8cHg5BTh
q/GqdL4Ptr+6bPRZhCzsi9JYsQU5/iqMVXzh2PKtvvEPXd/1fZF8xW3RKU+y
vS9kEuQton/NYRzqC1v/Um0RbzLXFwPXS3hvBch3fBHq8SRgYvhsxh2++B66
JzFcmizshzT/BYWG2co03w8Kzt+CNs4n6/shyep7z8nqWTTfD0Jbp5Q1G5ND
/VCpZxexs12J5vvh4c9XWwY9yHf84LD85T2ONLnDD6L3s1ps+XQ/I+yPSRpp
e2ZvIqv4I63z+vK3nYo03x9nfS4cjAkn2/vDZqjjvdp8cqg/1kcbhWzNU6D5
/tA9N2OpYI88zffHm4I/6pYgd/ijbGzzC+OEGTQ/AP/qjZ/f/TSd5gdAvtug
pWoDWT8AJ99qXpbNn0bzA+C1aePRxnHk0ACMWXVJ9amTHM0PQKvM+XmTm2Rp
fgBGmez/ErSG3BGAgLVXhSbzp9L8QCR2HFx7WYGsEohfzcbhlglTaH4grOc5
/BkSI9sHwjxF461P8GSaH4jWTZrc1jFkbiAMK099Gx84ieYHwuhfb+jQOHJH
IJZerrZLj5Sh+UEQmORa3iZDVgmC6eudN29m0/2nfhAWzU6erDmfbB8EdcMt
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
HGxRU0rZKuHK2DoHPZNcv/+LITvmYN+X8IINk44xds3BUJ6s65pMskcOZkkE
vBFUdWPsn4M7LorLzl0mh+fArjnXx2azO+O4HDj6J0ctaSen5cB4xyzBDb7H
GbNyAK8ne84rnmDMy8FbS05HRh35XA4KNuCN0pGTjCtzUH5BZ9/BGacY1wyv
5+UDt7AGcv3/12upUBrqwfjxcB/VOItf6z0Zt+TgQOgujXhhL8ZtOWhv08vL
aCB35SA4TbRJJ+s0494cjKteN5R71JvxUA7M+PuOfDX0of65WHrZ6YXKJF/q
nwv/xA3rhkLIUrkIMblqJ/CXLJeLuRwjm50n/Kh/LjpP/RuU7ier5cL7vNIZ
Izd/6p+LibqK+vI/yNq5OCvr1pftE0D9c7FFp376F9FA6p+LghZMnJlGNs2F
/dGGlh3zg6h/LsRWv9jFryVb56KnpX2p7r5gxo65OHrwWO+iUSGMXXNRqTGt
M4NN9sjFkOHFXXlGoYz9c6Ey867TwV/k8FyUHZq0VJgfxjhu2I/21hUdCGec
lotuV7NZ7koRjFm5SBa9ZxHWTubloq9UIFq8OJLxuVykC+ON+qkoxpW58NSJ
SRfZHM24Jhcft99WbVQ+w7g+F0vWvjzTPDqG8eNcrBv7lGXrRm7Jxc6NY0xU
u8htuRjDmVO10iaWcVcuJrBnnj/fSu7NxWDQ+eJCqzjGQ7n4HmnWuPQdWYCF
0gNL/rk5xjMWZeFFq/Uj7wGyFAslX8XTjwQmMJZj4a3wKD+bKYmMlViw6Zrr
dIJPVmNh3U9rmbsGSYw1WXi/db/4iU6yNgsVVytv50QlM9Zlwf7+griDS1MY
G7KwaZVUYec7sikL0gqflm1OSmW8m4VRn1btP2uUxtiahcyuoPWrRdMZO7LQ
7XhEdNJ9sisLC+Q02yzjMxh7sHBXSkNad18mY38Wfk299e+DZhbjcBa4GeYL
TohlM45jwXF62NYZXeQ0FgwMHLn+djmMWSx4NqSqLHhF5rFglyVtpbI9l/E5
FvaaeaiGPSZXsjD+vrSUgymLcQ0L+ueKzd4+JdezoFyQ/U7MIo/xYxb+vh7l
PKaD3MKCrs1Xq3fH2YzbWNjxdnzvbZF8xl0s9K2bMfthDrmXhTGzHt2XXlXA
eIgFjjY/4dILskDe8M9n7bjnPhzGonk4v37bmRQVLmOpPPye4Bw6pZksl4cj
Th4rT4YWMlbKg5Mmq+vVGh5jtTxMGm3836HfZM08lJs4GRheLWKsnYd/8o+T
MoKKGevmwZ4/oBZhWsLYMA/bPlZH68zmMzbNg+XXbJc3f8i78+Ce3FOc/rKU
sXUecgpWqD/cV8bYMQ9W7PjWkGayax7OWfAQZ3yWsUce/Dud9cbeJ/vnQfKy
TfTPTecYhw+/n6txbqGPyHF5qDsSL3h/+3nGaXl4GlYr3PqWzMqDwvX8Ca9c
yhnz8hC8e5dd25gLjM/loabNaNn4dHJlHq4JSrqeXHqRcU0epjzc/H59M7k+
D0F+PasTPC4xfpyH1pXB4oGzLjNuyYP52YtPlzaS2/LQbvpb8FFABeOuPCQs
CRFyWVnJuDcPffLbDHR+kIfyYKZ8VMeq8gr1Z6PZLNjxp18V9Wejq8fXXsu4
mvqzIVkd1Ltc6Sr1Hz4uPKVL4xdZiY09E0/s29hyjfqzoVeWZ9xkdZ36s2Ed
dn7qjadkbTYUaoSPjza+Qf3ZmFuj4FVyj2zIxg7bOd2vNtVQfzb2NnzTLX5E
3s1G6LGpPM0dN6k/GxsVF0lGtpEd2Vhvs1y16Wgt9Wfjq/KMQ3PH1lF/NkQv
uivlZZD92dA6bOlwYPktxuFspIsFLI96Ro5j47mYmb326duM09i4q+NwOWrO
HcYsNna/kmrmNpF5bFw9IWfDD7nL+Bwb8lMv/L6xpp5xJRuto7i6wn/INWzU
nMh9XXDtHuN6Nuplb0fUhtxn/JiNZB1P+TDzB4xb2Bj/Z3fkDNWHjNvY4B4+
3l8k8IhxFxs5LbUcqzZyLxtiaz6laNo2MB5iI+55m4Z7C1kgHyWsctWJZo2M
RfNx46Nt1dRGslQ+RMd1N/K2PmYsl483QmuFW5+SlYZd4XjpkcUTxmr52Kz7
ejC5k6yZD8/NH1jbTjUx1s6HRNtqa4UJTxnr5qNC+nHR1HyyYT5OpZfct1jb
zNg0H+JFE7sntJF356N6Zuk0g5D/GFvn476zuqHGomeMHfOx0a7Y4n0r2TUf
czzPaUTEP2fskY8LIVPT129uYeyfD/2n+qdWiL5gHJ6PsJyC85EPyHH5OHlx
/oaDSS+pfz7ESgz0u21fUf/h+Vs+9ButeE3987HpReW5UulW6p8Pw/rG6Wv6
yZX5eHWAE5Tg/Ib656P4gPZDo3ZyfT4a3g/K21i+pf754K5Sf/H5BbklH/Ln
Q6YIWrRR/3xs7VfLrnlL7srHSvMnP3Qd31H/fLBHLz2UM0geyseOWaeFvge3
U/8CeCl2s22mvaf+BVCZXNEzppwsVYCQqt7DgyYfGMsVoKSrwm93L1mpAD0/
wo6YpHxkrFaAlwZXHH7qdjDWLID0psXxJ3rJ2gXQNlgv1F3QyVi3AG886974
7utibFiAyMvGa80VPjE2LQB3w82dse/Iuwtwc+fAob0lnxlbF+BKZfrb115f
GDsOv57xUeiadjN2LcA9oaS1Z+d/ZexRAOe/k7qKhHoY+xfgdnVq/FlPcngB
PFq3PR/VR44rQPGMIzlnnb8xTivA+IWTvF5+IrMKkP/C5lyacy9jXgFU9YPX
jusjnytAnG9f+wqvPsaVBcgwfSK3VaSfcU0B9saEq9qnkesLsPLFkdkZCwcY
Py7AewXeoOhdcksBlvSvsHpycJBxWwFeSywcPUnkO+OuAkSoih3oKSX3FuDk
kW2jQvb8YDxUgF5p01W/xH4yFuBATE3ktMsNsigHdSY7VcS8hhhLcbAndXtJ
z8pfjOU46J/bFrFx9G/qz8HAFLu9y+6T1Tg4tLz1v46MP9Sfg+Gf2JugY3+p
PwcfVbpDVpj8o/4cXC1dKZ4iO+oG058DT+PrSZuiyaYc8Kf53NsybjTj3Rxc
MVtVV+FHtubABwc2548SYOzIwd5yqddqAWRXDr5A46ytyBjGHhxkiN294hxP
9udg0MHz8v6ZgozDOQjbLTPP4jw5joOF/7Y5nTYYyziNA8n1L3PevCOzOFj6
1fBJvv84xjwOLNb6fvo8W4jxueH5sdJXmh+QKzlQlf4uEOQhzLiGgyPzN3vI
zRNhXM+BzkOHp5Vt5MccvJed/CA8S5RxCwfLfvTPLrMSY9zGgcu/eZe3zhnP
uIuD8E16J5J7yb0cFL5Y6sGrncB4iIPR0+6MuZAhzliAi9INkhFtHhMZi3Kx
eNncttKFEoyluNj8ZcBsfj5ZjouB/7p0R8tLMlbiIq8l6M+6NLIaF6+Sq0PE
5aQYa3LR6iiR7pFJ1uZinHtlMUtZmrEuF1cfSvbllpINuXDsE3FK0JGh/lxU
h7S+Smok7+bCkPXlwy37SdSfi2O3Sn7qCk6m/lxw69/ZqbHJrly0fBq0y9Sf
Qv25WLvr1LTqb2R/LkSiWhOLsqdSfy6MG+zfRZjKUn8uGk21JfxF5ag/F5IG
/IXnb5NZXGyKfmazPnwa9eci1lT3vZXpdOo/bPvXouqKM6g/FwsfLzNt6CPX
cNG39KWdxwN56s/FmV9jNMxLFKg/F4taqz7eMlCk/ly8Cdy/W/U6uY2LyRNu
NXSumEn9uZhvOq9F8RK5lwuv+tUVH5cpUX8udnSqO+ysIgsUonX8ICtKbxb1
L4Tg+OY2VgNZqhB/fJqcy/cpU/9CpH8O2tHaT1YqhE7ft5C1UbOpfyGu1ubf
+Kk6h/oXwntiH2fuPbJ2IX6X7q375DKX+hfixDHNOLtpKtS/EKM2WHhW15NN
CzFjoUWnhI8q9S+EfbjHxuDlatR/+PX61MXWfSc7FmKP07krzlfUqX8hArW/
/JwfNI/6F8JG2y602Gw+9S+Em2z2Nmm1BdS/EJnmkR5RYxdS/0KcKbDesfEj
Oa0QxxoN9S7ZaVD/QhSsnPhnaiuZV4g19f7f3+xaRP0LcWRW6liVZ+TKQlhN
v8EX2q1J/QsRemLSkrRWcn0hLpeeTxuyX0z9CyH6cQVHb5DcUogJss5fEkK0
qH8hWJeEG4VnLKH+hYhpuxx59SK5txB+rlj+1Gwp9S+Ekuz9h4e+kwV40H97
bElB1jLqz0O8zee1eYbLqT8PlRMcbgT/IsvxcLO9zMft7Arqz0ONlt2W2EPa
1J8H86Kw8WPmr6T+PEw4MJvf00vW5kHLT0/P/+oq6s9Df8uksW/PrKb+PDyI
MzFbZqdD/XmIVHh6r0xvDfXnwfDpBqXVMqD+PMjV3v66L4zsyMOMp9dCXoxe
S/150P09Y2vdabIHD021Bw4s+0P250Gk7V7iJl9d6s9DzJqTLtOF1lF/HkLy
u9fXxZLTeJgtlr3AWlGP+vOQcCVLQuI8mcdDw8mI/M8G66k/D30Nqb6T35Mr
edB790imJHAD9efB5YXzlQaVjdSfhwuuQZWsRvJjHo423Ni03kef+vNwaP7+
vBeLDKg/D26c/d/DOsldPGyrbgt2LzCk/jwIDVbl1tpvov48LFy7tSxLYzP1
L8J0XuzKeX/JokU4L7B+IKnRiPoXwXZZyHWRoi3UvwiDIqGVZeHG1L8ITX9r
c/cuN6H+RdAskBQs5JM1i6B0YH+QucpW6l+ETebVzR75ZN0i/IkXsdScY0r9
i/DlzOKVSTyyaRGs9gUb3dDcRv2LYLx6zopHV8nWRZi9vPzQyy1m1L8Iz/ZO
mzvuHdm1CE+dQk87eppT/yLUHYjarzJ1O/UvgoG6K8eqghxeBFGv8+MXWe2g
/kX4WXhW56rITupfBHermLeqFWRWESa+1U9Odt5F/YsgpdMzbt7c3dS/CClf
NNvHfyBXFqF7n9D3fbw91L8I1gqps0zc9lL/IkiLHXYdo2dB/YtwyuP21HxZ
S+pfBK/X8Ns3QG4rQlVFiZn1f1bUvwgbLTLWfrbaR/2LsPNT25xT/5GHinCW
d3+ui+l+6l8Ml7dKel0NZNFiGDl90xy9zZr6F2P3udt2j56R5Ya9VnGqi7UN
9S9GqFgP/n0lqxXjQ5RlcaqfLfUvhvsg5/veKQeofzE8g9VS7c6SdYtR55zz
4ZnxQepfDOGDIdMae8mmxXhjecnqaJod9S8GJ0H14YsN9tS/GJuPf/Nc/IPs
OPx+7tj7ZPAdqH8xnHxivq90dKT+xRj3mCO9XN2J+hdjxpRfcpe/kcOLYTz2
s1t79SHqX4zO31pnP5xxpv7FqJrgENNpd5j6F6PlxLnxshuOUP9iHK2wX7R1
kgv1L4ZzOH9CSzi5shghCsqi18Ycpf7FuKu7vW6qL7m+GDPDD8cNv3HqP/z/
N+73jgkgtxRj/QM983eix6h/MS7dv82RSSJ3FaP7QUsDZrtR/2K8FvX8FXiZ
PFQM60VFKv+M3al/CSR9k5c8/EQWLUG/6Me3kpHHqX8JvNxWNndpnKD+JUhx
ecPzaCErlaDqaHH3u9CT1L8E+Z3SCwxXnaL+JdCOcxlq7Cdrl8Bztfe3nHMe
1L8EERfF6165e1L/Eiw3GNQt0/Gi/iUQiNW0WDvhNPUvQekqI80rb8nWJXjo
83uSQZU39S+B3g+BtCmZPtS/BH7O3E1qur7UvwQblcvTp1SQ/UvQtmfMP6fF
ftS/BDcrwh1wlhxXgi3pR4P5mv7UvwRKvmbVDZfIrBIkzeYvq0EA9S/BQRf7
D1kPyOdKwDFICgmwDKT+JYjM2FEc1UeuKYFOUcfVF5FB1L8EPT9fCUepBVP/
EkRPja64cZ/cMrzeDN7ntGMh1L8EWlyRs9oKodR/+P1Y5U6sfUTuLcHXmxel
9gSFUf8SDB5c+0AZ4dSfjwe+QdYbR0VQfz62fH8/oauOLMXHhL6vaktiI6k/
H38Kc1ebWkdRfz7eSHcPOa2Ipv784ed7n638yWeoPx/WuytcNwyRtfl4XPXP
eZFrDPXnI6RMviy1i2zIx2b3FyluB2OpPx9vv048/uI9eTcfB0V9jDvs46g/
H/Y/1T9f+Ep25ONn47P/rDziqT8f/nEl9gIiCdR/+PXvCNdVppP9+XAU9Ows
0Eyk/nw47enmv39AjuPDUutXQ5JzEvXnQ/yCU3+LZDL15+OL0teSJ5VkHh9y
aX9D8+xTqD8fksH94oenpVJ/PiRMdz7c8YRcw4fIYyvr4Jg06s/HuB6Oh+K2
dOrPx7Ylc94ZTcug/nx4PjaLXNZJbuNj9dO0eKHqTOrPx6+NvZs6k7KoPx/C
Yx5uEDmRTf35YPnn8OsX5FD/UgSnl++1zCeLlmJ57cSeHQq51L8UveUnLBoy
yHKluNKsvvXtDBb1L0XDcXWtfBZZrRQrnrAWLVPPo/6lGJD3XXX+Elm7FDvY
iyYt1Wff+B9yjWnE
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.4009555224918222`*^9, 3.40095552603692*^9}, {
   3.400958010709704*^9, 3.4009580153664*^9}, 3.400988125113203*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Ce8phvoB+cwN4UzhyP8bhVHxL/pUmbc=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", "n", "]"}], "*", 
    RowBox[{
     RowBox[{"r", "^", "n"}], "/", 
     RowBox[{"n", "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4009879000495777`*^9, 3.4009879463060913`*^9}, {
  3.400987981757067*^9, 3.400987984280696*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "0", "]"}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"A", "[", "1", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"A", "[", "2", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["r", "3"], " ", 
   RowBox[{"A", "[", "3", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["r", "4"], " ", 
   RowBox[{"A", "[", "4", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "120"], " ", 
   SuperscriptBox["r", "5"], " ", 
   RowBox[{"A", "[", "5", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox["r", "6"], " ", 
   RowBox[{"A", "[", "6", "]"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "7"], " ", 
    RowBox[{"A", "[", "7", "]"}]}], "5040"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "8"], " ", 
    RowBox[{"A", "[", "8", "]"}]}], "40320"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "9"], " ", 
    RowBox[{"A", "[", "9", "]"}]}], "362880"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "10"], " ", 
    RowBox[{"A", "[", "10", "]"}]}], "3628800"]}]], "Output",
 CellChangeTimes->{{3.400987916673482*^9, 3.4009879845711136`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4009879210998464`*^9, 3.4009879242944403`*^9}, {
  3.4009879610873456`*^9, 3.4009879692290525`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "4", "]"}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"A", "[", "5", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"A", "[", "6", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["r", "3"], " ", 
   RowBox[{"A", "[", "7", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["r", "4"], " ", 
   RowBox[{"A", "[", "8", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "120"], " ", 
   SuperscriptBox["r", "5"], " ", 
   RowBox[{"A", "[", "9", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox["r", "6"], " ", 
   RowBox[{"A", "[", "10", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.4009879250054626`*^9, 3.400987986754253*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"n", "+", "4"}], "]"}], "*", 
    RowBox[{
     RowBox[{"r", "^", "n"}], "/", 
     RowBox[{"n", "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4009879776311345`*^9, 3.400987992252158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "4", "]"}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"A", "[", "5", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"A", "[", "6", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["r", "3"], " ", 
   RowBox[{"A", "[", "7", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["r", "4"], " ", 
   RowBox[{"A", "[", "8", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "120"], " ", 
   SuperscriptBox["r", "5"], " ", 
   RowBox[{"A", "[", "9", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox["r", "6"], " ", 
   RowBox[{"A", "[", "10", "]"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "7"], " ", 
    RowBox[{"A", "[", "11", "]"}]}], "5040"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "8"], " ", 
    RowBox[{"A", "[", "12", "]"}]}], "40320"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "9"], " ", 
    RowBox[{"A", "[", "13", "]"}]}], "362880"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "10"], " ", 
    RowBox[{"A", "[", "14", "]"}]}], "3628800"]}]], "Output",
 CellChangeTimes->{3.4009879927428637`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{827, 554},
WindowMargins->{{Automatic, 69}, {Automatic, 7}},
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 28, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[713, 27, 1953, 48, 72, "Input"],
Cell[2669, 77, 967, 16, 30, "Output"]
}, Open  ]],
Cell[3651, 96, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[3745, 101, 7466, 183, 312, "Input"],
Cell[11214, 286, 159125, 2611, 228, 149133, 2451, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[170354, 2900, 3545, 113, 172, "Input"],
Cell[CellGroupData[{
Cell[173924, 3017, 279, 8, 31, "Input"],
Cell[174206, 3027, 106, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174349, 3034, 100, 1, 83, "Title"],
Cell[174452, 3037, 92, 1, 49, "Subtitle"],
Cell[174547, 3040, 118, 2, 31, "Input"],
Cell[174668, 3044, 321, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[175014, 3058, 950, 29, 52, "Input"],
Cell[175967, 3089, 469, 9, 30, "Output"]
}, Open  ]],
Cell[176451, 3101, 1273, 38, 52, "Input"],
Cell[177727, 3141, 2191, 44, 31, "Input"],
Cell[179921, 3187, 190, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[180136, 3196, 2098, 45, 52, "Input"],
Cell[182237, 3243, 6665, 172, 96, "Output"]
}, Open  ]],
Cell[188917, 3418, 368, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[189310, 3434, 1016, 25, 52, "Input"],
Cell[190329, 3461, 37582, 1150, 496, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227948, 4616, 501, 16, 31, "Input"],
Cell[228452, 4634, 242, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228731, 4647, 301, 9, 31, "Input"],
Cell[229035, 4658, 359, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229431, 4675, 1105, 28, 31, "Input"],
Cell[230539, 4705, 2055, 66, 109, "Output"]
}, Open  ]],
Cell[232609, 4774, 98, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[232732, 4779, 1198, 37, 58, "Input"],
Cell[233933, 4818, 200, 7, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234170, 4830, 1160, 36, 58, "Input"],
Cell[235333, 4868, 327, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235697, 4883, 247, 7, 31, "Input"],
Cell[235947, 4892, 173, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236157, 4901, 1079, 33, 54, "Input"],
Cell[237239, 4936, 1109, 33, 43, "Output"]
}, Open  ]],
Cell[238363, 4972, 561, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[238949, 4990, 6751, 202, 340, "Input"],
Cell[245703, 5194, 2067, 63, 47, "Output"],
Cell[247773, 5259, 2990, 91, 136, "Output"],
Cell[250766, 5352, 2647, 81, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253450, 5438, 102, 3, 31, "Input"],
Cell[253555, 5443, 412, 14, 30, "Output"]
}, Open  ]],
Cell[253982, 5460, 1786, 50, 152, "Input"],
Cell[255771, 5512, 2782, 81, 192, "Input"],
Cell[258556, 5595, 884, 24, 52, "Input"],
Cell[259443, 5621, 18189, 306, 86, "Input"],
Cell[277635, 5929, 6515, 123, 352, "Input"],
Cell[CellGroupData[{
Cell[284175, 6056, 748, 14, 31, "Input"],
Cell[284926, 6072, 1027, 15, 30, "Output"]
}, Open  ]],
Cell[285968, 6090, 109, 3, 31, "Input"],
Cell[286080, 6095, 196, 4, 52, "Input"],
Cell[286279, 6101, 318, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[286622, 6116, 241, 7, 31, "Input"],
Cell[286866, 6125, 116, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287019, 6131, 189, 4, 31, "Input"],
Cell[287211, 6137, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287344, 6143, 404, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[287773, 6159, 91, 1, 23, "Print"],
Cell[287867, 6162, 93, 1, 23, "Print"],
Cell[287963, 6165, 91, 1, 23, "Print"],
Cell[288057, 6168, 93, 1, 23, "Print"],
Cell[288153, 6171, 93, 1, 23, "Print"],
Cell[288249, 6174, 91, 1, 23, "Print"],
Cell[288343, 6177, 93, 1, 23, "Print"],
Cell[288439, 6180, 93, 1, 23, "Print"],
Cell[288535, 6183, 91, 1, 23, "Print"],
Cell[288629, 6186, 94, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[288750, 6191, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[288867, 6196, 1995, 53, 132, "Input"],
Cell[290865, 6251, 424, 12, 48, "Output"],
Cell[291292, 6265, 22931, 383, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314260, 6653, 211, 3, 49, "Subtitle"],
Cell[314474, 6658, 118, 2, 31, "Input"],
Cell[314595, 6662, 321, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[314941, 6676, 950, 29, 52, "Input"],
Cell[315894, 6707, 398, 8, 30, "Output"]
}, Open  ]],
Cell[316307, 6718, 157, 4, 31, "Input"],
Cell[316467, 6724, 89, 1, 52, "Input"],
Cell[316559, 6727, 1363, 25, 31, "Input"],
Cell[317925, 6754, 87, 1, 52, "Input"],
Cell[318015, 6757, 1093, 34, 52, "Input"],
Cell[319111, 6793, 222, 5, 31, "Input"],
Cell[319336, 6800, 1563, 32, 31, "Input"],
Cell[CellGroupData[{
Cell[320926, 6837, 2946, 63, 52, "Input"],
Cell[323875, 6902, 2041, 65, 112, "Output"]
}, Open  ]],
Cell[325931, 6970, 2601, 78, 141, "Input"],
Cell[328535, 7050, 620, 17, 31, "Input"],
Cell[CellGroupData[{
Cell[329180, 7071, 2076, 43, 31, "Input"],
Cell[331259, 7116, 2516, 81, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333812, 7202, 1742, 47, 54, "Input"],
Cell[335557, 7251, 2012, 57, 60, "Output"]
}, Open  ]],
Cell[337584, 7311, 326, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[337935, 7325, 201, 4, 31, "Input"],
Cell[338139, 7331, 802, 26, 53, "Output"]
}, Open  ]],
Cell[338956, 7360, 609, 16, 31, "Input"],
Cell[CellGroupData[{
Cell[339590, 7380, 238, 4, 31, "Input"],
Cell[339831, 7386, 280, 5, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340160, 7397, 141, 2, 49, "Subtitle"],
Cell[340304, 7401, 118, 2, 31, "Input"],
Cell[340425, 7405, 261, 9, 31, "Input"],
Cell[340689, 7416, 802, 25, 31, "Input"],
Cell[CellGroupData[{
Cell[341516, 7445, 173, 3, 31, "Input"],
Cell[341692, 7450, 1727, 59, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343456, 7514, 531, 18, 31, "Input"],
Cell[343990, 7534, 400, 14, 69, "Output"]
}, Open  ]],
Cell[344405, 7551, 137, 3, 31, "Input"],
Cell[344545, 7556, 132, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[344702, 7563, 1127, 33, 60, "Input"],
Cell[345832, 7598, 8992, 247, 248, "Output"]
}, Open  ]],
Cell[354839, 7848, 71, 1, 31, "Input"],
Cell[354913, 7851, 87, 1, 52, "Input"],
Cell[355003, 7854, 3070, 86, 136, "Input"],
Cell[CellGroupData[{
Cell[358098, 7944, 528, 14, 31, "Input"],
Cell[358629, 7960, 687, 14, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359353, 7979, 422, 12, 31, "Input"],
Cell[359778, 7993, 861, 21, 30, "Output"]
}, Open  ]],
Cell[360654, 8017, 76, 2, 31, "Input"],
Cell[360733, 8021, 324, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[361082, 8036, 1274, 39, 72, "Input"],
Cell[362359, 8077, 400, 8, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362820, 8092, 117, 1, 83, "Title"],
Cell[CellGroupData[{
Cell[362962, 8097, 3332, 103, 226, "Input"],
Cell[366297, 8202, 638, 20, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366972, 8227, 1169, 36, 132, "Input"],
Cell[368144, 8265, 616, 18, 47, "Output"]
}, Open  ]],
Cell[368775, 8286, 161, 3, 58, "Input"],
Cell[CellGroupData[{
Cell[368961, 8293, 4671, 144, 292, "Input"],
Cell[373635, 8439, 31354, 521, 211, 28076, 466, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405026, 8965, 384, 11, 31, "Input"],
Cell[405413, 8978, 1262, 41, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406712, 9024, 249, 6, 31, "Input"],
Cell[406964, 9032, 799, 25, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407800, 9062, 359, 11, 31, "Input"],
Cell[408162, 9075, 1242, 41, 48, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

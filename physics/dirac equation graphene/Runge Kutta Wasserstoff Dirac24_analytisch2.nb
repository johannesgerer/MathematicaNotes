(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    513237,      11482]
NotebookOptionsPosition[    503223,      11165]
NotebookOutlinePosition[    503564,      11180]
CellTagsIndexPosition[    503521,      11177]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.400929210867565*^9, 3.4009292120092063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.398510314283699*^9, 3.3985103195713024`*^9}, {
   3.398510441015931*^9, 3.398510462947467*^9}, {3.3985143415045586`*^9, 
   3.3985143450095987`*^9}, {3.398521740984488*^9, 3.398521752521077*^9}, {
   3.3985217882824993`*^9, 3.39852181555171*^9}, {3.4009291415078306`*^9, 
   3.400929145333331*^9}, 3.400929201454029*^9, {3.4009296583209715`*^9, 
   3.4009296754556093`*^9}, {3.4009315704805217`*^9, 
   3.4009315718725233`*^9}, {3.400931927714198*^9, 3.4009319473624516`*^9}, {
   3.400932073583949*^9, 3.400932081445253*^9}, {3.4009321169963727`*^9, 
   3.4009321472598896`*^9}, 3.4009322157684*^9, {3.4009505065592656`*^9, 
   3.4009505300830913`*^9}, {3.400952119208141*^9, 3.400952122913469*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{{3.40092966626239*^9, 3.400929675675926*^9}, 
   3.400929716204203*^9, 3.4009315788024883`*^9, 3.4009319476929264`*^9, {
   3.4009320819459724`*^9, 3.400932147600379*^9}, {3.4009421661363263`*^9, 
   3.400942182219453*^9}, {3.400947968409586*^9, 3.400947975329536*^9}, {
   3.4009505245952*^9, 3.4009505303034077`*^9}, 3.400951035760219*^9, 
   3.400951844663365*^9, {3.400951933481078*^9, 3.4009519421735773`*^9}, {
   3.4009521231337852`*^9, 3.4009521272296753`*^9}, 3.4009527973732944`*^9, 
   3.4009573813947935`*^9, 3.400960045185136*^9, 3.400986946838928*^9, 
   3.423235009189416*^9, 3.4233072182892756`*^9}]
}, Open  ]],

Cell[BoxData["'"], "Input",
 CellChangeTimes->{3.423235008119416*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "Enn"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Enn", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"U", "=."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"20000", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Enn", "=", 
   RowBox[{"0.27766906844567757`", "/", "M"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"91.35044102604739`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3.662751763692355`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1.6262886176197724`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0109728221664999`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"181.38339842774778`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";", 
  RowBox[{"U", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"r", ",", "u"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k0", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{"u", ",", "r"}], "]"}]}]}], ";", 
     RowBox[{"k1", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k0", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k2", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k1", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k3", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", "k2"}], ",", 
         RowBox[{"r", "+", "h"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u", "+=", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"(", 
        RowBox[{"k0", "+", 
         RowBox[{"2", "*", "k1"}], "+", 
         RowBox[{"2", "*", "k2"}], "+", "k3"}], ")"}]}]}], ";", 
     RowBox[{"r", "+=", "h"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"U", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "u"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "n", "}"}]}], "]"}], ";", 
  RowBox[{"x", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", "a"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"137", "^", 
              RowBox[{"(", 
               RowBox[{"i", "-", "2"}], ")"}]}], "*", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "i"}], "]"}], "]"}]}], ")"}], "^", "1"}]}], 
         "}"}], "&"}], "/@", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}]}], "]"}], "//", "N"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.3985218756881824`*^9, 3.3985219191606927`*^9}, {
   3.3985219918852654`*^9, 3.3985220416968913`*^9}, {3.398522085309603*^9, 
   3.3985221382657504`*^9}, {3.4009294268281007`*^9, 3.400929432115704*^9}, {
   3.400929552909397*^9, 3.400929563594762*^9}, {3.4009296013190064`*^9, 
   3.400929636078989*^9}, 3.4009297266191792`*^9, {3.40092992672692*^9, 
   3.4009299582322226`*^9}, {3.400930055882637*^9, 3.4009300853650303`*^9}, {
   3.4009301692456446`*^9, 3.4009301695961485`*^9}, {3.4009302167339296`*^9, 
   3.4009302179056144`*^9}, 3.4009302490303698`*^9, 3.400930319091112*^9, {
   3.4009306232184258`*^9, 3.400930657097141*^9}, 3.40093081024736*^9, {
   3.40093085565265*^9, 3.400930856283557*^9}, {3.4009309388723135`*^9, 
   3.400930953333107*^9}, {3.4009311171787057`*^9, 3.4009311189512544`*^9}, {
   3.4009311835541487`*^9, 3.4009311940892973`*^9}, {3.4009312787109776`*^9, 
   3.400931280944189*^9}, {3.400931345967688*^9, 3.4009313838822064`*^9}, {
   3.4009314145262704`*^9, 3.400931498296726*^9}, {3.4009315668152514`*^9, 
   3.4009315691486063`*^9}, {3.400931612110382*^9, 3.4009318853833294`*^9}, {
   3.4009319698247504`*^9, 3.400932089206413*^9}, {3.400932159908077*^9, 
   3.4009322664813213`*^9}, {3.400932296604637*^9, 3.4009324225257025`*^9}, {
   3.400932491044227*^9, 3.400932568495597*^9}, {3.4009480469024525`*^9, 
   3.4009480509382563`*^9}, {3.4009501872000494`*^9, 
   3.4009501898238225`*^9}, {3.400952782111349*^9, 3.400952787018405*^9}, {
   3.4009528198456078`*^9, 3.4009528395138893`*^9}, {3.4009533094396095`*^9, 
   3.400953359641797*^9}, {3.4009534391561327`*^9, 3.4009535207534637`*^9}, {
   3.400953598565352*^9, 3.400953626906104*^9}, {3.400953720620859*^9, 
   3.400954018639389*^9}, {3.400954216053256*^9, 3.4009542611781425`*^9}, {
   3.4009542956376925`*^9, 3.400954310859581*^9}, {3.4009546481646013`*^9, 
   3.400954660141824*^9}, {3.400954702632923*^9, 3.4009547530153694`*^9}, {
   3.4009547916208816`*^9, 3.400954808925765*^9}, {3.400954844506928*^9, 
   3.4009548454282527`*^9}, {3.400954982805792*^9, 3.4009550113167887`*^9}, {
   3.4009550529466496`*^9, 3.4009551439575167`*^9}, {3.400955185627435*^9, 
   3.400955233786685*^9}, {3.400955390321771*^9, 3.4009554033404913`*^9}, {
   3.400955489193942*^9, 3.4009554897247057`*^9}, {3.400955538625021*^9, 
   3.4009555563204656`*^9}, {3.4009573296804323`*^9, 
   3.4009574127899375`*^9}, {3.4009574637331905`*^9, 3.400957526483421*^9}, {
   3.4009575701061473`*^9, 3.400957656820837*^9}, {3.400957808719256*^9, 
   3.4009578335449533`*^9}, {3.400960054528571*^9, 3.4009600654743104`*^9}, {
   3.400986761752787*^9, 3.4009867652678413`*^9}, {3.40098695915664*^9, 
   3.400987049957205*^9}, {3.423235042732416*^9, 3.423235077320416*^9}, {
   3.4232367869624157`*^9, 3.423236790468416*^9}, {3.423236822746416*^9, 
   3.4232368459884157`*^9}, 3.4232368875944157`*^9, {3.4233072098182755`*^9, 
   3.4233072375732756`*^9}, {3.4233112513607254`*^9, 
   3.4233112642507257`*^9}, {3.4233114733267255`*^9, 3.4233114957707253`*^9}}],\


Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
vc/NRhLe3Pzx5WFzILa/Fi853UTC8p6Xei4NgdA1Y3zzfEVCs2jHj5VPAmH+
Kkf24GsSCquWT5TXBMLx0IDjljYSIhvcTO3uBiKwSTaHu52EC5JjnH/KAxFn
7N470EFCtsklkZwbgbjYWCz2pJPgb55b3L6CQNww+mmX00VCu44Z6evVQNQ2
KJ0/1k30v28HEuOzAtFqGPCG1kPCNe1Dm+TTAzHwrFJQu4+EXUkWUk0pgZg2
mD204RMJvr8OxXqdDsTyp1qnZvtJeLxf1WplXCDE9kU0vB0g9CQxlVQcFQiF
J7VclYME/9tidh6MCMQecOw9N0To5Xib2VBwICzq9h33Hyb8l6O5K5YVCOc9
J2vMvhP1mLLvlPYORHDti3mFnyTEVEccrHUNRLzuSs2VYyQYevOpUxwCcanG
NHB4nIg38St9mhqIUu3k8oZJgq/fpUOSbQNRd//NaP4UCU2PjrTLWwTijdY6
hdgZgk9pQzefmgRisNrOw3GOhDOWxisZhoGY1cy8rv+bBNH8uJEZ/UCsuNsz
8N8fErbPR5md1Q6ExE4p6cVFEtSPiWlt2RkIxTsOjA9LJAjJqdyoVQ4E1PMu
3eMgQyY/r8hmeyCsKr52pXOSER1gqfZDNhAuqttEgrnJ4HkhYhK9MRCh5V5W
1rxkhOQ2T64XD8Qp5ZvJqivIKHxsqlC6LhCXy8ZfCa0kI70wYB5CgShTVFs5
xk9G2mVhWidfIB6XBhm9EiDDoZjT1pM7EB0K1SdKhMiwzhIbXlxi42vJ7ycJ
wmREcm1fn/KbjXl53X9ua8l4q8n7WWaajZXFx3UNRcg4eDjSpGqMDcltT8I3
i5Lxe4urjdEIG8qFXNXLxMigOsVxdH9hY++WA9OfxMmwciu38PrIhs31BNVH
kmR4M24d+POeDTfZZr/LUmTMax4ePN3BRlieQOkRaTL0Cu0UJF+zcVrGYoQs
Q8alref+K21kIzs3dcsuWTKqZp891HnKRrl0p7PIFjLyN9xb2VzLRn2OaO7U
VjIkScp81HtsdEpRP76RJ+Pi3rH7wxVsfMu+LFGuQEaiYrVU6E02fkt+Ip9V
JOOk5qHdPEVsrLq8Kd1HmQy/PV78adfYkJJw6TBRJaNotD1dOpsN1UsFq+XV
yTCo3Nd3M4MNA7ERs+U7yVB+HtyvncqG7UWF0181yfCU3nrtRRIbHqJ+jU+1
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
d6F1e3LoiH1arfs9jYHOIUtLyVyi3kVHrQXjGBh2PX924Rqh329p+3eFMbAw
+K75fT4d8msyhFy9GFjlIsZXXUBHTazUnQw6Axu/0A5cKCLOc32i2nqYAVWn
K7GBJXT4lYkk8O9lYP/n/seWpXRckS2/a6rOgJ3D5iXlMjqKmLK1qXIMeH5y
1REsp6PzGXdWnygDEcyisJ+36aCmDpgrrmTgTN/3qqZKgh/vzHqiF+m4Slec
KqqigxHSqdszRkdFj79KfDXhX4rLg3Z/puM5tcLX9T4dw2f8oy530NHVPV1i
UEOHOc8lR+4GOkbIu4Y31RJ4dq8WDbhHx2JXuBxHHR19ioyrA0TegqSHTh8f
07GRY/lfMoHbpndLOQ/r6TijeGHH22Q61G339l16RocG+4ySTQzhQ29jxcOJ
c2O9gji7CR6TrRtIpEZCn+dbCp0IHXm1r7iws4mOGQsJqUkKHccsD7WvfUVH
1eBHlxOmdCS3nRH61ULoN/xihCThY7nmbaZtrUR/k37heJ/w1Tuv1ySWvaGj
vW14PU32/zyzfZFE3CvT+8ilZaKED73K4PbuJOLXzP0oJfraj0Mf9hp30cEK
6VnJIPrq3ybJyK3ddFzakzMrTPT11Sb2D3l66KjLqylr/kyDzMvc3196CT+X
LVJLfEvDzoODmvUfifoo9USbvSD2xBdbgq720yEt05Ql8oCY0w543j4+QIet
xUjkADFn+jy/MUYfJPi6dEPxDjHnHt8/pqAzROjH9UR+IjFnn3uq4ik2TIdn
1ZcvrsScn7cvsGBuhI7V67R/GBJ7xt0nVV86fxB8ypm9v53YcxoxL31nlI4P
/vHm65g0fKjTZqaO06GbTrnBaUnMJXuOZbEmCT5Ld7+aIfbMf7V17w9PEf1D
NKBylNhz1+hxrlecIfz0xGnmd2LPln2435p/jg4z33MtP4g9X1MnPmVkng6+
7u//JoWIuf3By5YXC3Tca12aXuSkgbZ7FX8BwbOXNPXSVbNU+N07fPDEEhHv
9KjsphEqonadO+nEwUAY6xxTu5eK1Lsd9eBkgEs2hkxupeL6zvUcG7kZEHi+
aU1EPRXVd8h6f3kInR15k3itioom9awjPcsZqA+efPK6iIreir7q+3wMHJvo
v/svi4oxVemZDH7ie9Ulj53JVCy77aQWIsDA/KmCLv8YKtaqXPe3EWLAnqbJ
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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJwcV3c81f/3t/fee+95l7uve6zsVZSkiIwoIUlpKWVEZBZKFKJF0rJeRanM
EEKSpELJR7b43e/v/nMf577e933OeZ7XOc/nUfc/tDWQg42NLUmSje1/3/E6
c7p9X08y2f7/86dJ/OnilX33S5gG03Lt6SWSqKL06Hbd7irmupj53KFt6sh+
9rCfkv1Tprts92Bskh76SY4IFX/ZxCz+XRNOjDJFNhZE6rlrzczlo/vk8Px4
JB1EaPq3s5V57Yxb0G4zIvqWgrOOlWljJls6Ox0yp6DaB5i3//V0Ml9+vm9E
1aYjq1DZ8se275lMomj7xSlzdOdE7s957V5m9iLTLK8VkGS6tBGW6wNTl/4z
9C+/JYorzg4PH+9nTrgG0pvoVuhrjWT1HTTIlG33e7TDzxo5vs6c/3F9iIl3
wFOUjtigmkFxos7JESbBfTlzf9wWpDidERuwa5Sp9T5mLv+wLXq5kbi7W2mM
+dj/6xz/Hju0mNi68VvwC9PhTMItEZo9MhDnvSG89oVZgGVkbgo4oD35WyyM
psaZJhLsL7GdDihT88K4w8evTFSJb1xOcESv7746t//NBFMl/u/VMlMntGrG
rZ305BvTb9xr8WKnEzJpsn5dVjbJPGGUzbu81xn52yUEv8r5zgzGiuaTp5xR
7vtmvomEH0xLzCHZ/GAX9M6bs5Ij+ieTqz31YvCQC9r4aumoHjDF7Nixq2LK
0hXhDp6dYW6dZqJXqCus2BUFLb5I22Mxwxw8sUcEt+iK8k+zm57E/GL2VGjn
vFBzQ518Ft0Fqr+ZsdG+799buCGOzDORz0VmmddtB7zD9rghoiKS+Phvlnl2
wxj3IMYNmfVsfoyL+cM8uTxV15DihrpyiwwEf/9hNsbVvnyc74b272LG5QfO
Mb3NE489K3NDnGqf2/Q/zTHLDQZPTtx3Q9cmTik98/iPaXG4+aNnjRsiVagc
tGv/j5kkoMNj+MgNvT/Y2DBgNc8cz3g8c6baDYXh9ogE180za9tlpg7fcUPc
S//2LOL+MnMaR7tUS9xQUd21B+cr/zIHAooni3LcEOUMg01aY4EZTpmeFbng
hnqtP7ndurrALMyg6iUedkMH+U8W48UXmZ2v5+w0WPnxdir99zJpkVkdaZWy
YuOGijPrLbeyLTE9M+RKtQ3dEG2HT9aXo0vM5fd/+hqF3dAHxfWvEbNLzKfc
x2ueDbuiQ2MFBLbgZebjPcHzxnmuiL+Udj59dJkZoQA8fC6u6Ob+4Q8q21eY
/x3ZXhjN5ooYJnE69ztWmP1vmSeL7ruggf8UjjJsVplpjW4Xa7xcUOST563t
9avMQ8kirUMbzkjwhLecD2GN2e2Ws9W82BmVwmrI9J01JtuH+WgecEZM7vxn
xzXXmW/jTlzzHnZCH99SBAQK1pkPhwWD9x52QocvffS+KvGPufzVugD4nJDw
tmN39FL+MecbXpop5zui27Ly60/YN5hmCRCsqO+ILEeeOtke22Cen358ZU+t
Axq54XWt/88G88jKoXB+pgOKCVz+FRiyyVSbEGtjvLZHYgZXzBc+bzKtifk9
So72yHOpwPalIRs83Lrn1+sOO1TycXo2OZgNUOTvd7tc7NBsHe2K+002MMJv
7Fttt0X06xdB/jMb5I8yOF7Y26LkM8M/xhTYIfWAIaWjZQvq9ze8fHs7O5yJ
HPqPZr4FadrEUSIy2SGbq+ag/mMbFKHb9oXUyQ6dz3Wh2sgGNfArpmzyc8Bc
l/+u38XWSGAmFNdqwwHxOVPCa9LWaEfn86FL8RywAxg8c0lW6FaVwLntDRyw
YLTP8+eqJZrL9DZUWeGAUw9PRa6HWSLzI5W93wicwF5oTbYcsUAXd6zG3Yvg
hEu+Z+beO1qgQYqD1pG7nGBvEO/+8jkgbaX8dvoPTjgymBCnrw8oauNnNJcW
F5waw/NRTZioaYyi3O7LBaVh85MB/OZIqDn5VVYBF7CNPkpf+UpHO0s/Htw1
wAUmHw/PajTSUFmivoymJDdcHYUfPFeoaH7/scYpF254tvbEsy2SgsDpbdDD
FG4oOxcinuNIRmkm8qLHX3NDHJvJUqI2CQ2J7X9iwcED6ReO/3y9aYZ055/6
8pvzgG5W5ofDQwQU/YGP7/0xHhgrev7kQS0evXjiVXWllgeysrYX5V/GIZH8
215+czxgQll7uC0ci3adWGbTM+aFyIlIwoojBt3eY1cxG8IL0YM+/O6eJmgB
rrg/ucULilaHXNeljJCl5o+VU2O8cKiP67LhgD5K5yaXbFHigzGH08ekCnXR
yPdEBxEvPjBmp4pPB2gj/XcD/33I4oO9zXMtX0w0Ucxd3YJrXXwwLy95UP+f
Gmq+dNQqUJAfPlSMVoxfU0Zika3TRrb84AnV5zrt5NHubbLZf8/yw/keh7/h
a1Ko0iyYXt/ID+v1xCvyj8XQkuyTiXOr/HCGzL/N8j8+ZL3Kk+ZIFACoOqFw
J5kNXR7ZbiYZJQAaSvVnRYP+NI02ln0auicAbP+u8s9LxDMNixfPl/wUAOan
Xqxhwh9m7LktJqHaghAqHsUX48sGrwJz+7F7BeFdZLXlgxA+kLCbPLVSKAiE
DyF3b5iIga8BUffFoCAkYvsqvFSk4K7Qha4kKSFWft1p1pxysPL7w1E3NyGo
a4mrMvykCFvea6vJpQrBbRuDlwN3VCGr5sibz61CkGA57ZvyRB3Gcl5FlHMK
w589Y4e9sjTBOFZa/hBTGIQTFHaY79eG496BL4hxwhBAZezUpuhCK712/8Zj
YfikvvBxiUMfpFS5JV7/JwwJu/Osil8bwF52z+dpJiIgnNPHLZJgBPe/3vL3
DBWBO+6nMwxpJrD26q+AcpkImJ0IdPkxbQp2t61rJr6IQOlelW75NgzkpGTv
uqssCl6D3dMbhVgYPzDBGb1TFMbypeQLw3Bg6kq4S8sRhes0y9ApIh5OYBM8
ON+Lwhu3Yf+vG3j4xh96KpBHDM7YmiycaSaA4NrlrfZaYvCTi/NMQ4IZ4Gae
6RhbikEa1a09y5IIXp++rIr5iUHVthWBzXUinO7k7/p7UgxCvmT3rNaQoLQJ
e3OwQAyuhtGUzwWTob1q59H6Z2Jgk7ZnS7YsBf4rjne8MSAGXZa3+QxbKCCf
VaGasCAG2u7jcdYHqcBMeD8fLCkOy3e/SYxK0CDoyEqrI1Yc4t9evrrwiAap
QeqFpq7iEPG4DZe8jQ41O+wjJA+Kg8BCwva833T4aBdpvZQiDtdn3napXGAA
G/Wq3PBtcXg1OfBcRcEcdAxfzDS+FgelE9RzuZXm4Kz0E5VMiEOI958v50lM
OCwsnnOBQwJcnfOGZxAT8jfI+0PVJODCM9fPgZoAaNaP4WIuAfuaX2Zc3gfw
fSxJHOcjAQzplD8rNwGEe6q+SR+XAGPh7elFXwAIzYPPVvJYdr696jllC/B+
xHbpU60EiKpqHy7dYQHxpXr+L3olQKMy+iRvhgWU57oRS+ckgPfoC9fK1xbQ
mRgrkCwqCVuqXsunr1nA39gboweMJSEyqELviYklKIa+eejmKAm5D/GTmn6W
YLHrzwXCfkngXJUY7E+3hBAnuV1yiZLgay9f9L7BEi4xwHT9liRYNMQvSk9Z
Qq1JCOfYS0m48JtUUyplBcOqGQPNY5LQ4aXRfJZhBRziT++Ub0jCyepDRg/2
WYEex9jpi0pSsKz9Xcg4xQpc53k9DlGl4PpR2tWNe1ZwZMJUb5uXFPjN+Cnp
dFtB4Ycd68QYKXgjMLlY+scKXr4+3a2QLQWhcq7Xz4haw88n5bc2qqXgrXt0
4VMjaxCt6Iod75KC4Z7xS2521kDMX3J6/UsKDumCjqO/NfhcVFWvFJSG1uNV
2neOW8O5E7YLafrS0L+b6X/4sjVUHDz0NtJWGqoUHV+WlVlD9568a56B0vAy
6z+63XNrWHRtiqSck4b0y+c/erdbg7LFdxvlYmmou7p0/8uINVjhRBXYm6Rh
i5bn18/T1hCqSfo9MSINKzTaHa8Va8iQ8n35ZlUaeOPc7V25beAJd2LuXTkZ
kN/9WrhV1AY+Ld4PzSDKwPxoh2eznA1w/eg3j/aQAeF9Ghdt1WzA4OOGhFeU
DCQMJWru0LEB93c632kZMjAi7X5jwcAGjta51KnelwHjnd/TdExs4PrdmHTO
dhnw5Pc498vUBlquXQ/4/lMG1k63q7tgbGD60mtSG68sKC0zpZxY5+Jnfgs+
0JYFlbTvItNGNkCOlBnLtJIFB5vBThN9G9jjb/4oZq8stKnlyStq2cD5bUFJ
3qdlwUrnQX2Nsg3csb7kY35NFjBB9mnr0jbQY/YYo1EnC8G/XwevCNnAss4o
F89HWVgp8zG9z2EDqnI8H38uysKceHWHypI12PCb3OuQkoPQ73E41ylrOLDq
GV+Nk4OLibrbrFj4Zk6f9MxxkwMxerTBJgv/ZyOl+sfC5UDUSvnphXpr+NzR
8c8nVQ46Ck+zjVZaA0/TwnuolIP9uZZC/FeswahKuUzrjRzsFuT4IZhgDduK
bY7zTcoB2rF6cyrcGo5lHnSZ4ZQH34XabRVe1nDjXI5Gt7o8dDXUCztZWMPr
6IbFGqY85LdZT/frWcOvwG/v8nbLw9DfCV4X1n2U3CFcFBcnD2c/2sXX/rUC
qp3ZYd+r8oBOT8aIf7QCP8puW6sn8jAVW8sfVG8FiQbnFXU/yENU8vddT65b
wT3Fe7MC8/IQ11mSwX/GCvqEPjT/FlOA0l0NbX5+VrD2bz2vx0QBuh2PY18w
rUB9VuvAYycFSGHaTZqoWIHdmBPkhyoAu3W8yP01Swh/Hy11KkkBPJSNOi0H
LSHnZeGPvWUKYDrbaDdXYwl1NS31Ni0K8Nz8642GS5YwfmsmQ39cgTUHact3
QiyBL1cqUJhNEb6W6x1CFpZgmkinzCkrwpxVttamvCV4xu4T/kBTBO7kJ2YH
5izgxP7UL093KoLN6GSD4BsLKPF+VFt4VBFKd+7u/3LNAt46jiSfyVGEvXf4
c/+LsoBZOteefTWK8IDuI25pawEyJkY4u/eKgDkp492nYAF0VQ8eo1nW/70V
T9/7BRAgdmJIVFgJToxC6vsmgGT2W/fnDZRgckYjxfoySxb813Z2wE4J5NSX
Tgr4A/R/nd9eF6QECS/37tfFAfzrUzQsSlCCjk5HhyJ2AM3XVptnS5SgTC/a
bOYGExyehPUGISU49NCh2JfBhIjbWeUOo0pwS7q87sagOeRdrYszWVcC2a8B
vk+izKEh5aurhIIy+L/z23NH0Bwm4gS1FknKULhGjU+4yQCBg/jlj57KEHic
N9GBygDsnl3tDYeVocJbVJu7mw47XM/dKL6sDGc/p/HU76PDKbgTff6BMnRF
R7THLNPgFrbXbn+HMsidkBNmXKRBm8aakvO0MsR+U/GQUabBnKTmHIZfBXzS
5DUE7lNBjtvxlZSuCqzt8J9RNaeC+WLU1WVrFTjDOabk20GBwO/5B0f8VWCh
olu8axcFLg6+tEBnVEBuJkf56E8yPHw7JX3rugo4Np69sCeGDIPPJaYS61Vg
tbvyQioHGTbvUBvDhlRgIK3Gke8SCbSv+We6LqvA7ptli4NyJHC6lBKEl1EF
ktzrAu6bRIg6/ZAqS1AFlbG9ljlGRLgaMSSy5q4K09P3Jy7VmkHTXo6vo4dU
ofx+0aEVhhlMbjV48jJNFaLEG18OvyKAkPXWi2UsHWXWzVNFdyYA3uy4b8pb
VVCjvF7T6MPDTp0SfPh3VRC0j/HJ8cYDEvzGWcGhBt9Vrh/PH8PBNq6VX/ni
anAEPfxDDsLB5LrQYKqaGuQYrDgcncbC8QW1l6dM1SC9fD+vTwQWhH8T7kaY
q0FLYHbOr78YuDFpl+vvrAau9onbcccwgP/sc8bDRw12Tu6n7F01hdaBiNAt
YWogP/dsxyd2U/DuTvAgH1cDmZSpyG98JvDrzRVzg2Q1MLHR7zsvagxnXtzV
U7qiBm3N9XffSRuB1HMkIVKuBvfoo4JI0RDKH/atb9aqQREm52ukugFQ7/yY
nGtRAy3LHN4ZHX3ouLne/bVXDbx1VIypRnqwt1Cs7sO4Ghwo/TQVjNWFv9la
pa1zaiBY3Pv0DFEHEtPI6c/Y1CFFlvwnnaYNChecjt0RVQdXhYC2G6AF90/5
BVxTUYeo+48DG200weJotHO6sTqcvZRSN++gAX2HkkjxdHWIa5GvdHRTh+CQ
QvXDjuqgKRk12+2pBmt+VYKB3upAdXrnofREBS7tbFnYvl8djNiWHik2K4H6
1sHPdrHqQGb0ND3qUoBHDjNvqYnqEJvLu7Q2Igd2VmyPjHLVwVsz5hr3tAwM
06Suq5Sqw8tSzSffVqQgnKCXJPZIHb5/xPFX8UsCuzE9iqNZHWTGRuRjFcQh
R9vN5+97dQjaO+xX4iUCeir7tkyOqYOUTGJl4SkBqJOJxQzOqkNkUclNrnIe
cBFNVXi3oQ7Oh2z3br7ngHHeG1z1whqw7F+64L/5j3mE7dHve0oaIFG+IHnK
b5HJt9I6WGSoAcQnFXdM0n8xC+aGX16masCPi5xfe3tHmKZTs3fP2WsAIoP0
nzc5TS/HOfOOeGmA09UO3PPIz02ew7LxwcEasKr6l+pW+7vpR69h2M4YDeDN
oihfer/YdKKd6el4XgOSEuJNP8NGk+irbUxGtgZ4VONijfs4UElDsL7pTQ1I
I66vjJ3jQWaP4yTVH2rAiuvYeKipAHp7P/2fxAsNuBAvFn23Xxj5lN/8ztXN
iu/z70fN9WJotujJ+8VRDaAVPPz3+6IEOnulre7HLw1gj1c6+NZLCslc/lw6
tK4BRcc5rlpryqCK5Pn0dkFNKEOyHlunZRH9LO/xRgVN6A+ruzdRJY+6jivu
q9LXhEiTV3O/DiuigMOmLiVkTdCwcLvtR1BGi2FW5GxbTThzKSHH9D8VlLxv
h8aF7ZogIPVgpGy7GlLaHSYUyxLC/YnPdAdw6qjK8/Ti/mhNaH6wK7hEWANZ
uWSN7TqnCZO/iqI5vmug/i3l75wzNWEwjn3LXKMm2s+se8Qs1gRVI6fZkBwt
9I/UdR1bpQnHD8UVB4RqowzM1yTNJk1YLrlSOczQQZr6S1HSnZpQfefKkTZR
XfRYXXA37ydNWJggpxiP6SIHBVXblWlNyAscTl2/r4c+SeCx06uawFvsb44/
oY8iBG0VP/FrQUuI0Il2WwPEybWLu0tOC+5udWI2ixuivPXwWaSrBVeTSq9J
DBkig4WzHx8SteA2d8Kb2htGqOFXbvMtGy04YSMtfDvQGLlNVt7L9dCCJ/vV
+ib0TNDEaGNeUoAWjHz8VBw8ZYKODvTEH49i9eXeTmmjSlMk0D0ZdiBeC8R/
2i3IEDDo+ptVzz0ZWnAwe/Q4IRODsC9EwK1IC0TUB7MOzGJQyzMNA8v7WnA5
tdamwRGLdjwkShEatGCLM/amVjkWTVc6bGi3a8GeCwbtN9hx6NTNPT9kh7Vg
gi/9l+kuHBIvjOrhn9ICV00bi+4aHLqVfaF+bVkL4i2kRc4I4hE5Lb/sF682
fNuTVc7wx6O28/czPstowzEnvnDep3i059TL4++1tSGs3btzWIiA5mL69zUT
tGEtYdnimR8BnT805VJrpQ2O7Y0u12sISC5kg1y+VRueu3y9kMxthu74SWhe
3asNvpdHko5tN0PmO3WEL0ZoA3Orw+aBMjPU405dOnFaG1paP93wXzBDgQ4u
X8IvacMyssDstCKiZUv/Nr9r2iB0m+OEawYRXaTF1G69qw1XQ2L2WI8QkSoh
pci6ThskabcaiLok9NDoejLxnTYMbze6qB1JQjbaDw/rfdQG91TTFtHnJDSo
/Hq3wg9tcHlDjPzLTkYHZIZshZa0YcdZhbIeOzLaFPmN3eDWgQmZqfiKS2SU
ycuh9EdKB7hEe01ie8lIm02GZ1xTBx5s5xtnyFLQs2X9P704Hdj0rxhe2UlB
TnOMoVcWOpBtXxF0p4CCPv90b3nipgPe72oH3UcoKGo88H6Frw58dlLJnFGk
Ip7hY1cKwnUgvOf5v+PeVHS1N+1s2kkdEB/tyVjPoyKj9uIDp1N14Po2rraI
PipqaqndHlmgA1MuBsQBURra1vAWAip1wOKvVZCpAw1N1n4y8HymA8a0XSux
52jo2P05Kds3OnDrUVheTR0NCZVzb5IHdKDA2f6/0f9o6EaR/E+DSR0QE018
tapHR/grxr1KCzoQN7K7n2cPHb3OsGgQ4dKFh9iseY5MOtqZ7FnOJqkLml98
F3630NGv+P2X/1PXhZDe7Q3vFunozPGTcRMYXZB+60jM1WUgycOXA/uZulCl
SvVw38FAZWGlrm9cdKE631Bq/TwDUfc9ozzfrQsHsaoncmsYqMOnQ/PuAV1o
G5/NVxtjID/PL8LX43QhPZ2WlC9ojuadF5bSU3RBacR+HxfRHCVu4R+Pv6oL
4QrzO/b4miMFpnL74du6oMpIzL6daI7ukbCPA5/ognnfo21f75sjwNjc2PGa
5V8qYkDkgznq09uZYv9BF35PfdxvuGqOgtUPRtMmdOG5vO5uigoTrcrH7zGe
14WKwERBigUTpUnk2Kly6IFUp9CAQQATqQtW4MTF9QDfl6kvmsBEjzgblDjV
9ID9fWn05E0msl3v5lkw0YMC71Bs9UsmYu0VfyYZevD0WcLYoTEmCv+1PDTo
pAfDh9gENP8xEfuk0Kt3u/Tg0PeC64FCgLJH1R7Uh+oB8f3upEestUN3gHD1
/jE94IlRvnxKB1Bdl925G0l6oLzTTLAFB8jljc/BzDyWv7kYp/PmgL6giB0J
Zax4ylTuv7QHFP0swSKmVg/EelpTT3gA4nt4xTCkRQ+cB/zsavYAKqi8K+3d
qwchZFXr4BBAJjfRpuO4HrQ2HZ68EgnoRUHfT8acHkRUb1yxOw7IM/tHrymb
PlzhS3gTcxbQj9T1BnVRfeB58XlCMwVQ3Hmx25Iq+pBqtOrndhmQyCmtTG5j
fej2qH+4ngeoJIZ8YommD5f3c23Tvw7I7JBT0E8Hfaik5Tf03wT0JtjPbXin
Pmy2aEZyVwDa5RdN7QjRh4sN8rO19wDNeiVpNR3VB8Sor/tRDeise6FI9QV9
8A/n3XO9FpC0Q9VySY4+yG+57TvwFNBty5bx7Fv68Mljzim7DhCdNth+oUYf
Qq91PfrQAKgLP/M49qU+TJ1o0itsAuRvxFYc+l4fNm68oP9AgBa0pC76jOmD
g5Bb4vMXgJKV9Y64zOpDjf62YsmXgJRk6L6woQ8Hfsvo/GWdPxBxs8cJGwC7
INT4sGxL3n14LSUDiDN88cOZ9b7+zaPKMoYG0LKlO+RNI6D9yxd5+agGcODf
8EB7PaD1P0VzK3YGMMsbP7LrOaD0nzXD0zsM4Nqj06oxTwBpjre++hRkAIwj
1Y5KjwA9Hhp+0HXEAC6f2BB2rQJk3zt79UWCAXSGbZMWvQtopI0zoSbLAPTF
8iR2lwOKaJENLy0xgGzMjaeUEkCcDYZeedUGUB9mWF9aCCi3lmmZjFjx6Lzv
Lc4FpH9/m1FclwEEpKw9MckA1FAWLHNw1ACe5IxoOCcDciuKY/P9ZQBD1H3d
/+IBfc1Ln3JbN4Dtl4mnLFj3JSbjZp+loCFslS2ZlosCJJD8pJGgYAjznLkf
E/YDuhbfdltH3xAeVF4RuOAHCHP8c6Yc2RAKZhsslXcAao6aPyFgawjv2q/Z
Ojqz1vww3uB1T0Po+OEwJmYFaCpA0f33PkPwMbf/EE4GdNLHlDZ22BDoHxL+
BBoDEvO00u45awjhqXb/FtUB3XLeIdpy2RCqFwhvNGQAkbaErdTeMARfS5Lq
FD+gd+anv5Y/MIQj59huFqwy0W5SVsfVRkPw+LK45xqrf+dMy59c7DCECbNU
6eFXTJSgV1d8csQQfig6H9heyUSy6l0XD00bwtwzHkHxS0xUKf/1yN5VQ1AJ
ry0QimQic4kl3238RsB/7fA7h21M9F5A0MFGzgiWbobYdBCYaB+nKoGkawSu
v5/U50gz0fIaTkWfaAQBJhHjpQvm6OLfLXyKNkaQ/ux46GafOVL55f2fkIcR
POO9KHCrxhxVfwsf2fA3Aux2keM5l82RzejZ138ijWD9oGLUh3BzNNifWzV+
xggS0vzvBTqao7Cuyvy+dCN4fET5h62uOdpobUx4fd0IEvM3P5/kMEeZqCf8
6T0j+B6j48H/iYG0n016VdYbgSyXAPfMYwZ6Wr1qWdhmBEEeBx/pZjCQY6WI
8aUhI3Byd9VuDGGgzyUasmd+GsGXwmHFamCgqAIie9SyEVTk7trNIcdA3NkO
0wG8xlB5Treq5jcdXUnd88FTxhjefswbfs3iG6PzUU222sbgd3+xnJFPR00n
L1RQCMbAbxc5Kn+IjrbG5GcZWhlDci+//W4rOvoWfv+k8lZjGKAlP+SXpaNj
wS+DRfcaA147clJtisWHfv3u7BHGQBD8XXWrnoaKvKZo86eMoSP+7WjuJRrC
uW9of0szBpOrPowVXxp6bS8hNlBoDNH7zuZ3YGhop6XO6ps7xqB0M6VFmp2G
ZqjUiefPWXaaUUpvNxWdxrt03n1rDFdfHHvOd4OKJI38n14fNAZNr/daT8Kp
qEwrpiTjuzHsleq9MkanIopySurZRWOQq986eUGAitqlr8dEc5vA8XTHT3cG
KMhP5KFfkJQJ3Pra6+x+i4LmeV47eGmaAOmzGN+xCAq6sPmR4IAzgWkvgxEt
OgXJL/9SoVuYgNigef52Xgq694ed38TNBD493iEh1kNG8FN6XtXXBMKDdktt
KySj3i/6n8TDTSCwTzBCPYiMgoYYrZwnTYDjv8m/J0zJaLXHvXrhIsu/j2lU
8DIJpbUFFnzPN4FLugOPxxEJqbUcO/+xwgQGX8dc/pNEQjX1aYfanppAmKJl
d6YbCdnWFu9saGXt0UX/oE2WhIbu1Vo96DeBU4/nqwpGiehg2Vvj4m8moC07
NcNdSkRsRZ9ks/6aQM8e2ReCYUSUnTfHfp7TFNoa5VbuY4hIN4N7JkbCFKLb
v/vOsfTj8yT5/hB1U2BGdjf1PTdDzvHGyBtjClWrQePep83Ql2MWlU5MU3Bx
OJVx3soMRUd5Zpu7mIKPtkrmdl4zxBu2/xRmtymY3zp2v+sdAeUHnAzROGAK
fi++3fkvjYBMfC5vlYozhbO83a4v3AjohUcpnSfFFMC3dg9DkoA8nJ/pLF8x
hZo1ucKQD3j03aZDbKrcFPiD4t5Z5+FRnPmX1eHHpjBd7n6n1wuPREgLEx2v
TOFS9vqGjAIeFZvydzX1mYIjBiWIDeMQQU/5WfVXU8gk1q2+KMChN2rYmzf/
MwWlxlFlYx8cupda8vodGwZ0175VbFPCoaWku3VWfBi4qeqykzSCRRbnH1fV
i2JAc6fLt48FWJQSj0rNZDEQNNPFzdiFRX0n3+XfV8GAV3hQpL8CFqkc70vX
1cGAn4LdJ8ePGBQcM5pwwxgDXTZb/q3mYVB11I9j8mYYcPvz6lzkdgxaDf8v
PJPO8h/5VL1aCoOsw9YDBK0xYHZWT/hoqSm6FMyzM8ER8z/hgLTUTdFAgJjL
v60YaHxS/Di80ASp+ylYxXhjwKpzztpL1gSF+WiRZ/diIIMs0zhx2Rg98jIx
DtmPgUc39kTKChmjDQ+yxpcIDCQK9VbOnzdCtu6Wst6xGHi8olNzYtMQXXZ2
Euo9jYEzVXe7amMN0bD9dnanRAwMtNtZlswZIK0tfostlzCQ9i/Q3ibUAIVb
hk4zcjGAX/mhWjKuj56aR489voYB79ta/+q89RE77dQH01IMDCd0SuX26CFH
UtK723cx8MF4PhfvoIey8ZlN6o8wsGk6/SDvhS4aNS18lF+HAR4Ot6RXZF2k
Z1RWIdmMgSzCnDV6oIMi9aqup77DQPmHtzwXdXRQndbzLO4eDCzzLE7pXdNG
3OotSac+YuDX69sC1yS1kYty58mlMQz8nlaPm0rWQlfkB6MifmCg0v2WsxSb
FvoiPR78cxYDf0kH0pVjNJGhxIyP/xIGZnpK7flnNNARkUX34Q0MiAvtix/a
q4EaBdhsPXiw8P1wHil7QB3x8QrQO4SxMBzAvZ/irI62ckpht0hjgdeNKdLx
Ug0VbCrrNClhId4uX3ErWQ19W9NVJGthoWabM0feLlVksowVqzbEwsyyq2fs
FhUU+5fGbYDHQieXwqYzVhm9/GOzWkJl2ZNdr5SVlJDgL9dZRUss2HZ0BP3i
UUSeP3dOZNtjYaP3Su7LOXlU9C3go7A7FvpTu9lujsihH18Odl7wwoLouJpd
dqsswo0ebd70xYKHO4Gn8KEMihuKfxobjIXfp8ramq5Jo1f9F+/NhWMhWG1J
lTtZCon25pSExmBhinEyPjJaEnl1FeV9PYmFx2+9AwX8JFBJW0Wqz3kWHqkR
pA+O4mimtSb+QyoWZkO2eg+QxJBZS0OMSzYWJIaOuhjZiaDTqDWstQAL0ycF
RozVhdCb+vd+cBMLJXcxUw2r/Eji2bDns0oslEt2/DfZx4t8ar854B5iIW+4
3qfmATcqrZ5l3nmGBSZPS5zxRU40e2+FoPUCCz4Hjmf4BrMjSiWnwbU3rPxq
ojLKkzaazpYJq8p0Y+HbRcnjetarTe0lslLpA1jw36Yz7cm+2CRTpM7P9xkL
qx+l31mhuSbfAsONM5NYcGy4fFeQY7qpIs9sfuUXFgoLeNx8E8eb/sti/oha
wIJdtcaLrep9TfQM+0/T61iIvbAgy/uloulC6raefVw44Gu0+ypl0cbsStrd
+kkQB+p/PLYGRI8y5c8H12+XxMFT7XJKetF3ZkB8ZHWXAg4aOBftldj+MO+e
jCuz08BBncttLy6Tv8zFY+cLXujjQOnx+YMHdy4zmTHpGVQsDhQuG3vanF1n
JkddPV9DxoFOoCEHw4MNesNvHjcCHOB05trWAzlAKezeoVJbHPw1jTHYGcMF
QcFP9qm44sDqVLiH/XkeqAp4sTNvOw5sk+qyWzL5YMW3zUVsDw5K/A47vLwu
AFY+H6ySA3Hgsu37D0qFEKR6fSZzHMTBUY7KJY2HItDv8dM4LhoH7+Mdkp/7
iIGa+7zG3ziW/83Jv1m+4rDf+Z/swXM4WC/7duPqXgmosecVnkzBwQnJu8da
/SXhn404h28mDqjq7UfkA6Rgi6Xi0sBVHIwncude9JeGDHPtGbdiHGiQbL/J
75WBj1TTL29v40AltioW7ZEFTRKl37KKlX/f5UNxu+TgIN6qre4JDmgvDs5v
2SEPj02dEaEJB3LSKyTVrQrAZrSj9t5rHNgzFePYnBTBQW9vpU4nDjYdfnN9
t1aCLK2woqIPrPgrGnW76MrwSe1IttwnHDxpFoBavAroKJ9OvjyBg+GdZx/l
6KtChHzyKYEZHOT1csQRRdXguXTW4XPzOEgw6GlSTFYDTolrIeurrHorukzH
cqiDs0j57iMceFiZMrRxilOHPIHqrb/58ZDgR1TInleHMZ4622BxPHgOOdW7
hGmAAecr+pgcHhys/c8eH9eAw5ud2J1qeIhainsjvVMTGtYGdXp08dBzpmpW
pUsTeJfHFR1N8fDdVWdPtrUWuP2dEWsh4oHgLHE6+pkW5P9Z5GaY40F95+OX
DcbaMDHDtlZrg4djNb7Xw4u1wfinwB8TZzx0OgamnpfSgaPfpL6Ve+CBb01b
iD2RtTB/URlS82H5L+Mp+bysAwKjel1XA/AQ7xQxoBqqCx5DuBaJMDzcXOug
oiFduNZPf3YxCg++NSm+TQ568L1ny32u43jgwYiOKj7XA2yX282T8XiwKm7a
1qenD8fbvK8sJuGhzXHF/3uuPrS07ks7lIGHIzJiNdu4DEC4Jfzsjzw8sHM6
/ZGNNIAdKPbo3iJWvJmTbbhPBlBcf/bAUBkeWmX51kvsDGHqaerebffx0DXX
QguuMQRCbe729lo8TD5VcDylbASnqm842jTgwcPj1+/JC0bQeq8SGlvwoLDJ
OVc0awTilY/MSO0sPCk8ard3GIN3WaNBVS8eRipjXTcajeFWyRtV/WE87Jx+
tqNY2wR+X++RKhnHg7z1pnQGS+eRCkb4Fafw8HmH+4G3f0wgPm9yI2sOD7/r
kyycPFk6LOvPvNAKHnLOO8TLPjMFqYzVH+fZCMDjwyEiLYKBPalcoxu8BPjl
feScBZPFe0kivUdFCZDydvmaGIvH5xLk3vyRIUC3yeRI/A0M0OI1GvarECDA
4O+L7G4MJJw0ejiuTYDbSYT3dmwsHjlGLN9lTACyq8Tla6ZYkIuBwj4CAXpe
uKZk7sHC3iiHy850Asz5ctnppmHhTrjHhddWBFAbzt+xqw4Lf0P3xDEdCWDE
02Vn8hML5sEhEU+3EsC14c69IhkcJAVEBWK9CXC4NUnhgRVrLvie8K7cS4B7
VXw6PhE4UPS54Kq5nwD812X2lxXiINArw7owggBvFCZOpb3BwX2PfIp0LAF0
P09yif/FwbLbLZNLpwnQl9Gfj1HFg4XzfU3eRAJonawcn7bHw0X7p3JnLhEA
45x3xjIaDx9sXgqv5BBgukZIkXAdDyqW7RxR1wjgKVPjjVrxEGLevzR1iwBf
jfdPTf7Bw0Pq2EzAXQIQSy2OlssTYI049WWkhgDw4EwVuyUBbPB/+z3rCDB7
5artAivuS6YbbZ0vCXDc0+hP/GUCDBryvbB9R4AD3Jx+5U8JoKEn8Ri9J8DZ
WFHXwM8ECNNSukP5SIBTlSFH67jNoFZN58bDMQJw0exyKgzNYFMJk2P4gwD5
Y7zBpu5mYCdPTbk1y4q/X+WeU4wZZEpbn1ZeIoCPnaoBe4EZDIu7ROduEEC+
pqbEqckMtEW89ovymEG5feEnk69mcEjAf0+SsBkout69Wc5DhKc8B7axS5uB
6KHWpsf6RODgjLE7rmQGIeKfN3Y5EcFp8zRjXtMMBCpnTfPCiZCzlow7wIor
k2tDMySDCJ+XsnS/4czAKFXqfmc1EfT+XlPaQzWDq+lw810PEaL+lIsPWJhB
Unz60K55ItTPVPO42ZuBq5mQ8VlJEnD/rFt748aKR67+CANPAtdvr/5YeLFw
CCq8nLaVBFe/dH177msGf3yLfKMiSTD+6eMQPtgMeg5XoOl0EhgNfe26G24G
lw9dylu5R4Ij/b9atFm4xJeJvC1oI0FTz9Kz6yfNYF22j9bzgwT8XewPZM+b
QXDmocFCbjJsbRO8lZFqBrt7PZPX1MlQ2Cp9lT/bDNRLR6i/GWSYbFa9dJaF
a9AKaTh6JxlMkf65tRIzOM1+1Ds9mgzH6vGx0ZVmIGsdX8lIJ0PzU8bBX9Vm
cKxKsul0BRmEam39g56ZwbkHDWmezWTYXu2+4zMyA2/cqHDTCBmK7u1y8npj
BrONN8j1C2T4WRFo8b7LDMKOr/I5i1AAX3aI6DDAwhtbHhepQ4ETJccMm0fN
gOqrk65vToHX18+p0SfNYAzz1OqIJwXECtKka3+x6pzsXeBxgAI78/IETBbM
wIPj9dXWsxS4mVW8WbZuBt+nQq07r1BgJv3OX1UuIthtCS8JuU8BYmrtzyuC
RHjUWlaf20yBM0lNo+KSRIjouHrNa5ACbxPe9qYoEGGnd6z7/RkKSMb3vuHU
IIK+iNJkHhsVdp/81HCCdY/OKXGFSUtRoezY94cLGCIMWW6d09Glwp8jc+Xh
ZCJYNbRebKdQgRK1VvidybKpL114nKhwLpw708+WCHc6yG59u6nQESqa+NGF
CFnjT8uJh6ggEyx/Yut2IsQbBYQbn6GCX4BmZNtuIvTn/Wh8mkGFSl/jIOtA
IpynJNYO3qDC/C7SroYDRMCY80akVVGB4WXhRowmQvXgE+GBJipc8HC0eRDH
ureYAw9qO6nQ7eZJ1TtHhDzn2KP6n6ig4OxrWpxCBFX++8m4aSoE2O/XUsgk
wsziTsH3y1S4Z3NYPusqEca2gSY3Dw2WLE6KCBUTQfi/qyudEjQA80TO87eJ
IKQt/tRElQYp1MvL/x4QgXm/MVnLkAa9xIJfMU9Y5xU6BVVEGijjS8dnG4mg
fdRModeCBsGmDwZCXhNh4i6dmOpEgyrDZ+1fOojQ/m9WdWQ7DVZ1m194f2Dh
p+/P3+xHA2utjse9I6z8v7PrWITSIE1t4I7TBBF+9edWbj9MgwGlLzdeTbPy
22/ewXmCBmry0znmrL481Bvyyi6BBqHSCylPVonwcPlDm3YqDR6Jb57GcJBg
1SdToSCLBv+E+Y9U8JNgQOLvzO18GtgKSIZqiJOA927eaddiGlzmUfYtkCPB
ToPdYunlNBji0PWQUiOB/dy+0eB7NNDaxNin6ZJg11Mhg6GHNDi4RjXnMSWB
46kZwuQTGjxZssafJpJA5mSvRWo9Ddj/uugtM0gwrfIqux3RwOGPl3KkDQnE
/y5ElbfQIHvGX2LKiQRtFW80lN/QYPTHAd4ADxLYcLRNG7fRQPdbzPrwLhIU
dDyUGeqgQeSXM3MeASTY+Or9S72bBs8/pUx2hLLiV0fPuXtowDWUPbwligRM
v41353tp4NJ/vbvpGAlmjjuHlfTRIK/n9ityPAl0bTd+7vpAgy+dD59XJ5HA
+crR3Ics27Ct/oFBBgk6Af+ijGVHt76+dTOPBPul6+rILLuxufuqUhEJPs+V
Doaw3seLhi7llJFAsyk7jMTy514/cU7kPglk40zf3npPg4Knv2MTa0nw0ULD
trqLBhOPlg+yNZDgvpcCfTcrH5NqjoBjLSTIpjZv3n5Hg9h7Ql7/sebe2bLm
qexWGryokHEO6yVBwIPn29VZeAmWqVlODJGgu4N+3YWFp0eJAWn3OAny5ruV
lFl4X79OMOr/SQLp4l8maax6/Mg3V3edI0HI+gK2iFUvbJ6dzJtlEqRPERO2
seoZl7VV0IKNDAcNJhIqWfV+le7D9pyXDK2R0tm3WPdBJDVoASdKBmZqs4Rl
AQ28kiKm7siQYduJV/7nsmlQnHD8s5YKGQ5c75gMSaPB9JmEvmvaZNjoCOKY
P08Ds5OX3soYk+Fd6py8xikanDp2pTGdQAYLo+LMxSM0eHOkpIaPTgbZldie
iIM0kIi6ezveigxc++3h8j4a7Ap/fG3VgQwtDvesvHbRoDQUZR7eSgbPZR6b
1+40+B30LnGGNdcTLp68N2xLA3JA34nAvWR4IbU6eYVBg7O+o5GjIWRw79Py
2cDRoG3Xj6AdEWQYPOIfK6RHA2mv/3Z1HyWDncv78mYlGvh6rLvZnyYDvXDL
Di1xGtx249ny8gLrfe8c/5pw0+A/JzEa7RIZch4r/vrKmh80ewXMoxwyTCwU
VVnNUOG8jZa28TUypGiE33f5TIUuCxOFsltkGNB5tZ27hwpy5mRR1btk1j6d
ohDSQgV/qiXXlRoypHbbhh19TIW7RKcVsToy9NTo1uFvU2EBt/138ksyqOXO
n7h2lQpMU7+vHO/IwNEpplWbQoUkw9DBuPdkyOM+pRUXR4Ue3eiOv4NkeHi1
+7/ZMCooaZ16eXCMDPfWsFxSPlQIVEt6MvmdDAvSuzu/O1LhgVLmXd9ZFq/V
FLSG0aiwIldYPLhIBp6fzUE3DKhgKV2W677B4slzZpoX5KmQKl518R03Bdhj
BqKV+ajwQfj5GSthCpg7S/cFLVJAVaDlSL0UBfxvjTzzn6DAfp7OUDMlCrhf
yy8S76HAQ45B3/uaFLiyi7J5uIkC6xtfPHQNKeB4Vnlbyl0KbFmbtr+Bo0Dr
I00Zz6sUSF9aMJenUsBH4Xpz33kKfJzfxGdaUGBiwn2AP4oCmn/49QXtKeA8
xMp7NwUOzEiqJLhRQOpLpUYu6/fHP5Ql/+2gQF06p8dvAgU2J3T5YnwpQG1a
Gv2nSgH7L9h/v4MoEK4WbPFKgAJZn2j/BYdT4GJfzoo1i89HPtp8HztCgUw+
gwsnP5NBp991ZOdJCvRl6QcdekuGiJ6d73sSKHD86pKcIquOzzoDXjumUkDD
eKtKfCEZONsO1rVkUSB51XWx+DwZnFqPVjEKKOD0Z7f6qXAy5DbHlz4uoQD6
RVeT2UGGsaaL+aaVFBg/vHk4lEkG/fqc9NvVFNi3k/d6nC4ZDj8tSlB/RoGR
eE41B1ZfNjyqOJaPKCB65Vdc/yIJeKprwiXfUCCgjZegPkoCt3sNAaldFDia
MfTO4BVLj1W0enEPUODLPlzz/B0SfC1973xqlAIyuco3TmSSwLhk2HLpGwUS
BKcmXsWSIOb6N1LELwr0SGpKd+8hAcqfNfr5lwIeZumPCqxJIJC3ou6/ToEa
dhNbfQMSbMvilB3mpELLjJn7MVESXEsXFvIQpMIVHYkdqX+JMHlRlr1Dggov
Y/0++X9k8XqS+qKNAhX6dGZD/jUQ4XiC4XSjOqtPep6f8ikhQvMZszGSPktX
+M3cPHOBxcsnmR+qMFT4Ptm/OzSUCDuO2b/TJ7N0S+4CVoGlM24c2dZUwqTC
4t2fpRlYIkxF7n6kaEuF2/tjmZ1SRMCHB1dku1AhjjM5oXfJDE6GRl4X3k6F
9ZsaazeGzKA1KC7rAku3zO0L1Sc1mIFYwPmkzX1U2OZenJNbxNJ9vuknYw9Q
IWW/xuumeDO4tetq1Nxh1vOVfhY1AWbwa8fN4FBWHxYrfEuLtDEDksc9n69n
qRDf64Rb0zGDM25P3H1YfVska1vrxmcG75xebPlwmdW3+7KuRf0kgJR9G82F
1efFqZuRe1l7x26bD5hWlg6K7Qp8pnyHAOUWn7WBNRc01ypXyy+y9jjGT4Vn
D6iQlVpfz3aAAFTqvCjuCRVm+y5d0HMiQALxH9edRirMqCt+VjUiQAeOd1Xz
NRUif+52/i5IAFlT8dnCDtbcWvbwOj2Nh72GihPSH1i6qvTfhR/v8FCpq/3x
0ghrLnFv89OsxMNfTdNO3gkqDGg7hWGS8WCuRmk+w9JVxVuGTMRC8JCoZPV0
5T9WfRW/Y5u34OG9nPO9qFUqPBbZtmavzdq7pXeUTLPT4GHCvHgpJx72ie/N
28fP4n3dy+t9X1j7oXBY6icxGgziJy2GmnCwxH8kfrscDeJfFYbUXsOBBc/p
mC6WDhMzcV4KisPBRY7kMDtdGuy3PxE964WDvo1MvxcmLN4cuBrkSsSBylqh
J5Wly84ObWxLlMRB8FKZQw2LF6L/Tr/M+4OF6vkqppENDUw7EinxHVhYm31O
KGXptPajnxjWlViwnmnRV/GgwceRIc8vF7Bw6UenSh6LhzJ0XXl3BmBhcGJQ
UiyABm7EnwN3mFhQ/zLOl8zSbVtFiM5DilgI+zTzjz2KBiVbi2YmljDw6OPi
f8ePsZ5v3E9r78XAxge2H/NnaDBeXNOY8QADdj0Cnw4ksXTTvsNruIsYuNwp
1fMtncVL3DExNUEYGH6n0ronj4VP+e5HEpYY0G7Vqx+4zuJRuRsUd2UMhDfj
qt3KaEBtEJD+/McUnjbRy96yeB6b5bR9pMwU2Ou3FFjWsnSeaL95gY8pOD51
y6hj6YagWMl+JQlTyHnkfZ7A0hn7cAKa/q0mMFq17/g9lg7bXPM0OnDCBPTu
hR/SYemcTyY6yzSsCURVxO4rGqJBOS8tteebMdSVnt0pN04Do7/jvzD5xsBd
kupy+SdLt35fUvdyMQaX67lWAnMsnfN4xMiewxiu5N8gn1umgeeR4xLcj41g
PLfSeH2TBsnjjP7U/UZgmPVI4wgvHW71SMV9UTKCI+mNsr9F6HD5VhgnV7ch
NF18IxQsQ4faOoPIhbOGwJfUwz6mTAdXtkevHpsZwtaEkUUvbToIBo2x2/8w
gIIzk9PvjejwNvaf9r18A/h24s+YA4EO2bPvsBNOBmB6bPVDM40OzTaxWrMb
+hB7hKuNbkUHa++S9c4qfXgZKYJqHejAI+3+NMFfH4TC5WpNttIhUWLBQ1xK
HzxDNSrLd9LhhGdg15FXelAUZFSktpcOaRsjmjUxevDDn5h9NYQOOgIrzu90
9QDnC8kSEXTYKfXYrn5QF07scjh18SgdWjTCRVKSdeHVDo/DXKfpcDa6/wqB
qguiHntCTl6gg4LXv7H6KR3Y6RayezGNDuG8dp81C3SgxClq66EcOhQmR1wM
ddSBGbsTtj8K6TCcf27k8po2mNlcoO+9RQfIH32Tf0cbTltkYIfu0OHQSeMt
F3Zpw1tGvs62Gjrg34XYewpqgwT1lmL7czos5vS+5qvTAh/ifTGbl3SQvLhS
XRyqBWW4p9yNb+nA9vfuPzUFLZg1eblKfE8H53auwsS3mkAxbJ99MEiHsAHv
U/2xmnBWt39Cb4wO9Ab7HBE9TWjXHPtY/J11bnSnGzOgATJqU50Ks3SI48hV
Nb+gAb5Kf5uzFumQecwngmSmARVyG0+FNuiwuiulSnlCHeal+O6f52aAE+Nr
+1ymOtDFJW5uCDHA5plf9SMLdbggrHTlqBQDLJ9i7IP/qEE3v07aH0UGeD2r
OSVQpAbyPJiz+zUZwKURRytyVoMADurRcQMGTOikdzstq8LdDasDu3AMuJki
MmThqQqLq857+ygM8G+/vVf1oQrA0o7tzhYMaOT4jv8uogLJ83sdX9sxILPv
pmJBmDL0zoYB040BJd584/Q3SqA8c8Ts6Q4GYIWSXTq1lCDox2kDrC8Dwh+P
67jHK0LVRLJqZRADqk7JmrZ+UoCVsSwpzXAGHJ8N08dRFcDq0zX+wiMMIIjt
68/KlYe0j+UbUicZkJ6I/v76Tw76P1TPpyUwIOtNnIWlqxyo9dT94EllAM2h
9WjmHVkI7Xz16XQWA6695XMf45WFmnddPcv5DMjJHUgw3icD/15/bI0sYcDY
1MqbOCQNW5q/1k9VMOCGo//7diVpyGj6VR1QzQDKgpGbxjEpGKpbKht5yoB4
92sLJz9IguZT9kJPxACzWMWIL1hJOPhI8HJnKyv/Z9gDLpck4EmV9AXbLgac
xKdkv54SB7Z7qnGonwHDh2YuO9qKg0OFfgRllAHmIjTBzzfFIKsUH/jwGwPK
YyJLz7KJwadihrfhLwZsM7bijXguArrXbV1v/WVAr9vXNPZoYYjId7dWXmcA
Gy9BucFYCJ7n7qLkcppDxOyr2dLvAsCVFWgiKmgO+gE29KZifnBOP6SZJGEO
Ju4xZkI+fJB38Zgcu4I5RJpgBDJkeGEs8ZzwcXVzkFzZ+c35PTcYJKRxzOuZ
Q7/L5C+7VC6IPpO3FIYxh7u5XVsSbDmh4UTxzATJHBwZUqKcnBzAe+zOl91M
cyjjqtn7ppEN3I/U9vdvMYfodpc79xc2mPmRTW2uLuagI9a+Fhi+zpw4+Ba9
8TSHsaSHPfXfV5jGob21FrtZ/hLrbJ7tXWIeDfpU+Xzf/1F05eFQvm3UTrLv
a/Z9mxljKDL37DtJtqgoKVGStBBJEhWikiRLksRPlKRUnhIiJIloQUIhS6W0
8b3fn+d6Zu7lnHO/7/38Mde4guG6+M1Bb7+TH20eL7APd4Xsa6G29T5fydKb
5s5WRLmCbEWM4ELpDHmd/59Uk1hXqFKWOuJYNEHO9xE/nJ/oCqRIrRcBeaPk
cU/5veonsM/7dUqoXhgi49dohp7OdIWY98G3+2z7yDF8o43LLrhCIXe2+9aG
NvITto1nYqEr6H950uiaVUaWYziy/5Ri/QT5PNLVrm/woVBW773hCn/OG4qv
vt/VULSaR/hS6woD1Ve0RSoHGiZXepmFPHSF3zvPiwu5fWggkjbpDDa5gmN4
kKkCbbwhnhCq6NuB8W2ZtdqUNNXQYhsl8aLHFXY8v3f24pnZBkWruD+ct64Q
sLVkSnv5twZ/s+Ozj0dcQd726tX0I/MNV4wyR50nsX5SA3jTP342TOtdHKj5
iuk//SXMIex3g5NOyXOb366Af7/s8sb3fxuOaNx4clWYDM8qv2QEr1lqeKZy
967eMjJU6xJnC4eEkIpiY2WOAhna63YVH9AQQRtlO4oVNchQNnilodZdFF1b
1pdzQo8M7lWGpb7JYmhOfDhN1IwMX5qPIv/74shZZDLxkC0ZiE01+x7MSaBj
i9/3zzuQYXnbd6dYUynU+XsxfNdqMtT298ZkrV+GNH5KbR6nk+EUiVYjlC6N
gr4p+QTyyeBx/UBQI1qOymd0+P2eZPBGsqKvv8qg+UlTylp/MkTMzum6GMsh
10840rPNZHh7b5fzl3XyKOXjKiv6DjL2/Dm7dy9VAXUP0fUfRJIhlH46QG1A
AWm/c1MlHSTD09l+ff9IRbS131f6RgIZssyep1OklFDlq81LZilkiFn+L/pp
vhJaeBH+vTCDDHOx+temicqI2rnvs+Z5MnRHmP662aaMTrYlvM/KJ8M025qs
EqiCXjWfeLn8KhmO6yesVZxXQXqNZ58m/UeGBpki2bJUVbS9If/BvxoyKG4i
CwZ01dDN+ms3990nQ/8bl9niajX0587N0plGMvyaqOgTY6gjRs39vO3PyFD+
qGfsT586yqhqzhzuJkPaMSvRlB0a6HVFV/L6ATJMbF+vcu2vBjIsG4h9OUyG
AOQi5p+uicJLPu7mfybDY8WhhwV6Wuh20fTWplkyXNNJIkRXaaGlSwvrXRfI
YPA2130AtBE7V2TNnSUMJz6V6uzSRhxesmGOKMCO8JG17oE6aBdn+aV1kgAq
yt+NN8zooDOs0+qKywHuzRIP/IjTRXcYqlkdcgAbgpXYWjIr0FtarswJJQDx
NMuslgsrkDBV7zhTDYCoJ/D+Z6qHTOGKsKgWgCUxNvveLT3Ec7U41KALcCo1
ympJTx/tdqn8EWsAoPP7V+fIVn10dpV9pJMJwK/3WvdOlOuju051k9/NARY3
OO35NquP3pNWh1RbAwiutcfpkgyQqMPjoZ04gKXnocFSsQbI3J7lb0kEmMi9
W3mrwQDx8e2vxhwBjq2NG1shZogi7TzWFDsDzJxOy+awDVG2TW/bJjKAwfIB
rv0pQ1Rv5c/QoWHxfUNPv3luiIYshhpeMwH21PrOU5SNkJj51lXnuAB27W+k
QryNkIXpRI2HG0D3Nhd/1gUj5GYcYSe3FqDGeSBu9I0RijL8XtbmBfD+vKUo
rDBGOfoHjY/7AQgZ1MV7BxqjBysW82kbAFqSDI+ZXzZGwzpHNYWCMH6sVlTc
HjFGEtpSZ+8HA4SOR534Z2yCrDTT5A5uB7hfKFS3tNUErVFXSnUIB1ATut1R
f9UERaueF/0aAXBF9dxW/LgJuqCsE18ZBaC4eEcr0MwUPVQsWtixH2AyiZXK
2maKRuRNo8xiAbKeHHYbv2qKpOTKv4zEA1Q1VkqRx0yRjQxue2EiAFeB6ONm
YobWSt/+EJAMEOybMKASbIb2Sa3aoHkCgC2kSsy6bIYuSjT0vUoDiKg9KtE8
ZIaQGH1tVibmJ/Fd8zdWmKNRkdZ2t3MAMcNJJe4B5kha2I21/ALAiFPK/SsX
zJHtUvejljwAeixzuLLXHHn+83FJKgSoN8qr36lsgQ78eVsLVwBaXaO+D7lb
oEu/gvD/SgF8ph87SJ2yQI9/jpXfLQfInEy3HGmxQGPzYab7bmD9SYzHR4pa
ouXfZwsJtwDmiscGb7paItzXaO2ZWgBbp5o/Vw9aIq/Z3+fK7wGIPUo4Iqix
RDHThxW2PwSodDlucHXaEhVMiZ00fgygqSeTVmVuhRonUsWHmwDkmgL2hW+2
Qp8+ySVcagUIGO083X/RCsmOn/nt14HNhxA6/bPHChFGNaLVXgCEPztr1Sxr
jXxGLs1092Dra0GdOoNpjWKHDXdkvAZIH8yT2RtvjQoHSz/y3gKUBdY9Xltr
jZreWW+SGsLmqyv529AXazTxprr/yQiArHqK3woTGyQ/QFp3ZBxgfz25SjrA
Btm/ru9cPYnVSyHWlGTZIN9e4PyeBsAdnzaceWqD4nqaGmu/Ymuf8a97Y4s2
6HI31zXqBwDvyaDzKaItaul6Xmf3G+BMjG3IYKgtmupcZz/1D2BKL/LPYL4t
Uujo/++aMAWKrxAepr20RQ7PNppvFaeA0Na/kZ8k7dD61pHLBssoEBzr9WbG
2Q4dbtmu+16GAi0KjxuKI+zQlaYv53MVKJBZ/nhUtNgOPW3co+SjQoG3h16q
KPTaoS+Pfp5S1qCAfO9t6WAxHFJChyS7tLF8a+Jfn9PFIceHwomn9ChQdHXB
9xIJhwLuJ/9lG1Egpa43MsYdhxLuLd8vbkaB/EjmMpvtOFRSd3rukSUFvoXO
id9OwKG2WtXweFsKlB//66Z0AYdmanLHVhEocLJAsp1ejUMqt/SCfjpQoFPF
Ziu/FYdWVl95c2slBVgHhEUthnFoww0L792rKdBleiZ9YAGHEv+r7LKmUEBq
PHQuUAGPSsvteZ/pWP/Jyar3zfCovayuqYRNgTPRm0cnXfForhTbvfkUcAme
4c164ZHq1cf3VqyhgMLbbGJrOB6tusJyeONJAfKblSf3HcWjTZfbb5z3oQBl
F85l4QIeJRV6WK7zx/JxOES3Kjwqy++9orAJ43NTa+CBZjzqyPPX69hMgb64
sBv73uLR19yhC6khFMAPbpLjfMUj9QtbVZg7KKDRxAufkSQgl/MT6SK7KOAt
y6kL1SWgoHMRyxoiKVDaMjp8h0BAyWe+H42NxvRrM+rvZxHQ9cyDi44HKTDH
PpD+PICAnmcsHvh+iAKvtjz7mhNJQN/Tjn6rSqCAGNr/0yGZgDRPSe3amUSB
l+rc9Ku5BOR6Iu2TRQoF7nUklE1UEtDmFKUtYycpgIt/5izSSEDHk8+/u5xB
AYlMrtOXXgKqSNLx3XSGArS29KzyCQJ6kVjUrX2eAkcHclxXLxLQjwRTwetc
Crybfo27rGiPtA6Xt5zNp8AasN04YGyPyHE4qsdlCty5PFY/6miPgmNv35e9
SgE35YfkJ1x7lHpwlWNbGQUamO8HozfYo8r9DdXJ/1GgkfQ+63eEPXoZTbem
VVPA68Yj97WJ9uhnVOvVpRoKRL9ZkI07a4909rgZ3K+jwLEXm5pirtojyu6X
Fw/c///voF138ersUcguXzUHRAF7L6bwTKs9Ohn+7vRcIwUUs87t3/rGHt3Y
sXl5ZQtWj+yttsope9SzffzYjmcUKCjK+N72zx79CgkXMntOgT/ex2buyhHR
iq1zMSPdFOBOedfG6hERbcu++YJeCtwNtKMr4IhoW9CfiIABClQdKjq7H4jo
1KaECY33FIhdX1pcvYaIqjeIb301TIHs6aKdDwOJqNf/xGDmKAWuZ/jOXNpN
RH/85Ne7fabAqvgFkzUJRKTve7ZH+gs23+Eq8q8yiIjureneMkuBvyJXrlkX
EFHouvzWo98p4BQuOuddSUTpa43osIDNS+/XMc8HRHRrzbWHf/9QYO+fc6lG
7UT02s1m5d0lCtSURr1uGiCiv/ybt6JFqSBwjX656jMRGfAcbQmSVKCQx2IS
fxIRk3P/2rQ0Ffa0Rz3PE3dAYSyKUbkcFdJtrbtTlR3QaUbzpW1KVLjnF5/E
MXBANTSehrEaFYT3rPz0xtYB9VO6soY0qZDhfmoJXBzQItlL9pIuFW6IiHcc
4DggI9eB434GVDjrc9rzqLcDYrtsElEzocKM38HswC0OaOeqj4e6zang9Xr7
BYXdDijTKfRnujUVwseDA88cckC1pOlIHo4KX4O7Zj6lOKA3xKgpSSIVMmN2
8BXPOSAh+4WQJ45USNF3i5UpckAm+LjhBGcqWBbOHRmocEAcO5GA1WQqOKiZ
hsTWOaBdNsd7f1GpIDKvZjvT6IDOWMl41DKpkJbMGXJ47oDqLDKf7eFSYcOu
vKPuAw7onZka086NCiwrlp7LqAMSMb2IJj2oIH+h/96fGQdkaqzvfM2LCrOR
zhvTfzsgnmHJ7WA/Kiw+L1f8LkZCu/UtcQYbqBBVid5Zy5PQuRU3rr8LpMK7
HSHPnDRJ6J4O0SQ3GKuPOTiibkRC77XuFnhvp8Lg6GNcmzUJiWq6aimHUyGr
51+9O4mEzNUbzz6PoIKV6IuMa2QSEqiy5U9FYfpxXtT2sEloj3JHKns/FZrG
xpx7PEgoW3GtmHgsFe6LCCxL15NQvXxf/KN4KtyxyUwTbCGhIdmAX3GJVNg8
nBXZEkZC4jLDUauSqWAtfPSDyl4SspQOmf6Rin1+/ciUwyEScpea3H4rjQpO
psmXLJNIKEpi90hEJhV6k9OEv50koRyx+Q3W56iwJB1mmnGGhB6IxLz+lIP5
x3pQcymXhD4ILa0tyaPC/IuFz9TLJCS5dLQjqJAKHe0qJevLSMjqnxR7xRUq
vPV/58esIqE1f9IeD5RS4eh1jrrEHRKK/qW0+nw5xpfHpakLD0go9+f5O543
qPD01bbPwk9IqGFeh6BwiwptVkm6rm0kNPKtqKK9lgqviRoX3LpISOqrqVnq
PSoIUc6G2/eSkM1seRHjIcZnxs1rU29IaO00TkfkMRVOdezbGDNMQvunbmc/
bKKCXq5NwdsxEsqbWKUY20oFgmj4IeUpEkKfGk46dlDhl6S8lN4cCY2O0SW+
d2H1aTqvW5onIenR1oSqHiqMXvCPqvlNQnYjbn/CX1NBNtDwgOsSCa0bfhlt
8ZYKqQ7Hoy+JOqIDg76zo4NU+OvbEv9C0hFdevdux+URrL/F4NKB5Y7o8ZvN
oxvHqWDSbSp6V94RjfePb9KepAJvn/rVcGVHJPM6fKBvmgo3JY9dmVdzRLje
uXVnv1Jh1yUh5XVajsirZ9/zNT+oUNS2QSJF1xHFdP/hyP6mgpz+zTOZ+o6o
oCvhSes/Kjz+b13XbiNH9KRTnJwsTIOhpHcvTEwd0ef2E3ep4jRIWmlSWWXu
iGSfyROXpGjQGUyPVbRyRITWs5X1MjSQNDvjzrZxRD4tmhYHFGgwUXaN4mXn
iA415RcTVWigULx+uxPeERU1Gq2YU6dBQu/9gTmCI2p6dC3nP20abLqgX3WE
6IgmGmyUd+hh8depCH1ycETyD2+mmRrRYFRqywdjR0dEvO8oNWJKg8HnyhFO
To7I7979xAJLGmwPCn1ouNIRxdVR/vnb0kA1e/jTCIYv1zbv1yDQQHaSKHlo
lSNqqeF97XGgQY+4N2ESw1M3u8IzV9KA5xR5FO/siBSrvcYFq2nwWmxK2R3D
pBsDQdIUGjy4HPyPhuH1/21620ynQXFitZ8Chg+Xf/Q+yqaB4OUQtQaLd6Us
9AWZT4NjEk4v7TDcWjrN++tOA6K3vclRrJ7pkqjmOk8aVHOOeVZi9StdWYBo
H+zC5Kx2sBrrz/FyXD3enwbP3olWnyI5ooBCEdL0Rhq0PS5UA4yPI/nHq65v
pkHoUFTTM3tHdDVPxmpbCA3eqTv122F8tuVmlhjtoMHP+jc7w3GOaCZHTX9o
Jw2+qCcUHLF1RCrnL+bmRdJg448DJyKsHdHKc/qqftE0yDDn80iWjmjjmZIM
1YMY37LVi6/MHNHRTEvp7kM0yNU+/cjNxBGVZtxISk+gwY1gkepCQ0fUnkZc
4ibRQMfQY+KZniOaO3n3oGQKDVY7z5/o0nFEaidcvzeexPTuzK6q1HREzimN
uxIyaLD2nszBEMyvm5LZn13OYPyZBogsKDmipKSOLb+yaVAqU7djC+b3ssS1
72/n0uBDY0LXNWweOhP6fPfk06Axhbb2KTYv3+IDXtpepkGy1D25x9g8qccN
CyZLaOA/2Wqcjc2bS2zI09IyGlhsSrpF/0NCQQcnqcH/0eD0ZZOBjh8klLx/
9wP9ahqsPK1Sh/9KQuXR847vajA/WX4I3/2FhLqiYm5eqMP8YMrROPGJhL5H
Lll738f4jrEZiB8hIc3dSaVKiAbd4xe73d6TkOuuZYbPG2nQfrzV4PdrEtoS
np53soUG+euVPyW8JKGUHcrq7Gc0MHz5jzHSQUIV23MyxZ7ToCOYGGDwlIRe
hOjKPOqmwVnFVJ7zYxL6EXw5Oa6XBtoL34j4+ySkvcVMeNUADew+ZK0UrSUh
CKqI/fGOBlkvr8VU3yCh4E34HzeHaaB04ZKmC/Z8Td1QuztilAZzPv8ci7Hn
b6W/86TVZxrk6R74OXaRhF76oa2fpjA9I4YPSp4joQUfxtCVWRp4vLUbFksn
IV3vtvVB32nQf+KQ+2AyCVHWub/SXaBBa7vIePZhEgpZ2+M+8AfT/4Zem9UB
Ejq5xq8tewnzz0kP7fzdJFTl9p7uKUoH1zzHf1+2k9Ar/pYGeUk6nD2RmaUd
REK/uJ9WtkvTwUWcvGjqR0IrODtrUuTosNWDvEUBe5/RWF9tGUp02PC+6mMf
9r7bzthfJqxGB8v+rpI4IKE02l+jh5p0iEG/W4WdSOgm5Uh+jC4dPi+U7g22
I6FesoSmowEdioMiWktMSejP6pNnvhnTweuz2FSTLgnpuyjIVZnTId5opVCT
CgkxVp1LCbemg+L7BYvi5SS0w0lL1AJHh4N3+GmBIiSUTiqIG7Wnw1SNr9u/
BQd0i2i8UORIB4N+/8yD2H7wmlC2Z6MzHXzrb8S8wvaHfzjbL1pkOjSueGqr
+NYBGdrd2tZHpQPrBKHbutsBMW2cPpxh0iF76Fyq+VNsH7N6ELCGS4fyheqD
Yg+xfcyC2ifjRoeLpE0t6JYDum3W4tHqQYcW4/TzG8oc0IAJv/2YFx1CZVny
b/Id0JLRCybVD+vnbJnnyrPYPmbo/WgxgA4Ka6dSD6Ri+5j+G+f6QDoMhAf0
5cRj+9iKwNr9wXTgO2wIyo1yQFk6ozjidjpMo22CuO0O6I7WjvLZMKy/ZOlH
lA3YPqYxY/JfBB3IC5+Gxz2wfUx9b2FoFB10jetfRTCxfUz1l5bpfjqM8wWP
+1c5IK5y/LkPMXTYknq4w8TOAUUoiioUxNPhdBBDd50Rto/Jp5zwT6RDSXhJ
X7A6to/JyoprJNNh30ydoe9ybB9bnnW4J5UODrHlxrZLRCQirf77dBrG16l7
ouNfichMKm+vIJMO3lYOY4ljRMSXMJhZdo4Ohidivwpj+/BusauhzTl0+Hh1
0S24g4jOiVh9TMyjw85JsuF1RET3hKo2kgvpkNzZlfXyFhENLhL7/xRj9Uav
bRm6SkRi/+561pVi+ntFj724QETmf1w795bToa53Qa30FBEJfjWy8TfoYPLj
+uHAw0S05ye78ctNOgx92sZajCSi8/Mdq6/XYvEbNM8lBBPR/W9r60Lu0eH3
srqMcW8iGprrIxg9pMO5WNZGew4Ric8G/Df4iA53M/rNgp2JyHJ62CyviQ7N
tqeUY2yIyH0q5LJvK1aPZyo7Gruv7J2Y1FHtoENllcS0lyIRXfi0+/yLLiyf
D8NKR5SIHozNK6b30OHnhkyzp9/t0YePMae4r+lQf4wivX7MHkmOLElIvqXD
fyO1v1/02SPr4aQjjYN0SDoeoI/D7lceg8v+Hh6hwx+j0st779mj6Hfp+1zG
sXm8o1JWUG6Pct8ozy1M0CGKaO1fnWePGvpzwm5P02HEKm6oLM0efezTHYv8
SoeJ6ILA1Hh7tKz3cqDtD6y+twTRNdh90KbH7M3ELzoIN7+f+bfJHq3trvAq
/YfN76CH25k19mh/F75rizADdrRRmAoUe5TXWcvVF2eAwpMdS3vx9uhRu3PT
WykGfPfKKHpkYI/G2hD5ggwD3IQOrPuB3V+lWxn3vBQYsGv8K1lZxB7ZtbQR
lVQYoH/k5UmNrwS0rsn9Rqc6A6KoXzdJfCCgg409Fie1GfBFYP3x7QsCyn/k
d4WlxwBDwy2Q94iAHje8XyFmxIA77EN59GoCGn+w5QIyZUCHeJB+byEBydz/
pBxnyYAuycVva04TEP7ezvSVtgy4pU4j3z5MQN51X6V+4BmQ1WpoKRpBQDG1
+4/edGDAA5ust6s2ElBBzd9/u1YywCoxJT5AQEBPbh45YLWaAes+LjpudyGg
z1US38aBAftFZ3EbrQhI7sbJnVfoDGC+9Ml01SIg+/8UPgWyGfDb1f7IsmUE
5FN+brMunwEv3h42b/iJR4fKtN71uzNgvsj5xqYxPCoqLfDJ9mRAa3bw6ske
PGouMe5e68OAopMLv4Ma8WiyuIwv78+ADx3f5Z9U45H8ZduWZxsZkPrO64pi
IR4RC29RUjYzQNdIfYibjkd++U736SEMkLpKmIw4hEfxeQ9IwjsY4NdY+CVh
Bx4V51KrH+xkwOxHH/l4XzxqyWmxiolkgPxK/oFtTDyayuZfJUUzwHtHxJrV
RDxSPPdC/9sBBlj4VjUsGeAR6Yz3xRuHGHDw+e8vlfJ45J/5RjU8gQGLNEdR
3j8cSsgIPG2exIDnqVyzngkcupI2Kj16nAHhGaqJ3Nc41Hpyx7Gikwyw1Ih2
rmzCoenUmaUNGQxYtp8Su3QTh5RT9sZoncH44biFuhbikFPyr++92QzY7rDD
JiwNhwKS4iPO5DLgcOHGmWMxOHQkUXTCPR+LHznTm74Nh64mpATLXGaAT9vA
8uR1OPQsXnbwaQkDrjS/vh1GwaHZQ1l+x8oYUOx08S/ZFodUYtV7KP9h59s6
JEW1cWjlwTy3xSoGHOhUXqqRxKGN+w1a79UwoLRGXaXikx06Gn2Vtr+OAeR1
5wvbH9mha1FWD+3vY3zlNX59lmuHOiKrnGYbGJCpcN3vepQdmotwuFXRiOXT
YBtv59shtV33bEJbMD8nnigSN7FDzuHkaybPMH5FBfpH/9miwB1PDD90MqDt
gd/M0CtbdGw751J+NwMET7Zv0Ku0RWUhner+vQxwyde765psizqDPbPUBxjg
2qngQd5oi75tfi3T844B9b71UQYkW6QRtOH46WHMv7wTEaOytmj1pg/CglFs
/hg9WSdHbVDQhm2Hln1mwN2lASuVBzYo2X/qR9MUA1T721IOn7VB5X6RkYmz
DLDeeO9nR5gN6vL5Men6nQEhvWXNS1QbNO8VG/LnJwP6nyfSVLVskNY6oeE7
f7B6K9Tvy81ZI9e1x/z3LmH+sjOKn2qxRlvWSPfiRJmQtpzdV5lvjVLcMtZ8
kWBC/V4FVe9oa/QfX+VZmTQT6P99SfrAs0bd3AuMEDkmHM1x3LvO0Br9YK9A
hkpMYPGtcRULVkibVbxqUJUJG4pnxCc6rRAwzG9f1GTCWNcJqlyJFdpK+8/O
V5cJUd8nCZqxVugEhXBdxYAJXypHjZZ7WKEb5DvGL4yZsLrOdvNHUyv0crVL
QZo5E5qig1aV/LVEC86PNLnWTDif+WdB0G2JdFcxz0rgmBCTtWHifaklojo9
k2u0Z0LV3rb1vnGWaBtpTephRyYcp23LvrfWEp0kvhJ1cWZC2a1Vn8XNLVEV
YX38gisTVj20Llj1zwK9wg0u1FCZUO0iIebXbYF+2wZHRTKZkHBs95agUguk
Z/P5iw2XCfuWzUutO2SBaFa7tk8ImDA195eM97BA2y2+fbjqwYSahi7PXyYW
KM3swIYtXkx4OnE+o+K3Obpp8q9Pz48JDYm+rrzn5qjPKHHt2wAmiHT9uP6q
2Bz9NZDsyAlkQvM8UZ9/wBzp659ieQUz4fHZm58q+eaIsULxseJ2JpTvmnJb
1DdHO3SyXTrDmLBb2uXSqnkzlKGlfedEBBPs/fp0g1vNUI1GIZ4VxQTxgC6t
2Etm6LWaSYXofiYEtqm8Pxxphv6pXDdFMRi+u7N6D8MMGSrbFR2Kx/SnHX7v
qWmGWIo12isTsX4JTyuNvpiicPmV2fPHmOB7tSjsAzJFp2UfKtxMZYLuY9eN
p8+aotvLaSd3pTEhyKviuc12UzSw7Km4VSYTOCldUvXOpmhJUpAwfpYJE8d3
rHWSN0XGEt2/i3OYEGqvNF/ywQRxxHyiA/OY0NfquFKs1gTtFHk7o1PIhJYc
o22eqSYoSyhoR38xEy6VzzefCTBBdxZHP54rZUJubElhk50Jevt3x6a15UzI
KxR2+SxigoT/zPTL3WDCxcQbQ4uvjJHJr73rnt1kwtvlVr0SZcaI+/NX5/Fa
Jrzxb94ifMgYRczHc+j3mDAdU9Y17WaMzn4TfSL0kAn5ct1bnhsYo7tzKa4P
HjGhVk45uPi7EXo3I3v3YBPGb6yKRliLERKZzrIntWLxFD2bTXONkNmUeuXX
diY4SOrf7g03QvyJPPMbXUwoul9oGUs2QpGfDIrDepjw8mBnuIqSEcoeu6pr
/poJMyb7Hl3+aIjufbTK+fgGmzdhp12mdwzR4IcqpaJBJqwMOl5XkGqIxIYd
0jaMYHqHXh+VCzBEFoP3JLXGmaDTenfVXltD5PaOnNg7wYTJA4V/nwsZoj1v
nvzNmmbCun3auw1fGqDz/Zz97l+ZMJ54tz+sxADd7+ucW/6DCcMfBuIq9hug
4Vee4U9/MaFCp7rwI8cASfS8Hkv6xwRJ7GmnomOALLs3BFGEWTAi6rPHZVof
uXd9ePNPjAWfOi5dC0D6aG/nNu97Uiwosz0eHp2ljy60T3Xtk2FBAstH+Hiw
PnrYFsmzV2CBlqTh9UySPhp5+qNpRpkF5V/ays5J6SPJllioUGfBueJlyaa3
9ZB1k1D9dm0W/OUV71b100MejcccTPRY8DJOLGfh7wq075F01bAhC9YQwxO6
Clegiw0ZlvmmLLjIq/3vEn0FanigUrLekgWGiv7FgZ900cf6C3rqtixweLXr
o+YpXbTs3orcl3gWfIsr+tZqp4ts64pVTjuw4Ii2q2fkSx3kWWuewV/JglNx
lscU9uug/TX/LVu2mgWKbWPS17R0UN5NQlITsCBKNW2r00Nt9KjqzuIROgu6
/nSpPg7SRmOVLgdd2Swodl66yBDXRsv/e/TtN48FJR7/9jde00K4cuauO+4s
mFflWLjwtdC6smefojwxvtYv2FbNaKKDpWu24Hwwfk7USeqf0UT5Ja/eTa1n
wWp+J/4USRM1Fq/3LdvIgmQDVav5fg30qWiwe+tmFrTILO32j9NAMoXBAsMQ
FvQQzyY06GsgfP7nlvehLJg5safX4Ik68s7bRb24E9MzsmM6cZs6is39dt8n
kgWeITsZI9LqqDDngKNKNAuo12540SrV0JPsf9VdB1jwYvRYbrGHGvp8NtE6
7RALiOPR6WLzqkjujGQpJ4EFb5wvlIfkqCL7zFMGEkksaPuUF9bmrIp8MxTz
Hh9ngYXGIxZuUAXFpWWrHT7JAqG213U5iSqo6KR2pnMGC4ySOY5ipiqoObVw
+UIWC9zllztHtSqjyeMmyTXZLIhQL3UeC1dGCsnXhSJzWaA071S1QUEZOSTZ
xdrks0Bq/U75gVtKyC+xZv5zEQuslic+9/dRQvEJK3dfLWGBAHutjfxWRMXx
Dyc2l2H+0VbnROYroqeHaFv1/mNB0OfRKXGqIvoS83TwTRUL/P3wzUWjCkjx
oGB9Tg0LuIekOIxUBUTa392zrg7zw7tln2etFZB/tI+74n0WhCQ0E7hF8igh
6m1rRwMLdrdevvDkkxwqiQyin2hkwfZT5EkPnBxqixh7yGxhQXfDmuXf9sui
6Z1hK0WfsUDmw9W31xpkkHL47K2GThYsHbWl7JWUQU47om0PdbNgWe+Mprf7
crRh++9rTr0sUHCUY7mfl0aJIYeN5vtZ0NrUUho4uAxdDRbLr36H8f19r9ZJ
s2Xo2eZUjV3DWDydlEPPI6TQbKDcGctRFtRop123rZNEqpvOyI5/wvQcM08o
E5JEqzZopBRPsWDOXPM1cCTQJv9LIoGzLJAbtT81nymOjvoZxul8Z0GRwrbo
pwNi6JpP6c/XPzE9VtaF3TMSQx1e1nvO/WHBGTM6sz1cFH31rJ7yWML8fNz1
zeJtEaS+lrRNTpQN/RlzS2uXhJHzmvrhNgk2QMWDlFa2MAp0g4Dj0mwItdLk
bMkSQsf4Tb00OTZoDuiZUeuWGq5zuR5CSmx4bpIcJclfbHjOfv7sviobrLa9
0NAY+tvwjbmOeVCTDUMrztdG7/3ToMHoRw66GE4/N2Gw7HfDatpG56/6bNCx
vrVmRf5Cw2bKyO1KYzbQVBYTw+1/Nhwnb8eFmbNh5/FyTbnW+YaK1V+um1mz
4dFW9XKxTd8bupz3mHy0Y8O/qsZnHvNfG+ZX/iwotGfDpKKv3M+Tcw1aToe0
NjiyoSaoSPSH4WwDmSR8TtOZDVq7DKML935pCCYmy/e6suHodEyC3JWJhhTC
8hNZVOy8t4G8sme84T/caTF3JnZeWd5kJD7a0G2reng5lw0RBLLBC9KHhp/W
ub9aBGyQ0TlSn9L9vkHHSm9vkgcbzgmixYVX9jeAxZVp8GLD2KsFM8Wilw1b
zSxC//li9RQGMuNV2xtOmFSO3A1gg0TpyUGDKdRww8h+475ANjwdWv1zi0Zp
Q49B3WtCMBvqnjXaUPeUkH/prfac2caGX5mdPztjEVl3xeOO8jA2CAcOZWaf
f0am6rDY2yPYMHotv/+Lz0vyNq32x8ZRbLirTt7M+fCafErDY/XwPkzvawUr
Xu94T65W671zKYYNtaelLNoWhsmvVPyxDY0NH7tuGbnUfyT/VhqqUEtkw4+K
OPOGQ+NkPcWtZi+PYfly1gWvWT1BpstPFGWksiG14rPkl79T5FDZCB1+Glbf
XBUrq36GnLb8e7ZUJhuudMz+l+8yR7657KBi01k2BOs5o/ncr+Q+ycWTR3LY
cOlo9u/2hW/kv+JHJVzz2KAy07ho6D1PNhCTOvK7gA1PWCG7f9z8QWaKpP2p
LWbDxiiReYb8AnmHkNK+qFI2xG1eslcI+0XOWMyetStnQ5rG1V7P5t/kmr/a
YVOVbIisMkiRN/hL7v9dOHrtJtbfhsPzlNh/5MUFk8CttWwoCavs+NyzSDb8
eX3A4B4biNpoSERdCFjzdl7vH7CBr9RD4TYKQfi3mue5j9iwr2NDMDdCGDLn
VnJ9mtgw8SOnWERbBGpnHj5RbmXDiNlN/z3NIjDwhUbuamcD4X3z55xIUVia
fHr3VBcbuLtHy6N1xMB4QkDk9LChYUlGWKpFDDifuivFX7Nh1Q4bjnukOOwa
87F4/IYNM05mo1xtCTjz8W1x/CAbjqc/I/1+IgF3PgStcB5hQ6by28KAXZLw
dmgs5+cYG3YPSx+PVJcC4cEw5ZoJNrSH/RY4ISkwfTebtnuaDRnbV/tXbV8G
vDfRUjZf2bC11lu1X0EaIvp/J36ex/xHuTtSXScNZ/sO/yv5xYb8Ty22qwKX
w91XYgc2/8P4D3i1KVJSBt6/TP26QpgDL0SMh70rZUC0W27nGzEOBL0a1Z1Y
JwtmXWfGz0txYMnVJdHyjyzwOzU2r5PhwJUFx1j1IjmIbL/0VkGBAxEfX++r
YspDdpuhT4cyB/zHZT9+n5SH+qelL1LVOdAZuF5zD1sBhpqt+UxtDrR/bf/8
MFcBxJqqm0X0ONBk6pI3NKUAFo0kSoMhBz6W/v3c66oIbo/q62NNOfDGaeBU
0WlFiGoAkpMlB27kqZPhgyLkPGiq+m7DgaH4XfU37ZXgfj3XqhqPfX+9/IOF
JCUYvvu8ZKcDVv/moiXFXiWQqFunb7mSA3tCqORFU2Wwqu3PHXPhgPSdZKcH
+5VhTc1G1WLggKTcwWtuT5Vh782RjE10DmzZncu/qaECF6q2S+uwOXBA6cOH
8e0q8LDyS9JrHgcknB9YzNSpwEjFnqWz7hzIMZEfapFSBanynwc9PDng/hHX
FOmrCjZlh77L+nBAjjKXM1WqCh6lwhFt6zkgk39W2+mnKuwrSf6cvJEDT1/1
yK5jqsHF4uXBtM0cCNUaxsE5NUBFp98vbeVAYs8G5t8RNRgtUPW7H8oB8pFg
hRSCOizLz315YCcHhE8f9RhJUAfbPD03h0gObCQ/bJd9rg6euVeezu3lQObB
UwxJXQ04kGNBqzzAgfVVA4ef79CAS9mVD3Yc4gCzbhmE1GnAo7P2TmYJHAgv
nuY+E9eEsay6myNHsf4udm9dXKsJyzNX2xQe58BE/R7vpQJNwGU8Lg04yYHR
z0sfOqY0wSuNZaiZwYFv/63oDl2pBTEn2/NeZXEgcPn4RPcxLchP9VDPyuZA
s8/H71LdWtB4vDfTLZcDPxVV65av0IZPx/xlludzwK9u4u9AqDbIJg0ltxRx
AOVzTu27rQ2ExK3CSSUcaGhMsXsvpAPeCROxUMaB6JLIKkW+DsTGR/z4W8GB
16rQr3BeBwoPfd99t4oD8XKX974Z1oGmmIOT0TWYf47eEURa68LEgcWthDoO
GDgp4br36YL8/qND0/Uc8Em7Pf4P6YJ9tJR/eQOmp48a5bv0CvCNSnu1rRHz
Z4XWstvrVkBcpNIa4xYOFNRpykL+Crgccb5tqI0DIalvtM6Nr4CWnTqMS50c
+D2cI1SD04PJsKIGv24OJEn9OZV3UA8UdpiuUuvlwP5z2hluj/XAYXt5TXc/
5l996mSwuD6sD8HZZbzjwL/15zWPW+jD4eDbZbxhDjy2fHwvTaAPxZtXGUuN
ckBE0u7OgUh9eBrYkP/kE5ZfMfEn65w+fNlI1zwyxYHiv9nBf+r0QWlD65nV
s5j+XxPGs97qg6O/m9zvbxy4f+BEqJyQAQT4vUyp/cmBXz4OPTuNDCDBx1c0
6g9W3+FVitVMAyjxehdnt8SB3olU6dehBtDmuXlhUoQLdcnc6x9OGcCMx/ie
axJc8FUdGOi6YQAqa8K/BEtz4bNSR/LlbgNwcpvbZiDHheYL0zk+8wawgb/v
wztFLoQw4e+MuiEkcv8E5KpywUj798WwVYZQyk7o89bkQtuWE1vaAgyhnSm+
VlmXC79zzrnKHDaEWfqJ9uf6XPCk/dDAFxmCKk2edcqYC7ve33/v1GgIqyhn
H7HNuVBWb3fIaNQQNpE1XcStufD4Y9u7WQkjSFqdX/vIjgvOi+TZQnMjKHM2
wsfbcyHXYl+hPdcIOlZeK1/lyIWI8dQ318KM4KujjenPVVzA/WpPF0ozAnXS
zcJbrlh/1ObSVZVG4EJ01N5NxfiowKv4PDeCIML9c9ZMLhiICT32mjWCYziK
wmcOF4jvvAtIisZw3bb5RImAC0lRp3N/4Y3huTVPfLMHF76fcL6cv9YYvlt2
HV7hxYX1a7RLTKKMQdPC6/eAL3a+0iwr/YwxrDYb2Hs+gAs14yd8+28Zw2aT
TTOegVwIEr06Lt5jDMeNPoYqBHPhtL6Mncp3Y6gwCP3Yvo0Le/KSVoipmMAL
vemNqWFciImTvvrK3gR+6Eb1MyK48GZt++0UTxPQ0lnwFIniwltla1fdKBMg
a8V1PtzHhWVLD+3OZJlAsIYIJzaGC04HBbET1SaQqna80TGeC2FT3YpGL0yg
UkXG9fsRLpy4GvfRZdYEupUy66qOceHnncqPjvKm8FNBzX5nKheWXvwSVbE1
BR35i/9ZpHHBxMSE+IJvChRZffOx01zgkC22RYSZQsjyksuXz3Kh9DMuYzrV
FE4ss9TdlMOFeokL+W7XTOGG5I3z2nlc+BUxezyj2RR6xIlKrwu4EPry5+rq
j6bwS/TuqbPFXNDJLLp1S8QMVoi4SnqUcuFojuLbbH0zoAk1HpEt58JlxqXr
613NYNsi629rJeZH12dKS/5mcOpv+77km1g9bp5SSQfNoPq3xxy1lguPGCsO
f842g96F3rClu1zw7mGE2dWYwZ8f/mP1D7D4ISqPvF6Ygd78UOCBR1z4JCwe
HTBtBvRvW98Qm7hQYNAYS1tuDqFzE15zT7mwL8uyTdrcHNJnIrr+a+eCpDvL
6ybdHG59+c7d0cWF2/5eSquCzKFv8mCTaQ8X0i6jH0Vx5vD38yJ5pA/T57nx
wucL5mDw6ei9gjeYHy0EMkq15sAck3IIGORCSxTRQqvbHMI+pt3QGMHyPRZj
iEybw+kPSpavxrgQvl7du22ZBdQMnb+SOcHF7r/f1+4xsYD+9zp6btNckE71
JPwGC1h8W3RB+isXMrlak0EBFmD0xlSlZZ4LikEb9pbttwB2f3n60V9cKO7Z
1NSVZQHhfbhl8I8LFYtZr/r+s4DMV7eP/hXiQXxwdt7DpxZQ+3LVYp0YD8Yy
HZWOjVjAmxcNB6KleHD5W6St1aIFCHXRv+FlePCwetfnKg1LMO5s3Tktz4O3
qUnOavaWwGl3+3RdmQchZY66/gJL2NX2cvM2dR5cO77y+OFtlnDmqe87I20e
vG7YvufoEUuoa37nM7SCB2KTXX0hFy3h3ZPN3XmGPJg5eL3K4rYlCDeO8/1M
eTCQvv7Hs05LMH0U3qJqyQNS357Lgk+WwGuYo3Tb8IC6tbqyUtgKdj/Ydz8d
z4OLqUKqM1pWcK7+D4nnwINbFfueyxGt4O7dhGrJlTxwNPd+LSuwgvd3xK2f
uGD16staTm21AtHaE1cTgAceGxwayuKtwLxG3mA1nQdyxmezmOetQHDz7MVf
LB70ymsVPL5hhe3Jmmq1PB6oTH4Y1H1qBdmV+af3uPMgOMVhje+QFdRXGC23
8+RB4sWjk5ELVjB0/dqxSW8emGaF/rdDwRrEy2yErq3nQU94ZSbV3BosS2/G
BG/E6j9PO/uLbA1uJY7z+pt58PQxvTrDxxqiiu9HvNvKg2P1Pz+KRVhDThFl
4kIoDyLo7VZ+ydbwoKA52HsnD3Sn/RNPXbKGD5d4g0qRPMieCR3Nr7EGibwu
v+d7eYAWP3icfmYNVrlePScP8OCB+bsngR+sYU3OgBv7EA9WXz/vrPDLGqKz
N7WKJfCguSXmVr68DeSe/Uh7dJQHkyXqljKmNvAwK/Rh3HEeJBiYX/J1sYGR
09NOq07yoK40XTpprQ1IZUTd+pHOA5Dz3p2+3QZs0hZsbmXxwD2sun1/vA2s
PRl3LSKbB1e//NGFszawP1XEyDqXB2k1dZvHy2zg4vHjlz5d4sHj0qwLOxts
AB2T0Sgp4sFG94BH3T02MHo0MyuohAd3yuX71SZsQDpRTXZFGQ/wsp2DK5ds
wC7h4vGBCh7ITg32OKvYgme8vsj5Kh7Yopo7Oha2cOBQySHPGh68fP3h+NvV
tnApxvKnfB1WH9GMEbvWFh4fuBHZXo/F99k6sxBiC+P7iFMpDTxINi1N9oq1
BZnouyGMRsx/93SWZ2bYAi7KdVi4hQdKq3TiyottwSuy0f9hGw+8bhq8u3LH
FmIi2L0xnTzATXVaxT2zhYKdHWscu3mgxpgMJQ7awpOwtc++veIBL3lLTttX
W/gU2seo6ufB1vucOrKEHchuD0Dh73jQJPeq7YymHRBChldZDGP9nQ960Wxt
Bz7BIbdHP/LgjNPujtdkOzi0edLu8icedOy/ilrX2kFh4O7rG6cwvT06Ky5s
tYOmjfPG2rM88FPuPcM+YAcTATEFfd94MI3r2t97wg7k/Zc0z/7kwVHdb+tp
l+yA6Jd0ds0fHjgZXiBn3LADP59l8rJLPCh2APN7j+wgzis9tVWED9YvU9Wf
vLSDy57KYskSfNjavUrhv1E7aPHIiadK82Gbq7Nq9E87mHLX/bUoy4cstWcq
6WI4UHS7HFWvyIfAZy7mHrI4cOCbTe9X5UO02sVmUTUcrOdWbCdq8kHtQsFc
yQocHGbjR2Z1+HDZXLXc0QwHV5i1G/7T54Prvb7vdXY4aKU7vw415kO8W0+X
hRMOvlDRWlNzPii9k6KcABwoURgdH6z4sAeSWANsHDiS21gFdnw4YRAypumB
g4DV7o/97fkQOvJej+OHgyPOPS4ajnyYSrf7sS0IB1dX+t3pWcWHyIdlYftC
cdDm+B6f6cqHY6k3EvdG4mDGYUuFgMqH7N23Vm8+iAMV4idTaSYfrrGdCshH
cLCSsLOomcMHCbMXZTKpONiI+6p9VMCH33yDwNbTOEi03Z9N9sDiKb99Ep2D
g1Lrvwp/12H99z0ZUCzEQbvlkZN1vnzgjFReuVSKgzlzCYnoAD4UbYwz0byB
AzWzkwn4QD5wSUaBSbU4WGWi8OfLFj4MLCv2GXyAg01G56Kvb+ODirq8vGUT
DpIMtGZDwvhQbZKaGtyOgzK9gh1GEXywiKK2pb/EQaeu8ejgHj7E5cf2XBvA
wTftsk15+/ggeTap/CZ2ZVLXsh3wjeGD28H7ays+4cBF49Y61Xg+9OVkdpyb
wUGQmtPzF0f4sCQ4ohfxAwfJKg846cew81l1vtM/HJQrUZ9wU/kg8njWe04U
D88VWlwl0zD+em/TcqXx8F2Of7fxNB9ExfTV7BXxoCn7wj7hLB/+Pvvxol4d
D67LvStdcvgQzFaIJa7Aw5Zlb8x/XeQDWd1D9ZIxHo5LBhbfLuBDKbPiyrwl
HirER3X3FPOhGYxsXPF4eCG6I8e2lA8v7jTd3OeIhx/CM0qT1/kgk1W9smA1
HrSF9qaVVvLh+Sul5js0PMDigmTwTT5knDMKQBw8BP+NS9Sv5cPcGyuhu+54
SP0t8u/tXT68Pn+ktsgLD5ULx/dfeMCHoykpR2P88fDyh8xXr0d8uGpxM4wW
hIeF75nhSk1YvIK4qL8heND5pjbe+ZQP/OL9BSXheKDMXQw62Y7F27Xqu+se
PITM6L9ldfFBULZz39P9eDj5pcRbrIcPWp7NltQ4PFRNWr5AfXyg3JRQq0jE
Q8/nG7y4N3w477roIpGCh1/jxOaVg3yQS0+9siYNDyvG7sKPD3wQpmR5nMzC
A+2ja/3NMT4kT8txas/jYfuHRoeICT48VRA9/SIPD2lD7CqraT5sn4u3eleE
h+r3HZaf5vjw/lyBfv9VPPS+XVtyZZ4P4+Xpe5vK8fBnoE8v6Bcf5qMTrS9X
4UG/PyBX9x/W/50HgojbeGD0DasMCAmAfjnjnfU9PIS+CsnIFhMA+5Hn8MBD
PKS/nFzmKSWA0bHIjQcb8XDrxe4keRkB5GpsXC/1FA+vn88vPpMXQFtszsDx
djz864g5mKIsAH/qfx9/duHBoH3pG11dAAHnifG+r/DAbEvaJawtgJqT3RVl
/XgIe7rs84MVAngh4rhv8h0eTjenb4kxFEBoge6Q7gc83H6i/J5kKgCnKsEs
jOFh4HGO7zcLLJ9ObsW6CTwsIt2XN2wE4LZ2WMtvGg9GDZcF4XgB7MTJUty+
4oH9wOypuYMAzH8omRB/4GFnfQV11EkAj2y/tUv/xkPWXfyDIhcBlOffde3+
h4faO7WOG0EA8bi4hBPCBHhz2/mmFl0AC8ObcuzFCSBUg6z7WAIQqk4/1SFF
AJObjNIzPAHcSaFs8ZUhALeqzWCNuwDSbOsNe+QJsKvSPU/GUwAb7TgvQJkA
Zyp61Fq9BXCxnRadr0aAuut+mcfWC2D/Z1nVL5oEeHft/XLqRgHoLKjcsdYl
gEjpluTFIAFMjXUFbdAngFnJJ6H6rVj/sk+0DxsRgFe8M3Z/qABCtGMnM00J
sLvo67z9TgHkiKT1nbMgwLmC/btnd2P9jueOnbAmwL1Lfycq9gqAKLdGL9KO
AIMXj2wNPSCAa01BKWwCAURzJYZMDgnglk+GuaIDAcxzTq7/cFgAa+aLJJ45
EkCQrfAq/6gAdlwJt9i3igB7zp5z9z8ugD027eeVVhPgfJZWm/pJASxJlfoW
kglw/3QBvSddAHsFX/boUQkwlG7ccDoLi5+X8yWDTgDxtLKVgmwB9ClWPJ9j
EsDypG3NslwB/LAl6jM4BHBPvWXbfEkAM23MsVQeAfYedypLLBIAZUnEAgkI
kHPsgRG5RACfVTNnxt0J8OAoNf/PNQHw9xtShNcS4MORFo26CgFY5cwZy6wj
gGQC/8zeKgHkjVMuS3kTwDr+hSy+RgBKDzahHz4EWHPIO+XLHQHsYhYm9/oR
IDrmjcj1egGo7gv6W+pPgNwDgXEhDRieW2YRtoEADftGfxo2CmDdPykV/U0E
+Lh3x57BZgE8juh90hxIgGVRM1MX2wRQkPuVumkzAWwi927z7cTOncfOfd5C
gLURv4ZVugUwt4PatHUrAfbvjA948UoAq1MKX78MIUBemGhfWr8AIiwv99lv
J8Cj0BQP7jvML7JzrcdCCTC6TbZdYlgAX4TId1p3EEA6JIvZ+BHTv5dRuvT/
/+cNVn90+BPmV4+WIrOdBFi3Oc/ZZUoAy5XSKim7CHAw0KB2YUYAxanbXwki
CHBp41Xc7W/Y/H0krODvJsDjAKvyyJ+Yvr/bT7tEEmB8fZWJ7R8BSLvqOejt
IYCMn0PhxKIAUq9rKn/HMN7nnlapiBvY3rpFqI8igLcX+dwWCTcQJ0xd3LuX
ADGeT+T1pd2gz7vVWz+aAAUenBNvZd3AMts37CGGn7h3il1QdANGTuWw2z4C
fBZ4HvZSdQOK+fijFxiW47/+pajpBhZGJiqs/QQgcDfs7dRxA71tWUOVGPZh
f5g+oe8Gpx9vslt2gACHmNtCWcZuEDnyRMobw0X0qRFRczdIYQpFn8NwMzVy
I7JygwZTn0MtGJ6AH68P2blBUriq2RSG5cmxnivt3cD+Ulqc6EECEFcLdc6T
3CC1TSNFFsN+zsfYN1e5gXmimrs0huNXSjfucnUD/QdTA7+w7xc7Zqy2omL5
nksS32K4xUGlbpzhBit8BzZXY3jK/gLhCscNftq9iziIYUXCiv8CBW7guD5j
CxHDJFyxma4Hxte3aOYHrD9/W/PL/euwfox0DI5i+LD1fzrZvm5gsEz5rxqG
r1gSzq8NcIPQyrnBSxhfreZ3FOUD3cDwx7pX6hieNnU59WyLG8SfGvyYhPGt
bPJIImWbG8j3rVQfxfRxNGIeoYe5wfuPitFOGA4wePZHKMINTm7UljyM6XlE
b82+B3vc4OA++d46TO+ruq9mD+5zA+n+iolRzB/PtNeHkWLcYDDvjkACw7Oa
g6Nf49zA2v6XpBbmJxWN4MAbR9xAwRcMDTC/rVT7PBB2zA2WRIJKtDE/blTZ
5WWe6gYOPsT/cXDd8VT/39/ee3PJ3luplNwToih336xkF5GUJEpFsimjxIeS
WaSSZMR9lZFklFWKiqysjKyE3/v7+/M+3ve+3q/zXOecf24mN6bXSJHFzpEE
O9iZlsE9hem5WCjEJvemHThwBP5jYHpvE9hoPJZmBy4rBWExmB/m+SLwMhl2
IHpP5aYl5hcJXs6aviw7YBX7bv4H89Ne7oQdqffswNC07b87mN9cOYWfEPLs
YLBuvFDP0wius9/W5CuyA8c5Q99qzK8PWXH5LY/sYLbtye9dbkbQwXx/W1SZ
HdR894VHmN8Xt1Tu7i+3g4rdgV7/+59wqc2Hopsv7OCRc+8JX2cj2PdPL6mm
2g7IO8uIVY5G4Pb3OdeFOjvw5pTU/GtvBDdWd0duf20H7x30/+pj+VOyXLfx
u9EOWuZk2h1oRvDhj3lIaYsdWNQwl1ygGMHSwtuFk212IIIEs2NJRiA9f9hf
9YMdEKTPlyZj+Wf2++P4ULcdvPnqNRyL5aPHDN0955MdEPllDoZg+Rkz9XXA
8asdhKW3jzli+fr4l+tRye928EsPvTW0NoKP46Mfu4ftYNPe+M8/LJ+XR30P
3xyzg0uHgs6/wvIbN/K7+fAkxse3t9QzYAQwHLSfe9YO3iWFZ0mZGYHXj7Xa
pnk78HSZJL/YawRx38J3RizZQXa763UrEyMoG2B9ZrZmB9S2PSZtO42g+0uM
9vo/7HlJT6jVDiNY/cxf+JKJAK8Ek8gvDI1A7lOKQhAbAbSH372TwvqVea9k
lgEXAUotZn+dwfqZd/d/4jO8BPAN93xVh/W7+I+KNx8KEkBpNcNmC+uHTzsL
ebxFCXBMZT3bWMUIetu1o5QkCVAZvMFwVTSCv++fbn2TIYAmTbzm6jYj2NZq
HJq1jQBneWrT03FGYNFS8+eoEgFCqnyc70kZwclmfICYGgFe29yTzBE3gsTG
xl8fNAmwdnLgwy0RIyh/c8gzUZcA13zyb4Vi/f8T6vh2yJAAvJaX/38+WK+n
OHAYE8Di+m+CNrcRlhOfu9/sJkC06Q3XRWy+OFB7zO6KKQEKVztynrIYgW/1
cMteIMDzpw5iHluGkPzyhMWqBQEGa6taef5h89iL6boKawI4NFx9X7SKzWPP
A3cH2hLA/sVBhT1L2Dz2bLlcl0AAjqqHXa/nDUHpaZjuJJkAmbL4aTNsXrIu
YyoupBPgDLkw+Bk2T/mVRil5OBLA6Et4mPQ4No894smWdyEAt4kv24Wf2DxW
nCw54EaAoSleXOt3bB4rFEvJ8CLAC0fudyIDhrCVf5eP5kOAiffcUqTPhqCS
ty1a2J8Aj49WCkf1YPNYbh5zxxkChH2tZpRh86H/PY1LcUEEbI5G2h3Y/JiS
/XjZKoQAJz5cPP4Tmy9fZhkFsl4iQIR3mudsoyEM3H05xbiC1a/6xvI3MgSm
DFPvS5EEqOOt5B57ZQiqt1//2B1NAO+bKnVdVYZgk2bltBRHgOnMhpMvKgwh
IOV977MkAnCet5FIwubhtJtE4ukUAvyrD+x0LjWE6qTeVq3bBEjwWMxWLDaE
wQTHA+N3CbAUHxc/kGcILPHfGXnZBNhIXcxNvGcI6rGee1xzMXw2pyZ3ZBnC
4ehfFbIFGL8njM503TaEwKjT+v3FBGw+vrHXG5vv0yMXH6aXEmB+spg+h83/
NddCVMhPCRDr5PT+TKwhfL+ykSNQQYA9rq5549cNgS08Qvr9SwKMnAqboF41
BM1LnGnRtQQQaT6TXxVmCEdCEwQsGQS4cIV9SATbR86GCMcyNRAg2HuryAPb
V+4E32ata8b8tK7CWuJvCK+CcOEXWwnw3Xvfv4mThjB09v6qcQcBhE8JZct5
GgJHoOq5hY8E+Ork/fvgcUPQCng0U9ZLgDFhrg1fR0Mg+OufPNVPgI/f6zsj
sf0q6FTFsPogAUSjqYGpREO462NybOQHASZ1Uqfu2hpC/Yn6T/dHCEAnHDh4
x8oQhr0syMcmCKBQY3wrfr8hcHq2tElPE2AhTP9DsKkh6Lgfse77TYDzXzcE
HLB9kOTa9TplkQDhh/2OGhkZQrDLUVPCCgFsvayes+gaQqbzQCXvOgHedR/V
aVU3BIajm2HLJgFGyX5tMUoYHjqLNHNmIvy+R8g2kzOE6yXGqQqsRGA70148
he2vd7RCPmyyESHa69lqsoghPHxYwz/IQYSH7G9va/NjeGls2NRyEWH1cX9C
PachdBThY+7yEGErtmLkIIsh/FCLaLrAR4TZGKXi1n/Yfl7QyEIXIAKVMvvD
YsUA2FU5YYcQEUZgOKNi3gCk8g9dFhEhAti19MtOG4CWckLNnCgRvor4Pr40
ZgD7HnSsdIgT4VvlTbmeHwZAUBQ2fixJBIVfbDuUv2L7/H3K2XhpIqj3Jv31
6TWAIPnbT3xwRNgpvRxa3Int9zmfp63liHDiFTPj2zsDuCuH01KTJ0KXSsgH
vkZs3//v2Ak2RSI08MtXG9UbQB3ufv6wEhGWLtdGEKsM4EPm8BBSIcJQnfAu
73IDGJZWlb+nRgRxu9Hv50oNYCnjhPNlDSJkDa7euFhoAJxSj+46aRHBGwR2
XrhvANJ3pvtMdIjw0Wts2S/TAHQk9MWk9IigSdjf7ZhmAGbpgaRlfSLs5/jW
A0kGQBKrSOoxJIJEWii7fIwBeKQuvy/fToTQle7TS9cM4LyICfctY+w8XKFM
Y5gBxNwKswrYRYS+zhKR+PMGkClUH3nEhAgBr3JcbQIM4HEy02vtvUTMT7sE
WHwMgCFgscm9jwjsv3VUy90N4GNi1N4JMyI8uWD8xNHZAEb4WkKaAbtPKXvl
Os0AluN5KvPNiRA4R7RIJxgAN++RxQhLIvAffueqfsgAcHHJBm5WRFBxl5cq
NzcAXe4uf/xBDP+TLOeMTQ0AYsRK5GyIcEFOIeyZsQGQOY9OrNsSQfqNyh41
fQPwunFX9csRIuQK1FanahjABfYB9yoCEQjaCax/FQ0g7vq2+7dJRIgrwis6
4AzgP1a3wSAKEY4Fhsk+EzOAsog8GQqNCP/afm4yCxjAa+axo4ZHieB0GNdl
y2kA3Vc10gUdiPCu+c29JCYDGNvy7ZpxJMLe3IXhtEV9WA1/LNjmTIRBr6rc
zVF94Nn8ffiRCxGKmvmTHT/rg9xlo7gYV4zPFdX64lZ90P8X9NbbnQh7PA3M
f73SB/Owl2wHPInglWuvJ/tEH6h/1/YrexNBy6k5fX+uPnhfNL3CfJIIbQey
4x1S9eHiavir7z5EyObfUPKM0of4C6/X6k4RQduaOcDtgj7kLLPu+s+fCFeO
v44g+ejD0/NWQaEBRAhOIAbucNKHN39intkHEmF7Xd0RniP60Hvu/ezOc0TI
jxPV7jbTh/EFfh3x85g/NOxlkw304W8g0WcxmAjbqIk7zJT0gW8+pfBjCBGY
Dz298UNUH7ad6f35JBTD73G1ajC7Phj+llRMukQEvphsla1lPbA47ejiF04E
Hm3b22ETekCf+S/L5ioRerUeJ07168FJv++fNSKIcOvwQznCez0InVKU4LyO
nXdBwaHwlR4k+npSRqMwfItnyfOP9eDer8KbDdGYHn9Myhnc04Pyk7/ac2OJ
cElyvM39ph40jmvzXo0nAq/+07Ox1/Tgk/fpgy6JRND9ya+Uf1YPfo0+jTJN
JoLjqzcz5R56sO65+EbmFoYXc8LEC6oeCIwYM62lYPp8pKj6+IAeKHiE7PuU
RgQp4s7KjJ16sH24JvTFbSKkKF0oC1HXgwNuGy9TMzD/fopXOCKlB0d/4JcC
M7F8ypGQl+DWA9/jEUbE/7D3i1W86l7ThUvfGgP0cojwyXCd98akLiQf43zM
d58ICRaX5XW/6kLuwKHJyVwsDz83cb97rwvPnRLU3+URob7KcdDhlS40f+nw
LCoggnx3ben3Ul347CD8IKoI85uxR5xjti5MfaZ893hIBKV/jTGtibqwcfS2
rHkJph9rQo1+uC62l3x2UHhMhNt6voZxp3VBiY67s1mG1f/0AtMXF13Y0Xus
Z+ApEf571G0iT9AFa+p94dpyImS2dv92wOuCAzbM3q0ggkPE2x1x+rpwiqya
cKESq399ReapvC6EfzzxjlZFhPe8xRXvBXXhJvERx44aInSri4kNbulAXue0
hcgrIravnLUd+a0DL+z0r83VEYGus+A39F0HWtoD6zsYmF6evorr6dSBL4cr
1ktfY/nv8qeyjqED0++Xd8c3EMFd4gVr9hMd2LIxCfZpIkKjoFjk2Xs6INwa
9tz6LZb3HfLWZsk6oHKofk71HRFOSv9wY7qiAztbmPTY3mP8TtFGq07rwEFr
i1PDbRi/vmE/T7jogFNzVDHqIMLuAYvT/HY64H+gZTTnA1ZvVtadh/t04Goj
j/LlLiKk8pwMNNXVgRSLI65OPUTQiY/mb5bVgfw3ydkmfUR4FvjxshWfDrzc
3/VF8jPG17p4T926NrxDYlLL/UTQMN+mpDOlDQP4o7Ser1i/3FF68dYXbZit
v5tSPkgE35jQ6Zl32sBkNtB58zsR5p6ZJuyv1gbRum38AUOYHj7n+CYUa4Oq
qZvNkZ9EKGw/cLfjjjbsrs2L1h7F8GHq1OSK1gabPWON3ONY/zr/QdckWBuc
qzVYJiaI0Fz7udLNSxsCdp/CN09i9/l5uu8aVRuuvXx8KX+aCF8CRXLuWmhD
2s656ohZIsw47pV/aKQNhS+MVlzniOD3x+HUU0VtqNpxfgd+gQgFM32pT4S0
4f3zl4Fyf7B6Dog+KtzSgkGjv2XrS0QQ3n+SkT6r9b86pvtXiNDvpj56aVAL
WAyvaFatESHPOVPHuU0LxJ++9r69jvEjxFq0vVYL1PXZ8oM2iEAKy/JifaQF
JmVWQ+QtjK8X6RffZ2jBYd3YbYbMJDg+jPsTH60FLqXvnQRZSRCkSxyzDNaC
QG2BuzNsJGCtO+y27KkFkY+Ife85SLCrRDn4PkUL0jVTRR9xkWDh3zdjC3Mt
KC7uJcbwkED47tVn3wy0oEZdKsmbjwSteJa/Z+W1oL3Q8b2lAAlkImgKTAJa
8F01m0tZiAQHqj2Mb/zThPn87weYRUhwepPfhn1KE9hUlCK/i5Jgr5JuwOV+
TZDI80R14iRIy7/1YvatJmgqFW1kSZKwPYFVz6FSE+srv/aESpOgYAtrD/ma
cERBJ8QeRwKWdY5V6VRNcL13+sVOORJox236nrmmCWe3PVsQk8fuJ/+BjAI0
ISp7UX9RgQTPH0sjbhdNuCO70/+jEgkUs880HD6sCQ+zQh49USEBz1s3/9g9
mvBKpnY8UY0E4X6BHQwNTei4u6Hip0ECeX3cym8JTRiSAncbLRIUcXetSLNr
wuKdiHsaOiSIOMg0tG9RA9glmwY49EgQGsHZ4DSkAVK3OWVG9Ulw/haUnevU
AC1xm6MNhiSwil8vj6rTgH1pCWm520mQXHNl6FaJBhBEOz9eMSZBxR1em4y7
GuCeIizososEI697/mVEa0CQMPWwqQkJ9FY5edLOa8CNm7djZfaSoEzk3bVY
Dw24K9jfvGpKguZ1o6CLJA0oScKxfTLD8H94dN4DrwH1/C77XwAJbkkA9yFd
DfiQcD881Ryr13T6vQZOA4Z5f9YGWpLgFB/lECu3BizFqa4RrDB8fNxvfV5W
B06ekzv1DpJAS2HrefGIOsjEPjrHZ0OCwBG21+e61EGHa+bppC0JlK2tWkyQ
OphF68+2HCHB+rOE/r+P1YHEcVa7iEACcbcMtpdZ6uARVXEyikSCCWcFh9Ox
6hDMtlLgQSEBPahrTOGCOsREmvzcTyPB252Uug5PdchkuaSgcJQER2f3TV8g
q8Pja/XHNu1JIJGpEikL6sBgYs4acCSBw0TyrVe66tB1xeJzjTOmT8MtNXuc
OoxsRonfdSGBz5kJ8m8udVi+3EK+4EqCeahSiVhWA+4Nnps0dxLE9n0sERpR
A9ylI+3bPUnwaTVpJfOjGuitJ/OIeJOAfRMvqchQAwjtsp47QYKoJm2ZvFI1
IK+JRXX4YPWUJwsqZqqBV8jRN6WnSMAovseRFa0GF1bubsX5kyCd9YaA8Hk1
iAseMPUJwN6f5rEz0l0N/lvaFmodiPGVQ0icJ6jBkyC3l6rnSPC97aiS8z41
eL2Y94f1PAlitl9la9BSg+6zY4bDwSRws24wV5NSg7F5jQAUgvnni/B0FLsa
rJ45VZoTSgI5SYrg8IIq8M49/nXpEgk6wjxr9/xQBbmAOTWncBJY9ElvJber
gv6skafJVRIAft+voRpVMPc/nysZQQIDieQYg2JVoE6//LYUSYKef01TYemq
cOLUX1xPFAn4upMUGyNU4eKkqUN5NAkKyxN2c59RhXifK7dvxpJg/5Q93vaY
KuRMvO4+HU8C880IyzgbVXh6gk34SCIJujJv0pt3qULDmJWddjIJZu9uRG6p
qEKvV2w89y0SxP3d+9VYRBXGR963jKeQoHbwua/Plgr89RDgaE4jwWpEA2RO
qwDfT6JF/m0SeFkyTrX0q4C8e+rViAwS6KfOry02q4DhUG+dayYJVhYz12Qr
VMDCVWrd7D8S2KzPh1jkqgD9u+NuuRwSaNoo3ziRpAInXbLPr98jwYM4kn5s
mAqEDX4v788lwTm/9IjikyqQ6Kw09zKPBPW5G4lNNBW4/9VT93YBCdq+Jh3/
Ya4C5Y5FvkFFGH9vLdjX9FWgsf9XEfkhCQT5+BMF5VTgk73OqEEJCUwsP7Kp
8KjAr0+nlQQfY37Z9AvduaIM/+jPjs+UYfqpKV+3GlEGgb7F/94/JcHHYd/b
tI/KoEDb+eVhOaaHNoq9e70ybO8JkYypIMHFCkWCf4kyHKDUUr0rSVBTGx4T
nKEM9l0btyyrSGA0yiMSHqUMviToVKohwV8R57XIs8pw6UMEH/MrEjSxbtrG
HFeGZELToe91JHAhnpWMP6wMuR2c0XUMEuj6GPgkmChDxRGbxqzXJGhPLbBL
UFOG5rYE5tAGEjyb2NEbJ6oMn207zeybMH6Ju3himJRhqlX40s63JAiIXP8b
OaMEG4eo1WLvSNDH2lwR/kUJhN7dXl5oJQFe/qNlyFslUDrYv/1jGwnKJw9X
nalQgh1vcYFPOrD7wnHZk7lKYG3lUpb4AdMbUg53SVICh6b7U6e6sHxpLZmk
hCmBn+VPDZserL9c3jx98KQShDeoemv0keB6tZSUKU0JbpqfzOP4jOWv1MyC
nrkS5L1+9GOknwS/fnvwKeorwQuYkWv4SoLcI06BIrJK0MLQd8odxPhZLtRj
5VaCL2ZnM658J8FnbyHS4pIizNRV9B4bIoFOG310eFgRtkxXREx/YvnKpb/6
sVMRhF+ZEGVGMX7KLG6jV4qgsvdS4uoYCSKZjNvKHirCzpr61r4JEnj/zij8
77YiHDJh5noxieWN9LphXKQiOFVZHEidJoH024HQC2cUwX/XjYjAWRIwzVYk
eh5ThKuVLQzCHFav9lwwyUYRUox5N3QXML01z5mb7VKEgooje/j+kGDzkcCm
looivNx+88LkEtaPT9+pkBRWhHflXRUtK5ifDnacZdtUgAFD8YXCNRL0Sk1b
zk8qwOzTo/pR6yTYcJHf9e2TAjAbZPp5bJCAhk+gvW9UANEnAw/3b5Gg8srh
0qpnCqCqJz8uz0wG3egA68IcBdj92E1lk4UMhGN/jdLiFcBGJ99tgI0MKQ/H
QyNCFOBYyVhODQcZXpSrawd6KUCAluZABhcZjFzuE1zJCnDt4SnpCzxkqNfX
/UPAK0CaRhmdxkeGzoP3VEBHAQqL5lK3C5Bhx8m6aQNpBahW2/5RWAg775eF
vRKHArwvOC8wJ0yG4Ph3oxpj8jCoUmXbIUoGCaXkmwJIHuby/saUipOBd02k
ZemuPLAo72uOkyTD6MPQvG/n5EH8wRVWH2kyVLF/Mnl3RB7UFd+ANY4MA2Iq
D16oy8Oe+2zhqnJkaJc4tJjHLA+H5a1rWeXJIB0hZZn2dRu45MSuDimQwYeN
WHLjxTYIlGszRkpkyI7IwIclb4PI/wTO5aiQYUPqhuRZn21wG0d6ekmNDNdw
GYdOWWyD4szUGUcNMuhImEx7y22DGuk+LRMtMlxprxf3WpGD9gypk5I6ZGDC
+w54fZSD75JOBUu6ZOjKPUH3KZGDhdvZw9362PtPdNwNiJIDNokf8uWGZLA1
zX0VclwOJNKVjt3cToYZro6e6yZyoCnmlXnamAw5C7qrqaJysDe16NPhXWSI
d44yLZyRBTuRSTFtEzJ0T0S+rH0rC663dMjce8nw/GJjeE+uLJwVCkgeNyVD
o1F70VyYLEQlP2trMsP4DxU8KESXhTsCf7jzgQzP/o4HbTeQhUeJO60jzMnQ
l5dj4cgjC6/4Ll53tSRDc6n3u+sjOOiIr31tZkWGg+kuuOf1OBji2dyUPUiG
VPWbdqMZOFiMBdP1QxjeoXMXcOdwwMEdebHflgyu88dLaUdwIBXTVPnyCBnm
9z9iSlPHgRYn1590Ahkczt6I7WPGwb4bNoZBJDKYDt52khuQAQJ74mkyhQyX
t/vEn6yUAffrnSUGNDJcCA/WrbopA0GsIr8EjpLBWkmZzndKBqIjqGoz9mTQ
+1Ev7XVABu4y3/F470jG9tfrCW/kZaDkav/9h85kyEvOeqPyVxrqt3Dfol3I
UDYl9iG+Rxo+hLvgvF3JwGk627JSJg0/N+7bW7qT4b6J0OuTsdKwdOlnupIn
Gcx5CG3fPKSB859qN5M3GXwtfDcdzKRBJuyk0PcTZNg5w3fqi5Q06Px9dKTO
hwwno9pVXRelAH9xJi7rFBmCWPTMp9qlgLSq33LRnwwFfVndYcVS4HHhLLt9
ABnIiwEzwpFSELxcYb4zkAyKbbMPHh+TgpjzK1fEzpHhuONBTsJuKcj6Y1K3
EEQGb4UM3WURKXh87tLfD8FkkNQd1cibkQTGQv2uJyFkcJNX4qO3SEJXIPP5
xFDML5q6kwJ5kjAyZ1F+6hIZzkl86G2/LAkrATd+HwonwzYbNJRiLwncv1t0
NK5i+LTkKLhslwTcaV5fjggyFO5ezdcXkAS9mSNFI5Fk0By3vMb5SwLA7+bI
mygyLL2feDvaIAGUqS7F3Ggy+Cduj2/NkQAvX/HjV2LJ8PK66+CLixIQ8uvo
f8fiyfDz9e0PRVQJiDuZ2b83kQzaQr+C7+tLwH/jAxIyyWTY85c2fI9HAp54
y1NXb5LhRsdblcJRcXg96narL4UMtXlixOdIHHo88zsq0rC8OrZ5/m2WOIz9
HONNvU2G0CdGxcPB4rDqrnkoMIMMsyq2q2xkceAdPnWDkEkGZ6X2C3q64iDn
Vtag+x8Zqqc0dx/nEgeDH3NMfDlY/hTX29z5KQbmx7ebTd4jQ7hvD+qrFwPq
t/NhLblkQHr3S+QyxeDEsaqqwjws38bMZf3Oi8HFgb9L1wvIsHzxnfIbohgk
OO3b7lFEBv0OnW55HTHI+XLlzP6HZGh6R9obxSkGTx3ePJYvwfTjyO2/MCwK
DZ/ZpjZKySB+UejiiXpR6D1qrTFQRoYjhkJnRu6KwkRfrFfNU0xP+dnuPudF
4S+t7UFG+f/w2+O2TBQFvl6BH8EVZEjsJl+K1xEFeSpJjlZJhsdB+xs1uETB
sDvVcXsVGXCFtoc6foqAJbnvjnANGa4ezsNdYogA/aNU7+9aMphd97Y1yhKB
k0QnkY46MqgU3ZuYCxaBsM5sQikD6y/kA6xVZBFItPuREPeaDDan9pRE64nA
/Xal1pMNmJ/V7eaO84hA+WEvTusmjA9B02EYE4am90WWqm/JoMRVelPrjTB8
spm8xvqOjNVhxCuXIwy/3ukwhlrJEJZPcJMKFYZ/BwP+MdrI8Is38IEsXRgE
Wp6Z5HSQIURyblDTSBgUrf8EX/qA8fNeBBvWhGF7884Kxy4s30p4rx2fFIID
By7O7+4hw+nXaxwxzUJg31irJ9lHBpEHEw3VD4QwH2+eWvqE5dH5D81/woXg
8ht42N1Pho719G0mTkKQvD9y7NlXMlim83y5sUsIclGT8s1BMjhaT3N+ExWC
CjyX2+nvZJCJee9/+YcgNNfb5BweIkPJD9kp0l1B6N+X+FXrJxn+6+3JNyEL
wtSrTinuUTJ8UOl9uYNXEDb2itDHx8hAlekHi0YBEKqlpjZNkGEh+7yz12UB
UNpz50PeJBm+gbR61k4BMK7u54+YJsN5W766kd/8YL1b1tZ1FtPL+zN7zB/y
g8NLlxizOTJw3Tevfe7OD347c5tkF8gQHX/UyUSWH8Jf/GRZXyTDx33Hd3b3
8sGtHWrQv4TV7/nzxLVkPsh7fvLyyxXs91XWvJaH+OCFUUlN+hoZbvG27sWx
8kHLs5mVc+tkGHKIEOOs44UvBgbG5A2sn/a4P+W8wAszT86eNdjC/LSwS0vO
kBe29F48EWCmgPyV4v+sp3hApGxlepqFAqeLjJWiC3hARXeP1ns2CrTy7O39
epwHdpZeOvGQgwJNLbOdB2R44JA2Iz+aiwKUm246TT3c4PSIediLhwJfy8LZ
HJO54bSmpbwlH/Zcnu8smw03XC2+4awkQIGQu4+SGtm4IUX93V0mIQoI5Pae
y2RwQUEh76dvwhTAp//ccyOUC16q2onViVKAFbFvRBtzQWv+TVKWOAXuex3s
vjfHCQPK3UkXJSmwpyelr72EE2YfiLcdlaZA8LkieZETnMCsZM+9E0cBgx7l
t35KnCCam2klJkeB/ejq6OAgB6gpDEYubKOAvY1IqtddDth9T/71BwUKjA5y
TrDSOMBmm/tmmRIFJAh+/6qEOOBYdv7eRBUKDE2qTlxvY4cA2fGQU2oUUI1e
fnMihh0isjQrD2lQoD8lLN/Nkh3SZPwW1bUoYKeml3+WiR0K75YZcOhQIEzU
oz/zFRtUS837j+hSwGvZxulLCBu8v7O95I0+BRIPLIChMRt8kwieuG9IgXPu
+3PvzbPCXHqV6pXtFNB49C9FtYwVWMTX3Y8ZU2AxqlGnwZcVxNP23d+7iwJM
l8SjQtRZQV306qC0CQWU4WD5gREW2JPyRmZ1DwVKGm+1auWywGFhdvs+UwwP
W9YRdRcWOH7TOr3CjAKfzseJ7cOxQKBgXFcKUODR0flA38/MEJnUJhhojtVz
45vw03RmuM0veIRgSYE2rV5uAQozFCeQ4nStKPBexDjguhAz1PKmveU9SIGO
13uOinYwQXtcH9vkIQpcjNjqq4lngu/c0uYtthSYvHCRNewQEyzEOF0pPEIB
mSdh8xROJmDjynl1nUCBYle/U/FxW3jJ6B9r7iQKeCr6vbvPsYXX5FDetZ9C
ASfO96oTEZv4vVFeQfI0Cpztl3zotrWBt2MrfrZBp0DPUFYY/6UNvGvk5OxX
ewocE3Zqmlr9hz/HoqtT44jhoyxW9u/8P3zUtQCfDGcKiCI4Bovr+DtM5YXB
LhQoeyD+t/LMOv7RlT8/qa4U+FITUeI6+xf/anOn4nZ3CnSStmfs8/uL77x8
0UXYkwLb9JLGjkyu4Yf+1Wb99qJA+8sXr26dXMMvhm1+bj9BgSTZGOAeX8Vz
rINEqQ8F+ILu3anwWsVLhUZS4k5RgDxCGk8dWcFrrzXdPOlPgYPNz6hFHiv4
fSFcHVYBFLBuTWT7PbyMJ67Y8KoGYn6UDcSdcl/GuwcnHmQ9RwGp+Lw63PAS
PmipM2ooiAKHizUFmd2X8NFBIg2MYKy+hcbtuOE/+LuLVKacEIy/pUU7X/c/
+NKzd/ZdCqVAxvmFyNnhRXz9fH+o4yXsvonVS0Uei/gPZ2SrdodTYPPzVvPt
kQX8z98uSxJXsXy4YyJT67WAXzqda7R0jQK93RnC4uPzeK7ZnwHdkRSIusHf
mX9yHi/jr/b4WRQFHOsPBPlOzuF1pk9OJkdT4E7jYyVvvzk8/lSJ+ulYCrDc
+LGsP/gbT5qc8TwcTwH37mkzpuFZvKePwQOtRArMan5w2Tc+gw+eOPudK5kC
uWNH74xPT+NjTryQHb9JgV/0To2thSl81tiKQ1MKlkdsTJTra5P4x1577uSl
UeAWqxHtAtMkHo1c6rl2G9P3Xp3Tnzl/4bs8GMKuGRSYebljoEhwAj8yzEww
y8TyaUFocFRyHL/iZpkg+x92X3mOshSFMTz30I13f7MpMB/eH1+mOYqXdX3H
0X+PAjfzP5SbbB/B633ntXyZS4F9Lc9cduz7iQcXu2vpeRS4LtLYmmM9jKcM
3qw/V4Dl3WSn4UXyEN7LuXudVIT50Vy+o+HYD3zIV3ETg4cUMO9YL9/o+oaP
c7QPFijBPmeek6FNDeCz+zOfT5dSwO+VlWUS21f8E/vBudYyCtBu4nIfbuvH
v/4kr/fwKQVep+fcLzL5hO+hu5+KLsf0zx/5LIbWix/rzS/2qqDA8/TI/UfO
duPXqOOjFpVYXre41y0lf8Tz9mgqK1VR4GTZJ0X2Y514OYqfK1MNBdKpY0cm
st7jDbrKsr/VUqDo7+Ou9IG3eHPS/JdXdRQoWN+6JiDfiKd92C6VxaBAZFeD
NsUD4U8QgmkXX1Pg8+O5ve/I1fiLHVUpRxsw/f3xORQ9/AyfcGS907iJAgGS
pRqNU/n4nLZ9/GJvKWAU4u/b7x2Df2Z71WahhQKcK8Fh+u63GA2tb6I/tFLg
hhdeIC+oiNF7iL2prI0CA+x6VkFSzxkTLdYsiR0U4PELz1w4W8P4ax2HP/WB
AkIbipGjI4jB/7bt0qEuCpwiV3KGJzUy5K0Ea9R7KIBz7ZQ339nCMGwirbD3
UWA7HidiOPCeYWmZtmPkE6avSkV1m6udDHpDX+Cbfgo8vZxLtbr1keFjLv3k
/lcKiOx0Wghz62aEvXaaDh/E+s/DxtQmg15GIuRoHvtOAY/Ojh9KW32M+4wf
3nuHKPAfhRqR2vaZUW6mnC/9E/v9gpSS5N0vjKY6r6GVEQp86Gvxfew5wPhk
Wrytb4wCKv9WOOn63xiTtZNOFROYXmMUC4XWvjP+7dG9mzKJnX+HcnH2xw+G
QE1A35lpCvBbThwZbBxiKJqUixJmMTz2ehVTi4cZ26v+EHXnsP6J73alxv9k
WO3alcS7QIF8sceEAf8Rhn3lxfe/Filgpf/9yDRhlOFr/IqrZQnjz+3tjuuG
Y4zLFZsHClcoEJ6w41ueyDgjefv+yOtrFAiy9VaxXRxnPCiPRO7rmD4K+IYv
dk8wKgybN2CDAodqrRf0n/9iND/l2iu/RQF6UJGBf8oko1/fNmSDiQoC+toX
DQOnGFNliS++slDB6/T+4kuEacam7oeFajYq+Ma8zbTTnWEIPRYxyOCgQj6V
W6+IZ5ahpEPzD+aigvsXhL8xPsswLrnziMpDBZ4t8bKpht8Ma60v40Z8VNCS
6SyZIswxHB/KqgoLUMFStCwxv26O4adx3P23IBXsXxz3U9CeZ4QX5d5rF6bC
MYmuXccz5hm31EYGSkSp8PG05g9X9gVGXoGaTJw4FZrnGDTVswuMShWfoycl
qTCVoxpb+m2B0ZJXkmYlTYV0ZYVTyzaLjC9Ksx9VcFRoLHo0zfJykTGTayDI
KkcFpUdLmx+V/jC2FM4dHtpGBa4+71SPpD8MkfsvYhkKVDj/JSPr5dofhor8
anO2EhX49jtxd3guMXbl7GG7pEIF/gPlHYWdS4xDcpf3O6pR4fCjvsH9e5YZ
Tv8xwndrUEEtzVjzXv4y4zSO5ZWEFnae85m8eoEVxtVMy7U/2lSI8HXG3w9Z
YaRKR+/s1qXCKjfrnMXwCqMg4925Z/pU6NmfW/zQdpXxUpLvWbIhFaglRc4f
K1YZrbftZv23U2HiYM1WjdwaY0D8lvZhYypsO/Y0yvvGGuN3WvdJrV1USNmf
Ntw9u8ZgFpMo5DKhwuC+PB7Wo38Zoqn2P8f2UOGay5GFxfq/DDWRLIUmUyr0
2xonFaqtM3bfGjyWZ4bhoWjQLZO0zrAVUsi6BlQYNz9QSVxaZxxLdv983JwK
yzvLdA46/2MECBSIm1lS4UhonzZzwz9GROI4WdaKCvH2Tg/DNDcYaXxaN/9a
U6HjDW/Wy+QNRlG8X/vnQ1TIVZtYrljaYFTzPOF5aYvVb6n0/JzTJuN97Lx1
+hGMH2655kW0yfjGtSPqHIEKTcf91IzVthhz0cFvSCQqfObvbd0Vv8Vg5aze
0qdQ4X704Ufrv7cY4jfWTQVo2HOPf8dAiwlpsJuFTtOp8EckI8zDmQntuX71
Zas9FczuvNI8kcSEDrM2/Cl2pEK46QFPW8SEjkewG0U7U6EUr6outMCEApkP
Bni5UCGk5sTpF8rM6PrVuFILV4yfJP2de2nM6PZW2y9FdypcJL8Mzb3BjIrD
BdWZPDG+95B2T7xkRrUbJM9vXlR4yXHilOAvZtR+KS331Qkq3Ju5KCQpw4J+
rPd9y/ShQmK0ksqWDQtaCJWWvXiKCsE1Qnlvw1gQ218nh6P+2HkFvHFnSlmQ
5MWc28YBVPBOmO9dG2BBmqs/ukUDqRDW8DLSg58VmV5QFl44S4WBTN+bj/ex
IrtlL7sPQVQAG921T/6syPV8cXxZMBVuDpjUDmezonN/JlsSQqgQixvqbm9n
RVHndDlOhVLBNSwO7m6wooyFAItDl6hwiqNi01KXDT0KLL+qHk6F1oMLvB+d
2dCruT917FepIG4657UvgQ11Buxa/3kN88v2AJ64WjY0NHtx95tIKhxqslqp
nGRDf/xfnb8fRYWVGk+tRml2xDGzWR4eTYWY1bbcZwfZkZTf/jnnWCqc873r
dOUCO9KeitTdG0+Fxbk1mm4hO9rn2+wrnUiFFtsdybU97Ij4i6t4JYkK/9jz
2bVYOZD7SdvR3ptUeOxW8zLEkAOdH09UqkjB9GCxmVd0nANFe384npJGBU0F
vneViRzo7qhI9pnbVGgfSVctrOVApZ60L3YZVLAZc686/4sD1f+8I6mbSYWj
7wlXVSU50Uf3L1Te/6jwKsTu0gtLTvRzSDblVzYVtm94laie5URLrsc7397D
8uByOV/wPU7E9SOXrzAXyzd5r3uFbZxI5vjIoet5mJ9XGtxfrnEi3W9q0e4F
mD8XNOnFalwIf8ynEYqooNzEcfEihQuRBkqY5R9S4WfXt1atq1zI02nWbOMR
FTy32dq+KuVCwV8MLn0tpULo9rU13X4uFOtwrrq6DONTtKTvCjs3yvr8YvnO
UyqkKu4aembIjR4fXd0eXI7lr0CMdOMxboT69gRSK6jA3vjflcpYbtRFu1xm
VInxSYkRjX3BjUZ7GFNCVVQoGAzs3TvEjVYoLJq/qzH+ItOaOvh4EHe3pXd7
LRWiiPiR/bt5kCw5Oq+kDst7lV7DdA8epPfx3Y9YBhXID9rKWpJ40H4i37aT
r6mgI/fUaaCaB1E67ZysGqgwck3O5MMID/Kyu5Wh0kSFH5bN1vmCvCikvbuX
5S0VWO0CYuz38KK4wxKiQy1UmB+ZW5/25EXZ7+2JjFYquGXvzHNL5kVPbLIS
s9swvVrgr1RW86I37wZbwzqo8P2t7K2pn7yo56ACl+MHKjzQ+dPPJMCHxt66
H9jdRQXBwA3H5V18aM2qIEKihwou4ZHibW58iLd5nPGnF3suNsITEc+Hth3Q
2uj6hPWnimRTqRd8yKDRb8+zfio8v8ldmvSND5lbPLmQ/JUK2sHjjqOc/Ij2
Zr7CfxDzQ81HG1lDfnRi/44F2++YntQiL2935EehKFhfa4gKxLGWP1qR/CgB
X+3H9ZMKIuciyllK+VFO/frDsRFMr1dzq2p6+NGzfWbjjWNUMJjQ5KZs8KOG
V1dV8iaoEHTXsPC9qgDq29vgdm0Sy9eIH7dU7ATQRA37vePTVAi8cqbjWLAA
+mtycGDfLIbXAV2XCzkCiL86Tlp2jgqniUEWgc0CSH53O/3vPBW+dFZctZ0V
QEYvBdM+L1JhLiVAikNCEFnuJH+sXKJC39JO/tx9goj+Ik0gfQU7r6PMTdZL
EPns+GR7bo0Kv+0TpEISBFHYc+lY0jrmf9XbOyqeC6IkI+dm/Q0qJLDmV334
IojuP8thFdjC+kVIZ/cYkxAqNxiCaSYa1EVABE1MCDU9UQ5vZaFB/RMtnwp1
IfRJz7u2mI0GXNyycax7hdDk4+LVGxw0qOAqGTO3E0L/dKaMvbhosJkcfPWs
mxASLNU9Z8FDg4+Dqg4pQUJIUfvMU0U+GlCjTp59EC2Etj8qn9nip0G453L7
g0whZKW5pPVNkAbFmcn+qY+FkH3xrpOvhGmgeuUfOQgJoVPqoQWZojT4cYf/
6oFuIXS58NVwiDgNVpKzljnGhFCy6pb8UUkauOlFV1WtCqEH+fuPGUvTIOVw
9VtHXmFUoXw9UxSHndeupDYjJ4zePmj+NC9Lg+iUV70BBsKoX5Fb/MM2Gjw8
H/152FwYTd23JZcp0OC5aYKBFU0YbconJScoYfjc+vr97glhJHTvQ5uvCg1i
1hInBi8KI+VtojyH1Ghg1tpwWCRBGBln06zVNWhgpFQgsCtHGFnLZlxn18Lq
++ZmcPipMHLM+vL6pzYNclIMK0hvhJGfjNzWa10a3LlM+c+6RxhduXvc9L4+
Dc5ECEzpjgmjW1IPLoYb0sBg27MHbKvCKO/OSKXzdhoMu9xqes8tgiol1P/s
MabB2S989EicCGpJ9zGU3kWD+IIYurauCPoqVnp6ZTcNwmwC3zWYiaCZ1NmS
3j00wKE9zw4TRdCWiOGv56Y0eOnqKtTsJoJEUs6ppZjRgGnI85f+ORGkIlzp
cQZosGHVZRZ3XQTturl6386cBqxDJqK96SLokODebzqWNCg13eEjVCSCnJMu
43itaNAv52ZhWiWCTvMj+1/WNCg/fyLf/p0IuprAcvvtIez7DktJXl9EUCrv
ge4CW4yvvwx2jykRVBAXLXT9CA3SsyJ5Sf9EUBV36xF3Ag2cYlnz9PlFUWsM
XzyQaCAlzNO5KSeKBjgJLdsoNCi4cDKlXk8U/b5xi32DiuE7t/z7NF4UMXP0
mH+l0+B6etqkIFEUiUVJXK22p8FPZ/WoXFdRpMbmUHfHEcNH+L83yoGiaHdk
1t/zzjTwPzRWcPuaKLJl+baL6oLxcYzJ6O8tUXTsmsJ5I1casLhO+dg9EEVn
mDzKhdxpUCj2hJhaLooirhT8nvWggcK4w6+WN6IobXNcp92LBpXDTLt+d4mi
ostaviUnaBD6kGHK8VMUVf/zK4r1ocGtU1Ub/IuiqC3syciJUzS49k30Mger
GPr2d17Ryh/T2w7m+t8iYmju4o7jKgE0mBGtbHinJIZY14L/YwmkwfGk07fS
jMSQeEh1/4+zmN+k/LWI5mJIY2VdghFEA5+rf2/9I4mhPcFm1OxgGnSOeb2/
6yaGjixdvRUWQoNnFWxf1APF0PGghg6HUEyvqUavC6+KocBFdr7dl2ig70W6
LnFTDF0/e/CQRDgNpPe8U7twTwzdno+78ecKDYRsuEpbysTQwzPtDV3XaCAx
FSHJWy+Gan8LMj+LpAFP7HM/s3Yx1H6abJYchfkjW+aJ+4AY+jGTFuYfTYOW
ArPhC1NiaMHvU5VtLA0S5Uq5w/+KIfZp6WXNeBq4nlvSOM8tjiRPOW/nSsT0
xfzc4piUONKczDkzlkSDXxyRx3aqiyNTn6HHjTcxPrO4Q5l2iiO7CeWpByk0
kC+Z+6/WUhy5nfDWuJZGgxdT4+9OUMTRubFir+O3Mb5689nY3cVRlNfUg30Z
NFjNGCamnhFHGSO6P3CZNLCScS8XuSKOHnmckfubRYP9o790IhPFUd1wuePn
bBqIqFs1jmSJo063pTuV92iQWXDw0q5H4mjox67etFwamL5ssQ+rEkd/joeK
nMvD8N6Td+xpszji+P6KQCqgweekmqS+HnEk7bKVoF+E6SFu+ffMsDjSHtzf
yv+QBllBllHLc+Jon/N1zulHNAhav02e2xRHxK/Nlq2lNADdMaevfBLI3ZE7
orgMy+cA/YKXMhLofL8t48ZTGnCEnDeK0pBA0fZJ/zzLafDdHHFa7pRAmZ8+
mFhU0IDOJ6f5x0ICldJFLyhW0mDKOicznSSB6ntpFVsvMf1lOLlqHJdAH6kZ
84PVNIhrCQwv9ZNAP7u/6L2qxfh7zbKmGCqBlslyfpl1mB+jjHtioiUQV9fx
hyEMGiip7hQbSpNAMqQHY/TXWH5XGddpPZBAuh9GlI0baPDEwbfb64kEwhPU
3USbaNAmKeiU8koCkTt8cuabMX4XPeyfvpNAnkdKv3a20GCy73Eno08CBbfN
SpW10kAtbmcT+imBYm0N6QltNLj35PC+53MSKKv1XKpvBw1211iY3tmQQGWH
Kj8c/ECDP6Pnmv14JBFqWeVX76LBToM9P7ZLSqIu67227D2YXomridPKkmi0
+XLMz14sD8rEem4bSKKVA6jp9Sca3Hf5W2m0TxLxNLGw3u/H9CYhvRcdkkSy
lgcg/CsNmtRGPfF0SaTXEH3ZeZAGqec+7X7qLon2m7fW7PlOgxI//1qRAElE
ec23KjWE4c2uOe8dJom8gWC8Moz1nyc3v5VGS6IQxq2zvSM0cCDox4ykSqI4
s54nz8cwfe1KW+C/L4my6yRmbk1geahIUdIslURPTB20zkzS4JMSm+zOKkn0
pjbrhN00DRiPLEZ2NEqinj3f8nVmMbyCy6+ofpBE49UKwzxzNHCOW1rgHJBE
a7s95H/N02CfbqX5wLgk4q0qcH67SIO3g7nnHixKom27Ju4WLGH+Oewb57gl
iQwqtT5FrtBgG60pno1XClkY+4u5r9FAdsnv0n0JKUSreEKCdaw/Wcm76SlJ
oRPbF5K2bWB+uJBjVqYrhULLd7T926RB7pun0gomUijB8AL3VyY6xPsorERa
SqF7T6utqlno4FFS+7WfIIWe6f+LvMNGh4/11DZFJynUUGb2+jwHHa63vm53
8pZCfbrXNilcdPg3ODASHSiFJkob9hrx0OHoZKRE4SUptK7NcVGIjw7qtRkn
KqOlEH/JwcpZfjrY/mYarEqRQvJa8YttgnRony8Ie5wthYwethuUCNOhYSHo
YFqxFLLUEDodK0qH3T9cDvo/l0JHi8glJ8TpIHHc/urueinko5Y+cUCSDlKN
DktLLVIorOCTqoo0HRDf8dKCbimUpCLjwYKjA+nziUfW36TQ/Tzn+z9ksfe5
XvjzdUIKPVe6N1i/Dbv/ubRk90Up1JQ7JJOtQIezfu+uft2QQp8UVOzDlOiQ
raXSbsUljSbveac7qNChn7/yYr6INPq37WHXLjU6RM+kxv+RlUaCOVOCEhp0
UBPp49ylLo0U5fSO/NGkw0W9jMVThtJox39n4rq06VBsv0ZJ3SuNrHDP3z7V
pYMfq6ze4wPSyD5ziS1Znw77V1SjqwnS6JT0bnN/QzrctgXPKgdpdDkj9Irt
djpwud5pfeghjW5K1r3SNKZDbq8jI9FfGj24vbXGuYsOkjF11p4XpFGFuPmu
sd3Y5+ilk7rXpNHbtOtBjXvocFPQVONXnDTqF3377IEpHVij2uPupEmj6RTu
31fN6PDV91f67hxptCl8WOc40KHpWJddW5E0ErqV5LPPnA4i/B015GfSSFno
YyHOkg4yO1S/v6+RRsbJoiNrB+hQmKr8elejNDooQFf8bE2HY1OS3rfbpZFj
YoZL5SE6mCxSusf7pJEf39esNFsMf6qOgM4PaXQlXq7/7BE6lBWs4jx+SaNb
PK4SJAId5I6LsiQuSKP82AcUfRIdvPv7mx6uS6NKrtGb/BQ6XLYs9atmk0Et
0eodU1Q61OfOrNfyy6CvHL68rXQ6RNaxXnwmIYNmokoPFtvToUbj6K+78jKI
if131A1HOsQYUcjnNWSQyHXDBk9nOowPeVVbGMogVdYgJgsXOlB+bymz75FB
uyIq9ym6YvqoT7tTbS6DDjGvhW650eHd0UxpN1sZ5Hx1b9WgB/bcPfbJOkUG
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
MIgLMZ0U20lvEjqGdG//HMwFqd0x6v//f7v730WnHxznwgW74kcbXEkYFOT2
OC+UC4pbnxj1sEkYP1kkeCKcC1ttVx2PciJhbuC3TeyTXHj/Vztt2Q4Slk/o
hBpHcUH26PiJJisSPgzwuqscQ/jN4XemR81J2DpeNvk7lpifgcJb2gYS9vv/
XPP2NBcuRg/C4zUknPq52v9mPBeuvcw55bOShJKHA8tTEgl/mt5XorKMhPSx
28PeyVw4kRpZ9GgxCVf5zujYpnIhrVA/1JdKQovRjZ7L07iwv+vyapoSCZ28
I4rEMrgQdIT+7JkMCT2H6z/3n+XCqw2vzILESBh8SHjR43NcaM4ePKstSMLE
QStuYTbRj7irze0zcnjhQHz2yRwuiOSajpyekMOKgZfvXPK4MD/b+sPkhxw+
8pRVNMvnwgOfSx0jA3LY1r9zJ62AC4fs3pYU9MrhgHtG8vQlLmxJyXB1/iCH
033vXnQUcSH0MUlI6p0cSu1TFa8p5sI07eiZ+mY5XPSFs/VsCRd0XL5JhDyT
QwO3C1FHrnGh4VfKYcNHcrj58yfceZ0LBR8yGofq5NB5z5J5/TIuBCNFsvg/
OTzQ475BpoILtz9vBtcKOTzOLwkavsmFzZprPenX5DCpe7D6eRUXrKWlTr4v
lMOLXL3xkmqivoaB5Kw8Oazs8l11qoYLmfLfzzDOyeFjdqW3+x2Cjx46CeQz
ctje+fuaZS3hh28ajnfEy+F35rqBxfe48Fy6bd/5aDmcbQ/WEnjAhbyj/la8
MDmUYdS5fUSCfzK3NBcHyeHid/P5dfVckI4un/t6WA5X7zbvPt9A8Gd58NvS
Q3K4pTWKEtzIhe0Cmlf83eWQ6djIYDzlwpvSh8EmLnJ48I3Y2bXPuVAW7ma7
kCWHoTtt3ii85MKVYCX1V7vkMOV1kuyvV1z4bDkwcc5WDgvsX9u+bib6tfZb
096tcnirST6+rIXQixP9+iqQw0a73U8S33LBwDEjeX69HHa+PCd0qI0LDplO
x16tlsMhm/fm1u1cWGbg7pmnJ4dzz2nh2p0E/wZeuPhoy6Hcdpc64S4uDBsm
ucJiOdR4VvD3ywcu1K2/7q1AlcO12/qM6j8SeupcHvNNUQ6tniwNuPiJeL9Q
/GqdjByytx64GdbLBei2ep8mJodej0tHuX1cyI38onpQUA7DNo/qbugn6kuo
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
stAvCeNSxGqG/wGZavky
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.400929959253691*^9, {3.400930061540773*^9, 3.4009300869473057`*^9}, 
   3.4009301704874306`*^9, {3.400930203274576*^9, 3.4009302182461042`*^9}, 
   3.400930249270715*^9, 3.400930319591832*^9, {3.400930632391616*^9, 
   3.4009306573575153`*^9}, 3.400930811429059*^9, 3.4009308569645357`*^9, {
   3.400930940484632*^9, 3.4009309536635823`*^9}, {3.400931119492032*^9, 
   3.400931127153048*^9}, 3.4009311943496723`*^9, {3.4009313495828867`*^9, 
   3.4009314989676914`*^9}, 3.4009315816365633`*^9, {3.40093161290152*^9, 
   3.4009317177122307`*^9}, {3.400931750569477*^9, 3.400931886414813*^9}, {
   3.4009319711065936`*^9, 3.400932064581003*^9}, {3.400932154380128*^9, 
   3.400932168830907*^9}, {3.4009322003161807`*^9, 3.4009322675628767`*^9}, {
   3.4009322976461344`*^9, 3.4009324233769264`*^9}, {3.400932492265984*^9, 
   3.4009325688360863`*^9}, 3.4009421787144127`*^9, 3.400947971934654*^9, 
   3.400948051388904*^9, {3.4009501759839215`*^9, 3.400950190464744*^9}, {
   3.4009528042732162`*^9, 3.40095284008471*^9}, {3.400953369716283*^9, 
   3.400953523727741*^9}, {3.400953599947339*^9, 3.4009536273767805`*^9}, {
   3.400953721341896*^9, 3.400953765635587*^9}, {3.4009537995944176`*^9, 
   3.400953892628194*^9}, {3.4009539409376593`*^9, 3.4009540190599937`*^9}, {
   3.4009542233437395`*^9, 3.4009542615586896`*^9}, {3.400954297900947*^9, 
   3.400954311901078*^9}, {3.400954705987747*^9, 3.4009547541469965`*^9}, {
   3.400954803277643*^9, 3.4009548094465137`*^9}, 3.4009548460291166`*^9, 
   3.400954882932181*^9, {3.4009549905769663`*^9, 3.400955012157998*^9}, {
   3.400955054328637*^9, 3.400955144638496*^9}, {3.4009551899636707`*^9, 
   3.4009552341271744`*^9}, {3.4009553909827213`*^9, 3.400955403660952*^9}, {
   3.400957375756686*^9, 3.4009574132506*^9}, {3.4009574451464643`*^9, 
   3.4009575270041695`*^9}, {3.4009575711176014`*^9, 3.400957657401672*^9}, {
   3.4009578100812144`*^9, 3.4009578346064796`*^9}, 3.4009578807528353`*^9, {
   3.4009600462767057`*^9, 3.400960066115232*^9}, {3.4009869395985165`*^9, 
   3.4009870511288896`*^9}, 3.423235012043416*^9, {3.423235044224416*^9, 
   3.423235079744416*^9}, {3.423236825991416*^9, 3.423236848412416*^9}, 
   3.423236890029416*^9, {3.423307213675276*^9, 3.4233072398562756`*^9}, {
   3.4233112560247254`*^9, 3.4233112664207253`*^9}, 3.4233113498677254`*^9, {
   3.4233114633237257`*^9, 3.4233114978707256`*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXWuMXdV1vsx9zcPjBxg/MYyNMdhJgBIIiem98/R4/ABTCHHihuLBQEzC
Yzy2YRpMHm14lNK0QlDfueMhjAOYylWVCIlGFUJEJMS0IW7aujE/okr5Q6VI
NBKRE2N7pnfvtR9r7b3WOXc8MxCLOzOcc/be31rrW4+9zz7nXt+/Z+ed9/bv
uXtHf9v6wf6BnXfv2N3We/9g7VD2nEzmnJ2ZTOZYW0b9PVH70/yYqP03cbf6
kcks1r+y5sQEfNTP6+s7X1C/supsVv3VQP8qpLRugvMZe179a6jjGPxfct/m
AvtP48nN4HhFJzW0LpDWqHex8/yENlHtr01wbaP+lQs7mgriL8Ox8Y5ydaK9
NKw+tSv0z2O33XrYXffOzBhoJxwbeuH5o274Agx/urN9xF13/GzZpQdohh5/
39M16k78Qubzl/TPRqwT+JSHDzzx+Ovq7Onu9mpOHXwHdaN7uUsfyP96y/Vj
uPF4Z7li6JY/sb77AO24VLUScnh0lzmQYfs/v3I80Gj+5LrOEdyfNlyCfHdC
s3e+uO0l3Ow3m/pGgbV6rLQOso4rFXcCLJD/5batL+Ke39u8cSzz33J/d0Cz
H+zd8wpudvzWbYeAcRpQWgccIPCY/KuDAy9HGjoWmg738u5NW8ZcLx7DMRnD
DnDO3/b1jqKhKrPg8NE7+g8TBCkdGRiaNvZECzpBvOM/6uuMcKcFcJ3q6iDc
+S+5q9uhRcDsymxQcd9bR36FO9r/N0++kfnPlN44KVupLavuxM9De90uydYK
SEOrJ6Dp52Wbh0Yg4fDfU7riBJvjWJRgr35JpjmAcOzRR17DMiV0tR1aBF5V
OU+S6Wio3+2SV81zkvw8ZXjT+of33fN92jqWJK2rBgaIl8W01gEo5zJQHQni
NkATBMPK+ZKv/QwGKgLrSdKzv6eSEC+BfsPcoyFcIzHrPD7GGJJyhQ8cmtZK
YiUcO9PZHlQSGDah9Hx3wiCdcnWhK6YV6q8CE0CukmiEja1zlT3x9jThClR1
MRj5ZE8Xib3jnTWwGsYnedddCIfHO0qEHEcR9+svMycN2CjoZE+nVqn+vwbG
Q640KGmFY8HvOzj2NgPeV8v1VnYroD9cOqphQKTcuzdvOYiHuQpJYIs4/Vng
TuD4x491GnFbjZV1bUVqLZTiyE/RaFlHW7gypysfe6XQweW8/AA/yn0/SxGO
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
cfVXnd+H/VGfz5zz/2PA3mM=\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "[", "n_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"En", "[", "n", "]"}], "/", "M"}]}], ")"}], "^", "2"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"Z", "^", "2"}], "*", 
      RowBox[{"a", "^", "2"}]}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"r_", ",", "n_", ",", "k_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"r", "^", "gamma"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"lambda", "[", "n", "]"}]}], "*", "r"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1", "+", "gamma"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"En", "[", "n", "]"}], "/", "M"}]}], ")"}]}], "-", "k"}],
         ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}]}], 
     ")"}]}]}], ";", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"r_", ",", "n_", ",", "k_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"2", "*", 
       RowBox[{"M", "/", 
        RowBox[{"En", "[", "n", "]"}]}]}], "-", "1"}], "]"}], "*", 
    RowBox[{"r", "^", "gamma"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"lambda", "[", "n", "]"}]}], "*", "r"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1", "+", "gamma"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"En", "[", "n", "]"}], "/", "M"}]}], ")"}]}], "-", "k"}],
         ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"Hypergeometric1F1", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{"lambda", "[", "n", "]"}], "*", "r"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4233106223597255`*^9, 3.4233106238017254`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"1", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "/", 
  RowBox[{"f", "[", 
   RowBox[{"1", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400931595957155*^9, 3.400931603838488*^9}}],

Cell[BoxData[
 RowBox[{"-", "274.0683506328937`"}]], "Output",
 CellChangeTimes->{3.4009316041489344`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "[", "n_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"Energie", "[", "n", "]"}], "/", "M"}]}], ")"}], "^", 
      "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"Z", "^", "2"}], "*", 
      RowBox[{"a", "^", "2"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4233106308327255`*^9, 3.4233106481887255`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
     RowBox[{"2", "*", 
      RowBox[{"lambda", "[", "n", "]"}], "*", 
      RowBox[{
       RowBox[{"r", "/", "M"}], "/", "a"}]}]}], "]"}], "*", 
   RowBox[{"r", "^", "gamma"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"lambda", "[", "n", "]"}]}], "*", 
     RowBox[{
      RowBox[{"r", "/", "M"}], "/", "a"}]}], "]"}]}], "/.", 
  RowBox[{"n", "\[Rule]", "1"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"1.`15.954589770191005", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "1.956951336746898`*^-6"}], " ", "r"}]], " ", 
  SuperscriptBox["r", "0.9999733739684983`"]}]], "Output",
 CellChangeTimes->{3.4233106967317257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hypergeometric1F1", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"2", "*", "gamma"}], "+", "1"}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"lambda", "[", "n", "]"}], "*", 
        RowBox[{"r", "/", "a"}]}]}], "]"}], "*", 
     RowBox[{"r", "^", "gamma"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"lambda", "[", "n", "]"}]}], "*", 
       RowBox[{"r", "/", "a"}]}], "]"}]}], "/.", 
    RowBox[{"n", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "7.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4233102766537256`*^9, 3.4233102791117253`*^9}, {
  3.4233104439257255`*^9, 3.4233104512507257`*^9}, {3.423310483836725*^9, 
  3.4233105176087255`*^9}, {3.4233106685247254`*^9, 3.4233107150147257`*^9}, {
  3.423310810812725*^9, 3.4233108330027256`*^9}, {3.4233108809737253`*^9, 
  3.4233108813267255`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
l3OZn3lPOdotb2qBMq8819HTlP8HVGinMQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.4233106856717253`*^9, 3.423310715567725*^9}, {
   3.4233108193357253`*^9, 3.4233108336347256`*^9}, 3.4233108820217257`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4233104899877253`*^9, 3.4233104909867253`*^9}}],

Cell[CellGroupData[{

Cell["Randbedingungen", "Title",
 CellChangeTimes->{{3.4009456458298798`*^9, 3.400945652599614*^9}}],

Cell["r << 1", "Subtitle",
 CellChangeTimes->{{3.400945774544963*^9, 3.400945776387613*^9}}],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.400945633602298*^9, 3.400945637107338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{3.4009509680228176`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4233018431082864`*^9, 3.4233018442412863`*^9}, {
  3.4233176289537253`*^9, 3.4233176311897254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"3.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"5.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"6.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"7.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"8.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"9.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], ")"}]}],
    ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[InvisibleSpace]", "-", 
      FractionBox["1.`", 
       SqrtBox[
        RowBox[{"1.`", "\[InvisibleSpace]", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"10.`", "\[InvisibleSpace]", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Abs", "[", "k", "]"}]}]}], ")"}], "2"]]}]]]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.400958183137643*^9, 3.400987450312888*^9, 
  3.400988139804328*^9, 3.4009963465350275`*^9, 3.4233018448482866`*^9, 
  3.423317629298725*^9, 3.4233177685317254`*^9, 3.423320461404725*^9, 
  3.4233242425267253`*^9}]
}, Open  ]],

Cell[BoxData["e"], "Input",
 CellChangeTimes->{3.4233018464062862`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "En"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"En", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.400998443410186*^9, 3.4009984451326623`*^9}, {
   3.423284699790286*^9, 3.423284721651286*^9}, 3.423284777165286*^9, {
   3.4232935879292865`*^9, 3.4232935886502867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", "=", 
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", "En"}], "-", 
     SuperscriptBox["En", "2"]}]]}], ";", 
  RowBox[{"L", "=."}]}]], "Input",
 CellChangeTimes->{{3.423289168736286*^9, 3.4232892214042864`*^9}, {
  3.4232896554282866`*^9, 3.423289659196286*^9}, {3.4232898170272865`*^9, 
  3.423289850986286*^9}, {3.4232900960832863`*^9, 3.4232901006312866`*^9}, {
  3.4232901349332867`*^9, 3.4232901395832863`*^9}, {3.423290212474286*^9, 
  3.423290215295286*^9}, {3.4232902534652863`*^9, 3.423290277757286*^9}, {
  3.4232920292982864`*^9, 3.423292029790286*^9}, {3.4232953406012864`*^9, 
  3.4232953433082867`*^9}, {3.4233000547152863`*^9, 3.423300055231286*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", ":=", 
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"s", "+", "n"}], ")"}]}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], ",", 
      RowBox[{"b", "[", "n", "]"}]}], "}"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "x"}], "*", "L"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.400942218441538*^9, 3.4009422462415123`*^9}, {
   3.400942288612438*^9, 3.400942289854224*^9}, {3.40094492128804*^9, 
   3.40094492304056*^9}, {3.4009449752055693`*^9, 3.400944981094037*^9}, {
   3.4009984105529394`*^9, 3.4009984548165874`*^9}, 3.4009985537188015`*^9, 
   3.423238292328416*^9, {3.423238853878416*^9, 3.423238853886416*^9}, 
   3.423239239577416*^9, {3.4232848910312862`*^9, 3.423284924519286*^9}, {
   3.4232849771992865`*^9, 3.4232849816882863`*^9}, 3.4232850851192865`*^9, {
   3.4232851155442867`*^9, 3.4232851190892863`*^9}, {3.4232852166232862`*^9, 
   3.4232852212632866`*^9}, {3.4232853017872863`*^9, 
   3.4232853578722863`*^9}, {3.4232892646282864`*^9, 3.423289271078286*^9}, {
   3.4232893627742863`*^9, 3.4232893646142864`*^9}, {3.423289459573286*^9, 
   3.423289477290286*^9}, {3.4232895539352865`*^9, 3.4232895570812864`*^9}, {
   3.423289589026286*^9, 3.4232895935372863`*^9}, {3.4232896430552864`*^9, 
   3.4232896471262865`*^9}, {3.4232896828732862`*^9, 3.423289690217286*^9}, {
   3.4232931864002867`*^9, 3.4232931867642865`*^9}, {3.4232933927402864`*^9, 
   3.4232933979712863`*^9}, {3.4232935183082867`*^9, 
   3.4232935184332867`*^9}, {3.4232938797912865`*^9, 
   3.4232938801882863`*^9}, {3.4232940178962865`*^9, 3.423294019479286*^9}, {
   3.4232941035012865`*^9, 3.423294116802286*^9}, {3.4232945332152863`*^9, 
   3.4232945333412867`*^9}, {3.4232948585172863`*^9, 
   3.4232948605802865`*^9}, {3.423294935118286*^9, 3.4232949352202864`*^9}, {
   3.4232950774582863`*^9, 3.423295097413286*^9}, 3.4232952194922867`*^9, {
   3.4232953329192867`*^9, 3.4232953330772867`*^9}, {3.4233000393002863`*^9, 
   3.4233000398012867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"u", ",", "x"}], "]"}], "-", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", "x"}], "]"}]}], ")"}], "/", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"s", "-", "1"}], ")"}]}]}], "/", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "x"}], "*", "L"}], "]"}]}], "]"}], ",", "x"}], "]"}]}], 
  ";", 
  RowBox[{"g1", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4009421893997774`*^9, 3.4009422140652447`*^9}, {
   3.4009422958828926`*^9, 3.4009423156813617`*^9}, {3.4009423745359907`*^9, 
   3.400942376318554*^9}, {3.4009426337687488`*^9, 3.400942655179536*^9}, {
   3.400942688627632*^9, 3.4009428007588687`*^9}, {3.40094480687352*^9, 
   3.4009448593690047`*^9}, {3.4082554141736097`*^9, 
   3.4082554263010483`*^9}, {3.408255543259226*^9, 3.4082556087333727`*^9}, 
   3.4082556651845455`*^9, {3.423238293023416*^9, 3.423238295482416*^9}, {
   3.423238327753416*^9, 3.423238335934416*^9}, 3.423238869476416*^9, 
   3.4232392417704163`*^9, 3.4232849659912863`*^9, {3.4232850764362864`*^9, 
   3.423285093698286*^9}, {3.4232851442012863`*^9, 3.4232851451002865`*^9}, {
   3.423285231066286*^9, 3.4232852596082864`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", 
           RowBox[{"1", "+", "n"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "L"}], " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
            RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{"n", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "-", 
           RowBox[{"a", " ", "Z", " ", 
            RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"1", "+", "n"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"En", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{"L", " ", 
            RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "a"}], " ", "Z", " ", 
            RowBox[{"a", "[", "n", "]"}]}], "+", 
           RowBox[{"k", " ", 
            RowBox[{"b", "[", "n", "]"}]}], "-", 
           RowBox[{"n", " ", 
            RowBox[{"b", "[", "n", "]"}]}], "-", 
           RowBox[{"s", " ", 
            RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.408255426571437*^9, {3.408255547074712*^9, 3.408255608993747*^9}, 
   3.408255665795424*^9, {3.4232379408044157`*^9, 3.423237948636416*^9}, {
   3.4232382970284157`*^9, 3.423238306130416*^9}, 3.423238337419416*^9, {
   3.423238855182416*^9, 3.4232388700204163`*^9}, {3.423239242239416*^9, 
   3.4232392446064157`*^9}, 3.4232847423482866`*^9, 3.423284778408286*^9, 
   3.4232849281382866`*^9, {3.4232849667862864`*^9, 3.4232849877582865`*^9}, {
   3.4232850786762867`*^9, 3.4232851459002867`*^9}, {3.423285226231286*^9, 
   3.4232852599612865`*^9}, {3.4232853081562862`*^9, 3.4232853591492863`*^9}, 
   3.423289234526286*^9, 3.4232892728202868`*^9, 3.4232893660432863`*^9, 
   3.4232894792782865`*^9, 3.4232895587672863`*^9, 3.4232895956552863`*^9, {
   3.4232896482442865`*^9, 3.423289691170286*^9}, 3.4232901037022867`*^9, 
   3.423290216842286*^9, 3.4232905135912867`*^9, 3.423292035790286*^9, 
   3.423293190566286*^9, 3.4232934030162864`*^9, 3.4232935194622865`*^9, 
   3.4232935906272864`*^9, 3.423293887420286*^9, 3.4232940224752865`*^9, {
   3.4232941056142864`*^9, 3.4232941189622865`*^9}, 3.4232945364382863`*^9, 
   3.4232948730482864`*^9, 3.4232949410252867`*^9, 3.4232950380622864`*^9, {
   3.4232950818182864`*^9, 3.4232951103862867`*^9}, {3.4232952203242865`*^9, 
   3.4232952244832864`*^9}, {3.4232953384142866`*^9, 
   3.4232953474372864`*^9}, {3.4233000420102863`*^9, 3.423300056526286*^9}, 
   3.4233136677037253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"g1", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "n2"}], "}"}]}], "]"}], "/", 
          RowBox[{"n2", "!"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n2", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"g2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4232389609104156`*^9, 3.423238967189416*^9}, {
  3.4232852656432867`*^9, 3.4232852736552863`*^9}, {3.4232853682892866`*^9, 
  3.4232853713152866`*^9}, {3.4232951120652866`*^9, 3.4232951131992865`*^9}}],\


Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "k"}], " ", 
        RowBox[{"a", "[", "0", "]"}]}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"a", "[", "0", "]"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"b", "[", "0", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "a"}], " ", "Z", " ", 
        RowBox[{"a", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", "s"}], ")"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"a", "[", "0", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "k", "+", "s"}], ")"}], " ", 
        RowBox[{"a", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "[", "0", "]"}]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"b", "[", "1", "]"}]}]}], 
      RowBox[{
       RowBox[{"En", " ", 
        RowBox[{"a", "[", "0", "]"}]}], "-", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"a", "[", "1", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"b", "[", "0", "]"}]}], "-", 
       RowBox[{"b", "[", "1", "]"}], "+", 
       RowBox[{"k", " ", 
        RowBox[{"b", "[", "1", "]"}]}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"b", "[", "1", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"a", "[", "1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "k", "+", "s"}], ")"}], " ", 
        RowBox[{"a", "[", "2", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "[", "1", "]"}]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"b", "[", "2", "]"}]}]}], 
      RowBox[{
       RowBox[{"En", " ", 
        RowBox[{"a", "[", "1", "]"}]}], "-", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"a", "[", "2", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"b", "[", "1", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{"k", " ", 
        RowBox[{"b", "[", "2", "]"}]}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"b", "[", "2", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"a", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "+", "k", "+", "s"}], ")"}], " ", 
        RowBox[{"a", "[", "3", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "[", "2", "]"}]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"b", "[", "3", "]"}]}]}], 
      RowBox[{
       RowBox[{"En", " ", 
        RowBox[{"a", "[", "2", "]"}]}], "-", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"a", "[", "3", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"b", "[", "2", "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{"k", " ", 
        RowBox[{"b", "[", "3", "]"}]}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"b", "[", "3", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"a", "[", "3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "+", "k", "+", "s"}], ")"}], " ", 
        RowBox[{"a", "[", "4", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "[", "3", "]"}]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"b", "[", "4", "]"}]}]}], 
      RowBox[{
       RowBox[{"En", " ", 
        RowBox[{"a", "[", "3", "]"}]}], "-", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"a", "[", "4", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"b", "[", "3", "]"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{"k", " ", 
        RowBox[{"b", "[", "4", "]"}]}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"b", "[", "4", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"a", "[", "4", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"5", "+", "k", "+", "s"}], ")"}], " ", 
        RowBox[{"a", "[", "5", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"b", "[", "4", "]"}]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"b", "[", "5", "]"}]}]}], 
      RowBox[{
       RowBox[{"En", " ", 
        RowBox[{"a", "[", "4", "]"}]}], "-", 
       RowBox[{"a", " ", "Z", " ", 
        RowBox[{"a", "[", "5", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"b", "[", "4", "]"}]}], "-", 
       RowBox[{"5", " ", 
        RowBox[{"b", "[", "5", "]"}]}], "+", 
       RowBox[{"k", " ", 
        RowBox[{"b", "[", "5", "]"}]}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"b", "[", "5", "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4232383462974157`*^9, {3.4232388674074163`*^9, 3.423238870773416*^9}, {
   3.423238963707416*^9, 3.423238967443416*^9}, 3.423239245196416*^9, 
   3.423284743295286*^9, 3.423284778913286*^9, 3.423284994165286*^9, 
   3.4232850993062863`*^9, {3.4232851363672867`*^9, 3.4232851471402864`*^9}, {
   3.4232852276202865`*^9, 3.4232852739322863`*^9}, {3.4232853101242867`*^9, 
   3.4232853718122864`*^9}, 3.423289236290286*^9, 3.4232892744032865`*^9, 
   3.423289367467286*^9, 3.4232894839912863`*^9, {3.4232895628052864`*^9, 
   3.4232895686692867`*^9}, 3.4232895987002864`*^9, {3.4232896612612867`*^9, 
   3.423289691755286*^9}, 3.4232901047372866`*^9, 3.4232902182922864`*^9, 
   3.4232905140132866`*^9, 3.4232920364212866`*^9, 3.4232932221082864`*^9, 
   3.4232934358992863`*^9, 3.4232935202212863`*^9, 3.4232935914402866`*^9, 
   3.4232940245792866`*^9, {3.4232941065682864`*^9, 3.4232941198032866`*^9}, 
   3.423294556321286*^9, {3.4232950066152864`*^9, 3.423295022849286*^9}, 
   3.423295091104286*^9, 3.423295172184286*^9, {3.4232952207492867`*^9, 
   3.4232952248012867`*^9}, 3.4232954243582864`*^9, {3.4233000425882864`*^9, 
   3.4233000570572863`*^9}, 3.423313668640725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], "-", "k"}], ",", 
      RowBox[{"a", " ", "Z"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", "Z"}], ",", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "k"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.423238886036416*^9, 3.423238927916416*^9}, {
  3.4232392525464163`*^9, 3.4232392550984163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["k", "2"]}], "+", 
  SuperscriptBox["s", "2"], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["Z", "2"]}]}]], "Output",
 CellChangeTimes->{3.423285162479286*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4233217626607256`*^9, 3.423321763416725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g4", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s", "-", "k"}], ")"}], ",", 
         RowBox[{"-", "a"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"(", 
          RowBox[{"n", "+", "s", "+", "k"}], ")"}]}], "}"}]}], "}"}], "]"}], 
    ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"-", "En"}], "+", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"En", ",", "L"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.423239640183416*^9, 3.423239696373416*^9}, {
   3.423241057064416*^9, 3.4232411345284157`*^9}, {3.4232413078294163`*^9, 
   3.423241313788416*^9}, 3.423241373025416*^9, {3.423241480121416*^9, 
   3.423241509301416*^9}, {3.4232420881864157`*^9, 3.423242106523416*^9}, {
   3.4232847622852864`*^9, 3.4232847721122866`*^9}, {3.4232897107752867`*^9, 
   3.4232897837342863`*^9}, {3.4232898642372866`*^9, 3.4232898649972863`*^9}, 
   3.4232899029022865`*^9, {3.4232899446002865`*^9, 3.4232899453332863`*^9}, {
   3.4232920668312864`*^9, 3.4232921410982866`*^9}, {3.423292313552286*^9, 
   3.4232923161562862`*^9}, {3.4232935551692867`*^9, 
   3.4232935553032866`*^9}, {3.4232936051502867`*^9, 
   3.4232936052352867`*^9}, {3.4232941272452865`*^9, 
   3.4232941838252864`*^9}, {3.4233147811587257`*^9, 3.4233148114587255`*^9}, 
   3.423315885402725*^9, {3.4233217578687253`*^9, 3.4233217598027253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", "En"}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       SuperscriptBox["k", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}], "2"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "k"}], "+", 
       RowBox[{"a", " ", "L"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       SuperscriptBox["k", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "a"}], " ", "L"}], "+", 
       RowBox[{"En", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       SuperscriptBox["k", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}], "2"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       SuperscriptBox["k", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.4232920675682864`*^9, 3.4232920778252864`*^9}, 
   3.4232921428462863`*^9, 3.4232922279072866`*^9, 3.4232923168252864`*^9, {
   3.423293247005286*^9, 3.4232932625762863`*^9}, 3.4232935654572864`*^9, 
   3.4232936230702868`*^9, 3.423294184097286*^9, {3.4232943599572864`*^9, 
   3.423294369361286*^9}, {3.4233000667582865`*^9, 3.423300094698286*^9}, 
   3.4233002568362865`*^9, {3.423314800687725*^9, 3.4233148116757255`*^9}, 
   3.4233158856677256`*^9, 3.4233173976827254`*^9, {3.4233217601027255`*^9, 
   3.423321765173725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"L", "=", 
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", "En"}], "-", 
     SuperscriptBox["En", "2"]}]]}], ";", 
  RowBox[{"g5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Eigenvalues", "[", "g4", "]"}], "]"}]}], ";", "g5"}]], "Input",
 CellChangeTimes->{{3.4232943631072865`*^9, 3.4232943746282864`*^9}, {
   3.4233000708042865`*^9, 3.4233000917492867`*^9}, {3.4233001709772863`*^9, 
   3.4233001719572864`*^9}, {3.4233002407322865`*^9, 
   3.4233002893012867`*^9}, {3.423300455045286*^9, 3.4233004855612864`*^9}, 
   3.4233158157037253`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["a", "2"], "-", 
     SuperscriptBox["k", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4232943752212863`*^9, {3.4232944099252863`*^9, 3.4232944285162864`*^9}, 
   3.4232946087602863`*^9, {3.423300068045286*^9, 3.4233000922542863`*^9}, 
   3.4233001723412867`*^9, {3.4233002412342863`*^9, 3.423300289750286*^9}, 
   3.4233004863792863`*^9, 3.4233154601317253`*^9, {3.4233158127627254`*^9, 
   3.4233158158877254`*^9}, 3.423315887423725*^9, 3.4233173979227257`*^9, 
   3.423321766902725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["a", "2"], "-", 
     SuperscriptBox["k", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}], "2"]}]], "/.", 
   RowBox[{"s", "\[Rule]", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"k", "^", "2"}], "-", 
      RowBox[{"a", "^", "2"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4233247972977257`*^9, 3.4233248247877254`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}]], "+", "n"}], ")"}]}]}], ")"}]}], 
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["a", "2"]}], "+", 
        SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.4233248054127254`*^9, 3.4233248256317253`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g6", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Eigenvectors", "[", "g4", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4233156375907254`*^9, 3.4233156473287253`*^9}, {
  3.4233156869387255`*^9, 3.4233156894367256`*^9}, {3.4233158283097253`*^9, 
  3.423315844883725*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"a", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "a"}], " ", "En"}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"k", "-", "n", "-", "s"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"a", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], "-", 
       RowBox[{"En", " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4233158451067257`*^9, 3.4233158886227255`*^9, 
  3.4233173997547255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T1", ",", "T2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.423317900777725*^9, 3.4233179106187253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"T1", "-", "T2"}]], ",", 
     RowBox[{"-", 
      FractionBox["T2", 
       RowBox[{"T1", "-", "T2"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"T1", "-", "T2"}]]}], ",", 
     FractionBox["T1", 
      RowBox[{"T1", "-", "T2"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4233179108527255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"Inverse", "[", "g6", "]"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4233173743897257`*^9, 3.4233173794347253`*^9}, {
  3.4233174430447254`*^9, 3.4233174460847254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", "En"}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "En"}], ")"}]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.4233173797297254`*^9, 3.423317406857725*^9}, 
   3.4233174463377256`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4233193175507255`*^9, 3.423319318442725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", "En"}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}]], "/", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", "En"}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}]], "/.", 
     RowBox[{"n", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}]}], ")"}]}], "*", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       RowBox[{"(", 
        RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["a", "2"], "-", 
    SuperscriptBox["k", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}]], "Input",
 CellChangeTimes->{{3.4233174543157253`*^9, 3.4233174855827255`*^9}, {
  3.4233193025517254`*^9, 3.4233193106227255`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.0072973525376`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n", "+", "s"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.0072973525376`", " ", "En"}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n", "+", "s"}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.0072973525376`", " ", "En"}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.999946748645942`"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.4233174864197254`*^9, 3.4233193137637253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Inverse", "[", "g6", "]"}], ".", "g4", ".", "g6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4233085801012754`*^9, 3.423308582456276*^9}, {
  3.4233154761887255`*^9, 3.4233154976717253`*^9}, {3.4233156075307255`*^9, 
  3.4233157113797255`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "En"}], ")"}], "2"]}], "+", 
         RowBox[{"2", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "En"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", "s"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "En", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"n", "+", "s"}], ")"}], "2"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "-", 
         SuperscriptBox["k", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", "s"}], ")"}], "2"]}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4233157174797254`*^9, {3.423315820798725*^9, 3.4233158359197254`*^9}, 
   3.423315892527725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"n", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", "En"}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}]], "/", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"a", " ", "En"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "k"}], "+", "n", "+", "s"}], ")"}]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            
            RowBox[{"(", 
             RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}]], "/.", 
       RowBox[{"n", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}], ")"}]}], "*", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["a", "2"], "-", 
      SuperscriptBox["k", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "s"}], ")"}], "2"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.423308569621276*^9, 3.4233085946042757`*^9}, {
   3.423316762015725*^9, 3.4233167689087257`*^9}, {3.4233174970407257`*^9, 
   3.4233174991057253`*^9}, 3.4233193224337254`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4233085776862755`*^9, 3.4233085948982754`*^9}, {
   3.423316763161725*^9, 3.4233167692297254`*^9}, 3.423317499911725*^9, 
   3.423319324397725*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.000026626031501830738`", ",", "6.656530030069163`*^-6", ",", 
   "2.958447944512166`*^-6", ",", "1.6641228148817078`*^-6", ",", 
   "1.0650367227027502`*^-6", ",", "7.39607883493143`*^-7", ",", 
   "5.433848546676501`*^-7", ",", "4.1602871314605494`*^-7", ",", 
   "3.2871384492150213`*^-7", ",", "2.6625808169367104`*^-7"}], 
  "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n", "+", "s"}], ")"}]}]}], ")"}], " ",
          
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
            RowBox[{"(", 
             RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}], ")"}]}], 
        "\[Equal]", "0"}], ",", "En"}], "]"}]}], "M"}], "/.", 
   RowBox[{"s", "->", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"k", "^", "2"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}]}], "/.", 
  RowBox[{"n", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.423317601744725*^9, 3.4233176233807254`*^9}, {
  3.4233176958857255`*^9, 3.4233177636237254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.047045754949315`", ",", "1.02199782`*^6", ",", "1.511763674974168`", ",",
    "1.0219963082363249`*^6"}], "}"}]], "Output",
 CellChangeTimes->{{3.423317573482725*^9, 3.4233176026707253`*^9}, 
   3.4233176405507255`*^9, {3.4233176968517256`*^9, 3.423317764041725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Energie", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"10", "+", "5"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4233204662997255`*^9, 3.4233204770077257`*^9}, {
  3.4233210843397255`*^9, 3.4233211106767254`*^9}, {3.4233212457427254`*^9, 
  3.4233212531847253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605329690716324`", ",", "3.4014116644210297`", ",", 
   "1.5117435488223143`", ",", "0.8503564537881296`", ",", 
   "0.5442282572437317`", ",", "0.37793630655637633`", ",", 
   "0.27766748414015074`", ",", "0.2125891577123904`", ",", 
   "0.16797167110816053`", ",", "0.1360570461424217`", ",", 
   "0.11244383397136383`", ",", "0.09448405041459972`", ",", 
   "0.08050711632288264`", ",", "0.06941684749114334`", ",", 
   "0.06046978492191807`"}], "}"}]], "Output",
 CellChangeTimes->{{3.4233204708997254`*^9, 3.4233204772567253`*^9}, {
   3.4233210846837254`*^9, 3.4233211108447256`*^9}, 3.4233212535177255`*^9, {
   3.423321353022725*^9, 3.4233213629787254`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4233212939457254`*^9, 3.4233213211157255`*^9}, {
   3.4233213557607255`*^9, 3.4233213600307255`*^9}, 3.4233214214227257`*^9, 
   3.423321667496725*^9, 3.4233237483157253`*^9, {3.4233237826797256`*^9, 
   3.4233238131107254`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"M", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], "+", 
            SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
         SuperscriptBox["n", "2"], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "4"], "+", 
           RowBox[{
            SuperscriptBox["n", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["a", "2"]}], "+", 
                 SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["a", "2"]}], "+", 
                 SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", "2"], "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["a", "2"]}], "+", 
                    SuperscriptBox["k", "2"]}]]}], "+", 
                 RowBox[{"5", " ", "n"}]}], ")"}]}]}], ")"}]}]}]]}], 
        RowBox[{
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["a", "2"]}], "+", 
               SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]}]], ")"}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "6", ",", 
       RowBox[{"9", "+", "5"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Exit", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4233215754007254`*^9, 3.423321585963725*^9}, {
  3.4233216569797254`*^9, 3.4233216908097253`*^9}, {3.4233240675697255`*^9, 
  3.4233240684397254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.4013663806170387`", ",", "1.5117301316316702`", ",", 
   "0.850350793321827`", ",", "0.5442253593841694`", ",", 
   "0.37793462931552474`", ",", "0.27766642798415864`", ",", 
   "0.21258844999632226`", ",", "0.16797117411341247`", ",", 
   "0.1360566840131204`"}], "}"}]], "Output",
 CellChangeTimes->{{3.4233215836047254`*^9, 3.4233215861567254`*^9}, {
   3.4233216579207253`*^9, 3.423321691147725*^9}, 3.423324068897725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"k", ">", "0"}]}]], "Input",
 CellChangeTimes->{{3.4233243677927256`*^9, 3.4233243803077254`*^9}, {
  3.4233244239287252`*^9, 3.4233244321347256`*^9}}],

Cell[BoxData[
 RowBox[{"k", ">", "0"}]], "Output",
 CellChangeTimes->{
  3.423324380713725*^9, {3.4233244262527256`*^9, 3.4233244322857256`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Energie", "[", "n", "]"}], "/", "M"}], "/.", 
     RowBox[{"Z", "\[Rule]", "1"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4233242467637253`*^9, 3.4233242788557253`*^9}, {
  3.4233243843747253`*^9, 3.4233243883707256`*^9}, {3.423324438310725*^9, 
  3.4233244415807257`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox["n", "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "k"}], "+", 
       RowBox[{"4", " ", "n"}]}], ")"}], " ", 
     SuperscriptBox["a", "4"]}], 
    RowBox[{"8", " ", "k", " ", 
     SuperscriptBox["n", "4"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "a", "]"}], "5"],
    SeriesData[$CellContext`a, 0, {}, 2, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`a, 0, {
   Rational[1, 2] $CellContext`n^(-2), 0, 
    Rational[1, 
      8] $CellContext`k^(-1) $CellContext`n^(-4) ((-3) $CellContext`k + 
     4 $CellContext`n)}, 2, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4233242570207253`*^9, 3.4233242792307253`*^9}, {
  3.423324381515725*^9, 3.423324388652725*^9}, {3.4233244272807255`*^9, 
  3.423324441777725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"1", "-", 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k", "2"], "+", 
           RowBox[{"n", " ", "2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["a", "2"]}], "+", 
              SuperscriptBox["k", "2"]}]]}], "+", 
           RowBox[{"n", "^", "2"}]}], ")"}]}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "4"}], "}"}]}], "]"}], "/.", 
   RowBox[{"n", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"n", "-", "k"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.423324220836725*^9, 3.423324269673725*^9}, {
  3.4233243912017255`*^9, 3.4233244167087255`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox["n", "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "k"}], "+", 
       RowBox[{"4", " ", "n"}]}], ")"}], " ", 
     SuperscriptBox["a", "4"]}], 
    RowBox[{"8", " ", "k", " ", 
     SuperscriptBox["n", "4"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "a", "]"}], "5"],
    SeriesData[$CellContext`a, 0, {}, 2, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`a, 0, {
   Rational[1, 2] $CellContext`n^(-2), 0, 
    Rational[1, 
      8] $CellContext`k^(-1) $CellContext`n^(-4) ((-3) $CellContext`k + 
     4 $CellContext`n)}, 2, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4233242364547253`*^9, 3.4233242699777255`*^9}, {
  3.4233243936367254`*^9, 3.4233244335927258`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", "4"}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"M", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"a", "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            RowBox[{"n", " ", "2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["a", "2"]}], "+", 
               SuperscriptBox["k", "2"]}]]}], "+", 
            RowBox[{"n", "^", "2"}]}], ")"}]}]}]]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", 
      RowBox[{"9", "+", "5"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.423321092437725*^9, 3.423321276593725*^9}, {
  3.4233213507217255`*^9, 3.4233214343997254`*^9}, {3.4233215422527256`*^9, 
  3.4233215597357254`*^9}, {3.423323744746725*^9, 3.423323826975725*^9}, {
  3.4233238814677258`*^9, 3.4233239202837257`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"n", " ", "2", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], "+", 
            SuperscriptBox["k", "2"]}]]}], "+", 
         RowBox[{"n", "^", "2"}]}], ")"}]}]}]]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"M", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       RowBox[{
        SuperscriptBox["k", "2"], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
        SuperscriptBox["n", "2"]}]]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.423321095357725*^9, 3.4233214345787253`*^9}, {
  3.4233215426037254`*^9, 3.4233215599477253`*^9}, {3.4233237506627254`*^9, 
  3.4233238271467257`*^9}, {3.4233238829127254`*^9, 3.4233239204527254`*^9}, {
  3.423324065482725*^9, 3.4233240710787253`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}]}]], "-", 
      RowBox[{"Abs", "[", "k", "]"}]}], ")"}], "^", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4233210300827255`*^9, 3.4233210551627254`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k", "2"], "+", 
  SuperscriptBox["n", "2"], "-", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["Z", "2"]}], "+", 
  RowBox[{"2", " ", "n", " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["k", "2"], "-", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["Z", "2"]}]}]]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"n", "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["k", "2"], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]]}], ")"}], " ", 
   RowBox[{"Abs", "[", "k", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "k", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.4233210323797255`*^9, 3.4233210553847256`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.423321639607725*^9, 3.4233216407737255`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           RowBox[{"(", 
            RowBox[{"n", "+", "s"}], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        SuperscriptBox["k", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"n", "+", "s"}], ")"}], "2"]}]], "==", "0"}], ",", "En"}], 
    "]"}], "/.", 
   RowBox[{"s", "->", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"k", "^", "2"}], "-", 
      RowBox[{"a", "^", "2"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4233203981887255`*^9, 3.4233204334257255`*^9}, {
  3.4233204817267256`*^9, 3.4233204853067255`*^9}, {3.4233206051257257`*^9, 
  3.4233206067757254`*^9}, {3.4233216345047255`*^9, 3.4233216352547255`*^9}, {
  3.4233218090077257`*^9, 3.423321812357725*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"En", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
       SuperscriptBox["n", "2"], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k", "4"], "+", 
         RowBox[{
          SuperscriptBox["n", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["a", "2"]}], "+", 
               SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["a", "2"]}], "+", 
               SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["a", "2"]}], "+", 
                  SuperscriptBox["k", "2"]}]]}], "+", 
               RowBox[{"5", " ", "n"}]}], ")"}]}]}], ")"}]}]}]]}], 
      RowBox[{
       SuperscriptBox["k", "2"], "+", 
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["a", "2"]}], "+", 
             SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]}]]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"En", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
       SuperscriptBox["n", "2"], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k", "4"], "+", 
         RowBox[{
          SuperscriptBox["n", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["a", "2"]}], "+", 
               SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["a", "2"]}], "+", 
               SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["a", "2"]}], "+", 
                  SuperscriptBox["k", "2"]}]]}], "+", 
               RowBox[{"5", " ", "n"}]}], ")"}]}]}], ")"}]}]}]]}], 
      RowBox[{
       SuperscriptBox["k", "2"], "+", 
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["a", "2"]}], "+", 
             SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]}]]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.4233204181967254`*^9, 3.4233204343887253`*^9}, 
   3.4233204863297253`*^9, 3.423320608284725*^9, {3.423321636850725*^9, 
   3.423321643253725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["k", "4"], "+", 
     RowBox[{
      SuperscriptBox["n", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["k", "2"], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}]]}], "+", 
        RowBox[{"3", " ", "n"}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["a", "2"]}], "+", 
              SuperscriptBox["k", "2"]}]]}], "+", 
           RowBox[{"5", " ", "n"}]}], ")"}]}]}], ")"}]}]}]], 
   RowBox[{
    SuperscriptBox["k", "2"], "+", 
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.4233206486517253`*^9, 3.4233206496777253`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["k", "4"], "+", 
     RowBox[{
      SuperscriptBox["n", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["k", "2"], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}]]}], "+", 
        RowBox[{"3", " ", "n"}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["a", "2"]}], "+", 
              SuperscriptBox["k", "2"]}]]}], "+", 
           RowBox[{"5", " ", "n"}]}], ")"}]}]}], ")"}]}]}]], 
   RowBox[{
    SuperscriptBox["k", "2"], "+", 
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.4233206499607253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox["k", "4"], "+", 
   RowBox[{
    SuperscriptBox["n", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "2"]}], "+", 
         SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["k", "2"], " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "2"]}], "+", 
         SuperscriptBox["k", "2"]}]]}], "+", 
      RowBox[{"3", " ", "n"}]}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k", "2"], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], "+", 
            SuperscriptBox["k", "2"]}]]}], "+", 
         RowBox[{"5", " ", "n"}]}], ")"}]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4233207147787256`*^9, 3.423320716220725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a", "2"]}], " ", 
   SuperscriptBox["k", "2"]}], "+", 
  SuperscriptBox["k", "4"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "2"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], "+", 
     SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["k", "2"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], "+", 
     SuperscriptBox["k", "2"]}]], " ", "n"}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["n", "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["n", "2"]}], "+", 
  RowBox[{"4", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], "+", 
     SuperscriptBox["k", "2"]}]], " ", 
   SuperscriptBox["n", "3"]}], "+", 
  SuperscriptBox["n", "4"]}]], "Output",
 CellChangeTimes->{3.4233207164697256`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["k", "2"], "+", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["k", "2"]}]]}], "+", "n"}], ")"}]}]}], ")"}], "^", 
   "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4233205163587255`*^9, 3.4233205406507254`*^9}, {
  3.4233206588337255`*^9, 3.4233207058207254`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k", "4"], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["k", "2"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], "+", 
     SuperscriptBox["k", "2"]}]], " ", "n"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["n", "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["n", "2"]}], "+", 
  RowBox[{"4", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], "+", 
     SuperscriptBox["k", "2"]}]], " ", 
   SuperscriptBox["n", "3"]}], "+", 
  SuperscriptBox["n", "4"], "-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], " ", 
     SuperscriptBox["k", "2"]}], "+", 
    SuperscriptBox["k", "4"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["k", "2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       SuperscriptBox["k", "2"]}]], " ", "n"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["n", "2"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["n", "2"]}], "+", 
    RowBox[{"4", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       SuperscriptBox["k", "2"]}]], " ", 
     SuperscriptBox["n", "3"]}], "+", 
    SuperscriptBox["n", "4"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.4233205276837254`*^9, 3.4233205408627253`*^9}, {
  3.4233206642357254`*^9, 3.4233207075877256`*^9}, {3.4233207405247254`*^9, 
  3.4233207484227257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["k", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "2"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a", "2"]}], "+", 
     SuperscriptBox["k", "2"]}]], " ", "n"}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["n", "2"]}]}]], "Output",
 CellChangeTimes->{3.4233207487217255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "En"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n", "+", "s"}], ")"}]}]}], ")"}], " ",
          
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], " ", 
            RowBox[{"(", 
             RowBox[{"k", "+", "n", "+", "s"}], ")"}]}]}], ")"}]}], 
        "\[Equal]", "0"}], ",", "En"}], "]"}]}], "*", "M"}], "/.", 
   RowBox[{"s", "->", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"k", "^", "2"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}]}], "/.", 
  RowBox[{"n", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.4232956032732863`*^9, 3.4232956088152866`*^9}, {
  3.4233004994652863`*^9, 3.4233005067152863`*^9}, {3.4233006212252865`*^9, 
  3.4233006649622865`*^9}, {3.4233006959302864`*^9, 3.4233007465112867`*^9}, {
  3.4233009041122866`*^9, 3.423300987757286*^9}, {3.4233018396612864`*^9, 
  3.423301872769286*^9}, {3.4233019047072864`*^9, 3.4233019062412863`*^9}, {
  3.423301946604286*^9, 3.4233019468532867`*^9}, {3.423316692687725*^9, 
  3.4233167309647255`*^9}, {3.4233175048307257`*^9, 3.423317508970725*^9}, {
  3.4233175696847253`*^9, 3.423317570718725*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "M"}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", "M"}], 
    RowBox[{"4", "+", 
     SuperscriptBox["a", "2"], "+", 
     RowBox[{"4", " ", "k"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["k", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["Z", "2"]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}]}]]}], "+", 
     RowBox[{"2", " ", "k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
   FractionBox[
    RowBox[{"M", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"]}], "+", 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}]]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}], ")"}]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}], "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"]}], "-", 
            RowBox[{"4", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}], ")"}]}]}], ")"}], "2"]}]]}], 
      ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"M", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"]}], "+", 
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}]]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}], "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"]}], "-", 
            RowBox[{"4", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}], ")"}]}]}], ")"}], "2"]}]]}], 
      ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4232956096032867`*^9, {3.4233004921102867`*^9, 3.4233005077662864`*^9}, {
   3.4233006219942865`*^9, 3.4233006657282867`*^9}, {3.423300711512286*^9, 
   3.423300747203286*^9}, {3.4233009478152866`*^9, 3.4233009882182865`*^9}, {
   3.4233018576572866`*^9, 3.4233018730872865`*^9}, 3.423301906816286*^9, {
   3.423301944196286*^9, 3.4233019473432865`*^9}, {3.4233166935067253`*^9, 
   3.4233167317507257`*^9}, 3.423317565062725*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.4009458192492447`*^9, 3.4009458408803487`*^9}, {
   3.400946842951256*^9, 3.4009468433918896`*^9}, 3.4009470024005327`*^9, {
   3.400947078089368*^9, 3.4009470799320173`*^9}, {3.4009472019775105`*^9, 
   3.4009472065040193`*^9}, 3.4009473566999903`*^9, {3.4009479809275856`*^9, 
   3.400947981358205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"En", "=."}], ";", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Z", "*", 
         RowBox[{"a", "/", "En"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s", "-", "k"}], ")"}], "/", "En"}]}], "}"}], ",",
       
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s", "+", "k"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "-", "En"}], ")"}]}], ",", 
        RowBox[{"Z", "*", 
         RowBox[{"a", "/", 
          RowBox[{"(", 
           RowBox[{"En", "-", "2"}], ")"}]}]}]}], "}"}]}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S", "[", 
    RowBox[{"n_", ",", "En_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "En", " ", "Z"}], 
        RowBox[{
         SuperscriptBox["n", "2"], "+", 
         RowBox[{"2", " ", "n", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "k"}], "+", "n", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", "n", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DS", "[", 
    RowBox[{"n_", ",", "En_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "Z"}], 
        RowBox[{
         SuperscriptBox["n", "2"], "+", 
         RowBox[{"2", " ", "n", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "+", "n", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}], ")"}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"(", 
         RowBox[{"k", "+", "n", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}], ")"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
       FractionBox[
        RowBox[{"a", " ", "Z"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"m", ",", "En"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DS", "[", 
   RowBox[{"m", ",", "En"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4009468289010525`*^9, 3.4009468303230977`*^9}, {
   3.4009468999331923`*^9, 3.400946913452632*^9}, {3.400946971355893*^9, 
   3.400946993698019*^9}, {3.400947041286448*^9, 3.400947084518613*^9}, {
   3.4009471373946447`*^9, 3.4009471483003263`*^9}, {3.4009471948773007`*^9, 
   3.4009472099790163`*^9}, {3.4009472427361183`*^9, 
   3.4009473434609537`*^9}, {3.400947634449374*^9, 3.4009476433822193`*^9}, {
   3.400947679804592*^9, 3.400947760951275*^9}, {3.400947861706154*^9, 
   3.400947876186976*^9}, {3.4009481236428003`*^9, 3.400948156510061*^9}, {
   3.400949902150168*^9, 3.400949941426645*^9}, {3.40094997856004*^9, 
   3.400950000541648*^9}, {3.400952221485208*^9, 3.400952256385392*^9}, {
   3.4009908809859533`*^9, 3.4009908830989923`*^9}, {3.4009909374871984`*^9, 
   3.400990978365979*^9}, {3.4009961267590046`*^9, 3.40099613910676*^9}, 
   3.408257415911968*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", " ", "En", " ", "Z"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"k", "-", "n", "-", "s"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"En", " ", 
       RowBox[{"(", 
        RowBox[{"k", "+", "n", "+", "s"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["n", "2"], "+", 
       RowBox[{"2", " ", "n", " ", "s"}], "+", 
       SuperscriptBox["s", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.400990865754051*^9, 3.4009908833894095`*^9}, {
   3.4009909817208033`*^9, 3.4009909927466574`*^9}, 3.4009961393971777`*^9, 
   3.408257416482789*^9, 3.423237972399416*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"a", " ", "En", " ", "Z"}], 
       RowBox[{
        SuperscriptBox["m", "2"], "+", 
        RowBox[{"2", " ", "m", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}]]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "+", "m", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{"En", " ", 
        RowBox[{"(", 
         RowBox[{"k", "+", "m", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.400990865754051*^9, 3.4009908833894095`*^9}, {
   3.4009909817208033`*^9, 3.4009909927466574`*^9}, 3.4009961393971777`*^9, 
   3.408257416482789*^9, 3.423237972460416*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"a", " ", "Z"}], 
       RowBox[{
        SuperscriptBox["m", "2"], "+", 
        RowBox[{"2", " ", "m", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}]]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "k"}], "+", "m", "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}]]}], 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{"k", "+", "m", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"]}]}]]}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"a", " ", "Z"}], 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.400990865754051*^9, 3.4009908833894095`*^9}, {
   3.4009909817208033`*^9, 3.4009909927466574`*^9}, 3.4009961393971777`*^9, 
   3.408257416482789*^9, 3.423237972517416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"n", ",", "En"}], "]"}], ".", "u"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"n", ",", "En"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"n", "+", "s"}]], " ", 
     RowBox[{"a", "[", "n", "]"}]}], ",", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"n", "+", "s"}]], " ", 
     RowBox[{"b", "[", "n", "]"}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.423241434629416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"UN", "[", 
   RowBox[{"R_", ",", "N_", ",", "En_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}]}],
       ",", 
      RowBox[{"U", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}], 
        "*", 
        RowBox[{"R", "^", "s"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", "1"}], ",", 
       RowBox[{"n", "<", "N"}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{
          RowBox[{"S", "[", 
           RowBox[{"n", ",", "En"}], "]"}], ".", "u"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"U", "+=", 
         RowBox[{"u", "*", 
          RowBox[{"R", "^", 
           RowBox[{"(", 
            RowBox[{"s", "+", "n"}], ")"}]}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "U"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400989632150216*^9, 3.400989712836237*^9}, {
   3.400989750600539*^9, 3.4009897537150173`*^9}, {3.400989833710045*^9, 
   3.400990001391158*^9}, {3.4009900408078365`*^9, 3.4009900664647293`*^9}, {
   3.4009901214538*^9, 3.4009901689120417`*^9}, {3.4009902380514593`*^9, 
   3.4009902600130386`*^9}, 3.4009906173368444`*^9, {3.4009961521955805`*^9, 
   3.4009961710226526`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "[", 
   RowBox[{"r_", ",", "g_", ",", "En_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}]}],
       ",", 
      RowBox[{"U", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"DU", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"du", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"n", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Label", "[", "begin", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"U", "+=", 
      RowBox[{"u", "*", 
       RowBox[{"r", "^", 
        RowBox[{"(", 
         RowBox[{"s", "+", "n"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DU", "+=", 
      RowBox[{"du", "*", 
       RowBox[{"r", "^", 
        RowBox[{"(", 
         RowBox[{"s", "+", "n"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"du", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"DS", "[", 
         RowBox[{"n", ",", "En"}], "]"}], ".", "u"}], "+", 
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{"n", ",", "En"}], "]"}], ".", "du"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"n", ",", "En"}], "]"}], ".", "u"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", "g"}], "  ", "||", 
           StyleBox[" ", "OperatorCharacter"], 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "g"}]}], ")"}], "&"}], "[", 
        
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"u", "*", 
           RowBox[{
            RowBox[{"R", "^", 
             RowBox[{"(", 
              RowBox[{"s", "+", "n"}], ")"}]}], "/", "U"}]}], "/.", 
          RowBox[{"r", "\[Rule]", "R"}]}], "]"}], "]"}], ",", 
       RowBox[{"Goto", "[", "begin", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "U", ",", "DU"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400991013005789*^9, 3.4009910301604557`*^9}, {
  3.4009911055989313`*^9, 3.4009911284417777`*^9}, {3.400991194717077*^9, 
  3.400991293408989*^9}, {3.400996176009824*^9, 3.4009961798453393`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "=", "1000"}], ";", 
  RowBox[{"g", "=", "0.01"}], ";", 
  RowBox[{"rU", "=", 
   RowBox[{"U", "[", 
    RowBox[{"r", ",", "g", ",", 
     RowBox[{"1", "/", "M"}]}], "]"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rU", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"rU", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "*", "137"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "R"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400990548087269*^9, 3.4009905510114737`*^9}, {
  3.4009905908387423`*^9, 3.400990590958915*^9}, {3.4009906234856863`*^9, 
  3.40099071171255*^9}, {3.4009979119159346`*^9, 3.4009979897879086`*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
+xGZ
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1nc81d8fB3CjJTIqkkJGJRTulczrrWRHJGWPe62Q1ZBR5r33cykaCikj
mSkkq+KIrMqehYiKb0i25u/8/rqP5+PzeXzOOfe8z+t9JFx8LVw52NjYWtjZ
2P7/+23ut4me2yKFqh2cHuL2uTrg4SWybkaX9qPrihbuSXU1QdzTbtszxrTP
Jf3YQk3oqgmpzmZbkzGvfe1C5UJl+FjNnztRx1bTOWFD/odtL53na6rXzM3P
p2+Bp7xvgp2kOZGYxj79H+lSwLE9XeBOwWZk2ls/+z2dDL0p25TVayXQlY/2
1rxLZODezrP2+DpJVDSxVCtvrAwWsR6k3caSSOCXzE3PRWUoFI+U4+2WRN3i
Vw+OGaqA2FGK5fAnKWTjeTK4d04Vjpdyqicu7Ebuvz9zvtSlgCj553GDyX0o
ae0V7w/JFDjW4rQtdo8sauIV7lmdoUDMf+s9r1NlkayEUbZKsjY40WiKk4Oy
aFnylHT/BQBQiBlseiuHqvSfN5i/0YHJYx4TtIz9CK5HcR89pwsmc8v0i/GK
qHFYiMKRqgvd4SorObmKyFQ+36+mThcelFk019QqIvvG9h61LUdhfzrx8uG8
Igr+I5p+oOQo5AzlHTOxUkKlnhXKwrN6kJ1d8pN3GwnJHJ62/+ZlCLKTd/4g
Ohk9iQ9PyL1pCFzrLS4tppKRytCWOtfnhrDv59/hzU/J6GiQuszIRiNQW1RN
2vCRjFweM+a684yAb5ejwOhBZZQqIsmo/moMJy6PMY9/VEYC81ZF16mmYFl4
cDZEQgWJ2UtYMlim4F7gfjJKWQXJN35bDi02hbub38+d11dBBnfDtT3+mULZ
ujR2UR8VdPlIfivlrhkoSKXeDSxXQUvNl5fOex6Ho7zxO0wMDiGqSOdWqQxz
kLJu11+wUUVnzMq/3Cs1hwBzaeOLXqrILzq1QrjJHNZ7L/R9CVFFl2fc7Hi/
m8OApXR5bKoqSnn168GqpgVYWD7Mnx5URe1ndpPb+y3gl6/98R02aojyPMg8
jN8SJg4X76DpqaNdnZOt93dbgtXlDs3qk+qIfdLGBKlbgt4htTkOV3VUL6Sl
z+lqCaX2g8YmUerIKIBdi6i0BNt81W0j1erIah9LJtHlJNxapo4JkTSQ7527
/x6VWgH7ver/hLg00fHHPGGtzVawzdrK84OgJiK9Dvv5fdgK+oZ0OOIkNdHS
nOMiiesUXBQILynW0EShptLfKuyxvwec4vfRRMy1hb31606D2+77q9JvNVF6
YHXh4GlrCF30b/0dooVWZyxkE72t4WP3ZHp+jBayOPM1+1i4NXCneTsZxGuh
Nc786dU51kA5KvHmRKYW8jB1uZG+ZA0BIo6mBY1aSHHfuou0WzbAPbl+lcZH
QURWyvzOXBv4fv3UkKAwBX0SV/DreW4D2at62uW7KOiW0GlPvTEb2Kv1KO2N
EgWtcObbypBsIc3A9o3GCQqqGT4GU222ELZrhalzk4KEbT69yBqzhdscV3z+
plCQX88FNftlW2jJyLZ7lElBkm/TSK1idsD4lhr2oZiC6JU/pIt87ID2vO4F
o42CTG8lcp3jtoe3zZcrxTdoo2HDoc5feg5ADY86QpzVRptz/vy0sXOAi4yB
pKVz2khvjZhUlb8D5B6JST0Roo0Kqx0Cg1IdYNFnun+QoY1CySNbFn84QNbt
M8b707XRdtExy5lUR5h4eIzc9k4bmQRzhh0rcQS1fH0LzS5tFN4n9fBRoyOI
SaHXyf3aaOI6bfHMnCPEfRDq2j2mjWw551vmpZyAZ0tjVtSyNpINOufld8kJ
Cm64hj/hBVSfHf1PPNoJTM0mtn7jB+TQc+tm2zUnyDgSLC2+BdAN0rPnB7Kc
4F9ZcZPfNkCrU4vc061OoKSlWVQljp/vWJeeOuAEUs8Ec6skAMkbCSmbjDvB
wtuEw0+lADnlqNgVrDrBL2PuwGt7ATU5X3zkKe0MKcrzRtMHALkkMGC7gjOY
P2sZKVEE9Lv6TneTmjPY/jIEfxIghZ0Vv/eaOYPU/WTf/oOAbveumHy55AxP
HwUJmWsCcjUOnnZpcwYOFkfZd31Au3T6740MOAN3TS8bxRDQoIqKqcO4MzQp
PMiIMQJkITn32HrVGSr455fYjgGCVU+/41IuYMf20DvXHI8/07irdb8L+PFe
Gau1AFQ+vrvDWNUFfP9VdXWfAHSgfVRJ/5gLCOlPKH09CWhnjvW81kUX8JpM
dqy2BtSfWv7geQR+X2HzziwbQDdvCFqqxbkA4T9wLsoW0MbLHaXKGXi85mwe
BXtADYEKriUFLhDGbm75CzvC86qgYpkLjITcMKx1ALRiaXhB7o0LSJ3hNVV3
AlRqlLMnr8cFlouGXKexfWFt354RFzAY9dFMcQb0Ra72kOSiC1gXfVYZdQGU
ISE+kfYPr2fCghpCBWS3LSxJdCMVRChxjnw0QF0caqvC4lRou2/dL+0K6NrK
7bzb+6jgLk6zz8Y2mlmw3qpMhdW8vXUSboDQQFEVnyEVvvGV6KxzBxTaxut1
9QQVCi1GXHyxD7323sHtQIUrvrfPd2I/LpIJXRdIhQQvy3C6B6Az2XT56DAq
xFeWhvdh704dH2RnUiEMHYuS9AQ0cv3w1Ss3qODJpx/njp3KSNf6k0qFHOuG
tGzs02F/p4Nz8PsXv9d+xN4SaHd/pZgKb93GlzafAdTqUWV64QUVqoxfHwZs
loPwv/kGKjj4F+W5Y+tZXnji30EFb6NXCgQ2u1G34/cPVOjxFxzIwn6hTeL3
+UKFywWv8qqwgw4moP9mqfBxfORhC7ay3Iyfxy8qlB+M6ejG/r7LROLLWho8
GHmlOICdL5TfQeWnwfCJgsY+bDeeDZGjIjTo2mea0o4tyeFGctxNg559lY/q
sIeW6z4NKtCg1mCFoxg7aVripo06DfLyBDOSsC3Hrhzp16WB//3tscHYfAND
8yfNaBCfu/G1FXZLq0ZWlzUNbl2attiPTa9PtjSn0eDzfL3qX/z/6FQtr2k7
SwMHuRvBzdiqLl+Vk4Jo8G/ng4M3sRU39tGcI2lQKrzEexp7b0nDLdk4GmS9
b+ASxhazKaufT6RB1SuzfV14vwQ5shdepNGAp6fZj8DmyU+UpufRwKbKe0wd
++fquWjhlzRoe7/mVDze/x8ZtNLRBho0Zro4kLAnDC3H89tpcOR01b12XE99
yWRdrXEa2Ldu7/iL661UbY7ThdsVXvreo0ri+iwYHSXLCbqCQlp/VBqu30yi
g7og5gphNr6L27ATBorq6CRXeDygN/AT17/PJd+oAmtXKNS6+IvpCIgm4fj0
HBV/2MP/7wg+T3bNpmNaPq4Q7dTlpYxttP3AkfZwV4gs0rjxzg7QnsopjsUc
V/BfMKU14/Ms6jxIqi52BeWvOgJ/TgPayvXWhfHcFQx9LXXksTmsC15tb3OF
YJ0dh8KsAH1c8YykLLnCWe4XrZM4P3rTrUvWs7nB42n4bxXnS6uB4ad2Ljfg
SzbMWIv9IknmMFXUDaZf/5vmM8P7r/qVnanrBiezPa1mcV7Fj/QqmZu6QSdv
eOYQzjM6s8FZ5LQb5CO5zAYDQOf7H9Y+8nKDbCq5KVYP51sQLaLjhhtYLJhy
jOkA4q4YZdsx6gb7ub/WNx4CNHv8Dr38mxv4EV8zLFUAdU+a8FguuYHa3brc
QWVA93ZUbLvK7Q5XnD4eHlbC+Xvl2oF/B91ht9Qvvlw5QCf0NOzGWO4QQm09
bC2G6+nj7OiVRHf48TnwQspOnIdB2e47093BONaft08E0Oc8gcCTz9zhaXP/
pcO4f1zcNEE0fnQHsaDizE98gO523yovUPaA86uD1sZsgMJ9jLQMtD3gHqfn
X+ZvbURbx1Y3bugBuSWOUQEr2mi/qlerqKMHuBsJnpab1UY1d3U+x+NCnDkf
+V35ozYac5nZfG7YAzRT8z8VPtdGcj/0z2oyPeHPSPV1N9yPTTTjA6VveILj
vk0eWZ7ayJvRG8ST6gkVP0lWH2ja6JGoa9TgE09QuB8Qr2yrjftZZFJonydU
fVLjTtTXRgcevHj1Ys8ZyP448GazuDYinVTapvX6DHzg3yK4p5mC1CtFkBaH
N0hfeGrQvJGCQt88GZ3n9gaJWa9niWsoqHpIlzNf0Bu6PN+U2f3VQjocvnpC
+7zhxTc68f6HFjIwrns7Y+YNNh+fTiX2a6FTQ14Dafe84ZaHx3W+h1roHPvL
OXY1H5g/zNy7X10LPTF03N3gexZmeDWL2K000cuN/H8FCD9wHby30WG/OhKp
yP5QVOcPozZmWn6zh5Bk1C//KuFA+PjGOi3o5EHkQOK6wXA/BxKV8UO92SQk
sO9YVn3aefgrEn7bR1AR+WqZ+XrPXYBn0d3+ooQs0k1myEcfCIL2tVsGBg13
o/rNlzPXxVyC9fur9YRtxdFFv/2ZJj3BUKzjmDibvBVlCG65xcEXCiUh5Y4x
r9eii/1lFClqGJRkTh7weNFUU/8p4cPT9MuQHV3udsyXDXQ7pDg29F+BYdE9
Me8S+KHibJXf2K1wmOcu/OnHvx0I4csDwaQI+JPZNMqptgsUO9Lv6w9FwLbX
tB8lk1Iw+ytNZik6EuSDKzkMD+3FOV9VYCcRBaXJuRfUOWThZQ45dqUlCuim
mpESlfLQItNENfGMhqm88NippQPwY4cae+SaGDA5PPlOKkARVmx3FUqtjwHo
4ZhZf0ER2FLXW7/mioHnGVG3Jy8pAv/O3qINfDFAH38e8TBCERR3BjrFb4+B
hUMiTf8SFMFvZ2FN6oEYGO8cPEZ5ogjfd0pcLj8dA+8at235PKkI06Jcv6Ye
xYBi57uhiVNKEN3STXd+EgM216J+r9gogcjF9M29xTFg3dywZr2DEhi0H5Kt
KYuBK7yznTtpSpAV6WZ9HcWA4OtCbwU/JbD9Wld+sDsGNI4avJtlKEFz0eVz
l3/FQE9sytovz5Tg4ZGFaT4jOiz4NHbncpMgyFvJrNKEDrfyskS8eUlglHi2
yMWMDu2iPGz7BUgw82Ui4JklHY6ujubnCJFAhTW0bONIB8mTcaxwCRI0tTew
Z5+jg87RC7VIhQRT9smCmml0oNTSb4Q5kqCa3nvhcwYd+NlEQxadSZDwZEv/
tSw6nO1p4fWikeAg+7WU0Tw62IxOqJp5kuByVqQ4o5QOwR/vZP4KIAHfN699
nc10uDMWKf45hgSkIIqWxwIder/00/7kkeDmJqfL40t0WDOvw1z3iAQLmRE1
Tqt0OBVcW7jpMQnK3tXrWP+l42DXZxMqIYGGlLGe0QYGdNw1eMtbRQLd1lNm
8jsZYNBorp/RTAIraX/n2SMMmGAfXG/ylQTllTcyvfUYMHPSk0dokgTCZqVj
EwYMiAyyFB3+jwTvLy27jh5jwILMTVePGRI4toWd6TzFABn+kSTXRRJ4BLMC
S70YcF/Et5uDkwwh7Q9igm4yIFuG/qNlJxmy+vqPTSQyAJ3c7mYmRobW4U1C
p5MYEJjxcE2nOBkkpy9mH7rHgBfK31GHJBmauEwal7IZcK5YSfu5DBm2HlnY
cL6KAbvaN6aoKJPh0TPdOP9RBjBmaVwdhmTofXHJcnSMAfWbZOx2GJPhX93j
neZfGNAjTB6jmpDBolO4UPEbA9T0feO/m5JhZWbq3fcFBghU5Hj+OEEGXZlE
vrMbmFDCFXs2zZ4MQymfb5xRYMKJhdENOb5kOCwWp8hHYsKxrUb32vzIkJ1B
an2qzIRHa3UllvzJ4Jd7heuPGhP2DmSsap4jw5qy7eHxukyYbl9ZLg4ig1zH
MZ9SayZEWc2y1CLIkGC5sNHajgmFK3XGOpFkWOhLyf3jwIRqgTWc+lFkqB7+
OqZHY8Khr5FWJjF4/lMRNgNnmcAciL9HIchwaX2Z/t8oJgRUNPK8SiDDMMvu
cyadCX53tDzyruP58nJG6RNMUOfeVHvtBhl4BI9XJ1xjQi31gveJW2RIl/xP
WSqZCeEa2WX1d8jQqCUmafCYCQ9TTIL175NBvra+ZqqICVbPKj7ypuH56nrZ
X3/KBKe0UMNubBvjiqT3FUw4mvVOzjqDDDOnLfh86pjw8uD4IeMsMgieo/++
3s8Es/mb7e15ZNhAEwjm+sCE3yLPr/rkk+H3idTl8CEmqFLf3d5QQIZxcsmc
7ycmbP4rdU3tERlK54cmjk0xYS6+aAfjMV5/4MEeLjYCnvpJcXaUkEGPiiwi
OAho1tHPt3hKBvUTxu0rawiQRaIPOrElyM5vvnIRsGa7Vey7UjLMzsXVvt5C
AAdTFJ6UkSE+YLwwYi8Bh0kBcZJVZIh08ZVb3UdAUMzpYAL7gsXPXD95AgIV
6mpmsB1I/FmOSgS4a9+1KH1OhgNzGilaGgQIGCZkyr3E9fupYdszLQIc+bqs
YrCFOs0T5YGAb9F01yHsP8XuCTuOEvDQsuwms5oMb/1v0ldN8feNQ7Te1JAB
OYut8TcnYEggpm0bwus3z4uYOEHA560z1S7Yd5VqQvtOE5BTebJ8HvvMj/8C
nrng9WTVC3O8wvMbPT8r70pAP0UgXQfbooPtbJY7Hu9FIeMKtnqxkOdNbwLC
zcwuLWFz+R929L9AwGWemNn2OjKoDlFKRC8REPbhUOH6ejJ4GGqsbQkhgBF+
OEYTu0FCuUAyggAjFSDSsRevKv5tjSIgo0+qrA1b+qe8eQidgHZfYPuDHdm5
e7krloAnm9fNmL8mQzFF0ij8GgFX2dJvXMIeyRe7J3+dAI1cS6s0bO2obUdi
bhOw3mpW8zP22e9bbislE/D8apPT2gYy3Lflnxy6S8D2kXsPpbB/k7niVTII
aMmRvGWDLZe+9tOnBwQkJNdRArFteDgOxmcTUJ+hy8PCJoL+MjTyCNh1R+zP
feyK8Z/vvxYQ0GDXIlCC/fX48v5bj3E99CKjOmyhl/PhUExA53Jwbie23r7Z
rqmnBES98JcbwT6fOLUnuYyAsb1i3d+ws9gnLx2tJCBebzVzEbvb5/PbH88J
OHAgNOkPNuf7UfH71QSo/BZ/xtlIBpLecIBRLQF6A/ar67GdS96/XqojYN3c
Y9eN2AlifcIPGggQioz7+X/XsLq8zJoJ8Gz0reDCnllqq/71hoBV7s60ddii
1LcCua0EDKfLF7Njm7Q10Sw7CMgeXpn6iccP0XhdztaN63dv0Yk57Pyc2o2F
vQR4fHnz+Sv2wJZqe+sBXH+xrx98wN4QXlW0dpAA1nWha++wVafKOEuGCRgM
Vn34Etv99FMrh1ECvNuyJguwb9c/yds4TkChRI9tEnaD4qPfZV8IGOU68jsS
ezE114w6SUDyPo83XtjSXA8z+aYImNhb3WyBfeJ8xuLzGQI2lVcvH8KOHL1n
4PGDAH7W2Mkd2COVt2fQEgGv10dkDeL64NtzU8dnlYA9utOJVdiUG/G3tv/G
532KVnkbO/UMUz2AnQWwaJ9kiP2mN/qq2BoWTEl0We7C/nk4YqRlHQsYFhpH
F3G9Wu8IpkvxsOBI5tu6ZGwm48JAGy8LHOsmLTyxK+YD5EMFWFA5NbrtELbQ
W6/ObiEWrOQYH32Hz09nqL0YXYIFEfpOGuP4fLXY+KzslmZB7DPLJ9nYtaph
na/34Pe17XzcsYsWUulr5VmwISSweayWDNe8B2eiVVhgcNOLtwmfb7rRVJO0
Ggv8KjM+hmKHyfzOrNdggTSZ+KuA7T2+49QaHRYcvq2x9zrOD2M725ooYxZk
vvqgqI3z5bC6V7KUKQskvxqGfsH5oy4cElh3nAW6gxu2x2HLdqfs5bRiwbCN
oUHnC7zfJu/jI51YUOxMZxnhfKvXsHaKOM+CMepVzm/lZHix3VNdIogF6qTz
KRexny4Hba0NZoGlzizBgZ35NKmJLZwFJQb+57bgfA2X61cMZ7FgD+fpaAmc
v5o7TrFfSWPBaF3s4swTMiivun0Qy2TB7s0kE2dsub4Lz6qzWJD2pZijE+e9
yM3bnn/zWECR4L/+uBD36429HWGlLPC+sxYscb949tMyM7SZBV9ku0wssvH3
jxrafX/DgkmV91JlD8nwKl5LyKWVBYOeAneEsVul97D0u1igyhN7YuABGSZM
l/03D7Hgmsx6BSPcv3Y+SNbJnWWBy7V1dZN3yRBtPDzStS0WnL9HLkni/rrx
dmeKnkgs5J+X5LaNJ8P1kQbLyp2xIDvS0nj9Gs6n80+a7kvEgm5JsfqvOFwv
aeFFnnKxcLlaRaAa9+upecnwf5RYuCq5o5sT9/cTqe7icm6x8C1Hy/AGvi9s
pb573OkRC0d4C1JjA/F9Zh+ZEuwVCz7sBZ5RATjPyv/aNfvFQoSsXsBZfP9w
6UxMcQ+JhaoHksYkb3z/2FAvmJUQC+MK6jH+VDJcPbeLR/R5LPC3vPfoOI77
u8nACi9/HJCULE8r7SWDcLiUB7E5DtLVtcLHd+O8f+rTxykYB++5JM7elsbr
FeEoW9keB0afne4tSeA8+Sob+EkqDudxkGUuvs91RoROPzsUB7L65cEdAvj+
USb+yc4xDpLOOVtq/SLB0i63N/mP44AI505JaMH324a6WuHiOLibYmPChu+f
Ml4SFfSncfDy7/GJs40ksHk2mOVSEQe0qYxhg3oS1BieuCzyKg5qbPtav78k
ATMAlFg9cbCnIHXTxmISiNSL3PH8HQeGSbLRAbdJoO3e5iJjdBV6Dq3o7nUg
gcOLO1Yf5q5CWuG/zaG9SqB6MOSIXsI1+EX7TYQaKMHEi5dxX9TjoWrOWjA0
TRE8Vh3nfmKnKHZzuGNPHOQ4zacRD+aeO2bNsb8+1pNSxfbt4G/Zi/0lva2S
wN5/705I131FGI8e/SKvGQ+ltYI9stijJmt1ArXiIenRgPNAqiI4ETnZDOzE
5QWDeuyR14Y8qf+37ZDCk/+bcq2vHlvLSfBP9P+tuO2sECUeUhMkExWxh7fu
u1uJTdpb8pxxVxEczN+wtWKv7klLC8Aevurj9gm7Qt86yh57aF2JErd2PDz5
oWxExh5cUW+yw878TfQMpyiC3cGh/f7YRbtGypuxB/2v3IzBTvHiTCnF/vBf
ncNjbJnQYnsWts1et/pX2HO6mtrnsd9TN8j2Yeup3trl9P/n6fnx37DnT1ey
G///+aDJ4j/spcyCTwex/wfsnWbE
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.40099793102341*^9, 3.4009979904789023`*^9}, 
   3.4009982013220797`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EN", "[", 
    RowBox[{"iEn_", ",", "g2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rU", ",", "fU", ",", 
       RowBox[{"n", "=", "0"}], ",", "i", ",", 
       RowBox[{"En", "=", "iEn"}], ",", "ll"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Label", "[", "begin", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fU", "=", 
       RowBox[{"U", "[", 
        RowBox[{"r", ",", "g", ",", "En"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rU", "=", 
       RowBox[{"fU", "/.", 
        RowBox[{"r", "\[Rule]", "R"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ">", "0"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"En", "-=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], "+", 
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "1"}], "]"}], "]"}], "+", 
             RowBox[{"rU", "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"n", "++"}], "\[IndentingNewLine]", 
          RowBox[{"Goto", "[", "begin", "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"En", "*", "M"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"rU", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.400947470503632*^9, 3.40094758327579*^9}, {
   3.4009476230329585`*^9, 3.4009476274392943`*^9}, {3.4009478839180927`*^9, 
   3.400947939658243*^9}, {3.40094809134636*^9, 3.40094809619333*^9}, {
   3.400948160305518*^9, 3.4009481607862096`*^9}, {3.4009481926820736`*^9, 
   3.400948203247266*^9}, {3.4009482873982687`*^9, 3.400948369195888*^9}, {
   3.400948407571069*^9, 3.4009484900897245`*^9}, {3.400948552289163*^9, 
   3.4009486771787453`*^9}, {3.4009487438446064`*^9, 
   3.4009488376194477`*^9}, {3.400950242890128*^9, 3.4009503158350177`*^9}, {
   3.4009503541701407`*^9, 3.4009504228589106`*^9}, {3.400950458460102*^9, 
   3.400950494812374*^9}, {3.4009505390459795`*^9, 3.4009505680376673`*^9}, 
   3.400950941494672*^9, {3.40095104625531*^9, 3.400951063419992*^9}, {
   3.400951300290595*^9, 3.400951300440811*^9}, {3.4009514440372925`*^9, 
   3.4009514532305117`*^9}, {3.400951638346696*^9, 3.4009516390477037`*^9}, {
   3.4009518538766127`*^9, 3.4009518860428658`*^9}, {3.4009519721767197`*^9, 
   3.400951977244006*^9}, {3.40095214877065*^9, 3.400952167187131*^9}, {
   3.4009581615966687`*^9, 3.400958161837014*^9}, {3.400958192050459*^9, 
   3.400958283872493*^9}, {3.4009583363980207`*^9, 3.400958451092944*^9}, {
   3.4009600812169476`*^9, 3.4009600828993664`*^9}, {3.400960228699016*^9, 
   3.4009604264133153`*^9}, {3.400960460562419*^9, 3.400960472048936*^9}, {
   3.4009874644732494`*^9, 3.4009875523195667`*^9}, {3.400988131171915*^9, 
   3.400988167774547*^9}, {3.400988295227816*^9, 3.400988333002133*^9}, {
   3.400988386779461*^9, 3.4009884170229487`*^9}, {3.4009884637801824`*^9, 
   3.400988549493432*^9}, {3.400988583692608*^9, 3.400988607166362*^9}, {
   3.400988647544422*^9, 3.400988716573682*^9}, {3.4009887611077185`*^9, 
   3.400988774036309*^9}, {3.4009888383988576`*^9, 3.4009888968529105`*^9}, {
   3.4009891847168384`*^9, 3.400989290739291*^9}, {3.400989437290021*^9, 
   3.4009895433325024`*^9}, 3.400989622366147*^9, 3.400989688451173*^9, {
   3.4009897304115086`*^9, 3.4009898085438576`*^9}, {3.400990352716339*^9, 
   3.400990377672224*^9}, {3.4009904158270884`*^9, 3.40099051552044*^9}, {
   3.4009905730631824`*^9, 3.4009905956055965`*^9}, {3.4009906960400143`*^9, 
   3.400990732862963*^9}, 3.4009907642080355`*^9, 3.400991079060771*^9, {
   3.400991307258904*^9, 3.4009915362581887`*^9}, {3.4009924364726334`*^9, 
   3.400992467447173*^9}, {3.4009930471006737`*^9, 3.400993088870736*^9}, {
   3.400993326242059*^9, 3.4009934259354115`*^9}, {3.4009938012851377`*^9, 
   3.4009938554430127`*^9}, {3.400993887949755*^9, 3.4009938969727297`*^9}, 
   3.400993998809163*^9, {3.4009940678183937`*^9, 3.400994095838685*^9}, {
   3.4009942222304273`*^9, 3.4009942261160145`*^9}, {3.400994266464032*^9, 
   3.400994333640627*^9}, {3.4009943853249454`*^9, 3.4009944924289536`*^9}, {
   3.4009945282003903`*^9, 3.400994708719965*^9}, {3.40099474084616*^9, 
   3.4009947627376385`*^9}, {3.4009947956449566`*^9, 
   3.4009947965863104`*^9}, {3.400994830465026*^9, 3.40099483081553*^9}, {
   3.4009949138649487`*^9, 3.400994992808464*^9}, {3.4009950240333633`*^9, 
   3.4009950367416368`*^9}, {3.400995090669181*^9, 3.40099518974164*^9}, {
   3.400995219915027*^9, 3.4009952925995426`*^9}, {3.4009953273895683`*^9, 
   3.400995350142285*^9}, {3.400995624647003*^9, 3.400995669331256*^9}, {
   3.400995705633456*^9, 3.400995772659835*^9}, {3.4009958254657664`*^9, 
   3.400995863089867*^9}, 3.400995906602435*^9, {3.40099598188068*^9, 
   3.4009960330142064`*^9}, {3.4009960728214464`*^9, 3.400996073532469*^9}, {
   3.4009963174431953`*^9, 3.400996321348811*^9}, {3.4009966041454525`*^9, 
   3.400996651513565*^9}, {3.4009966847012863`*^9, 3.4009967151650915`*^9}, {
   3.4009967542012224`*^9, 3.4009967600095744`*^9}, 3.4009968029212785`*^9, {
   3.4009969419712224`*^9, 3.4009970784775085`*^9}, {3.4009971587028675`*^9, 
   3.400997162858843*^9}, {3.400997416413437*^9, 3.4009974224621344`*^9}, {
   3.4009976591925364`*^9, 3.4009976652612624`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "=", "3000"}], ";", 
  RowBox[{"g", "=", "0.001"}], ";", 
  RowBox[{"EN", "[", 
   RowBox[{
    RowBox[{"13", "/", "M"}], ",", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4009948153633103`*^9, 3.400994822593707*^9}, {
   3.4009950581323953`*^9, 3.4009950581924815`*^9}, {3.400995755435067*^9, 
   3.400995755705456*^9}, {3.4009965620649443`*^9, 3.4009965799306335`*^9}, {
   3.40099662856056*^9, 3.400996632996939*^9}, {3.400996670240493*^9, 
   3.4009966941949377`*^9}, {3.4009967270421696`*^9, 
   3.4009967331509533`*^9}, {3.4009970103996177`*^9, 3.400997143871541*^9}, {
   3.4009971803439856`*^9, 3.4009973702170095`*^9}, {3.4009974839605646`*^9, 
   3.4009975220353136`*^9}, 3.400997677048211*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "13.605873074754973`", ",", "0.0004417179152369499`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4009948247167597`*^9, 3.400994832257603*^9}, {
   3.400994923508816*^9, 3.4009950033736563`*^9}, {3.4009950423697295`*^9, 
   3.4009950599249725`*^9}, 3.400995120271747*^9, 3.4009951920549664`*^9, {
   3.400995238892315*^9, 3.4009952972562385`*^9}, 3.4009953423210382`*^9, {
   3.4009956504440975`*^9, 3.400995670813387*^9}, {3.4009957151471357`*^9, 
   3.400995778688504*^9}, 3.4009958322755585`*^9, 3.4009958744361825`*^9, 
   3.4009959116096354`*^9, {3.400995990713381*^9, 3.400996035407648*^9}, 
   3.400996075905882*^9, {3.4009963043643885`*^9, 3.4009963248137937`*^9}, {
   3.4009965683439727`*^9, 3.4009966725337906`*^9}, {3.4009967065827503`*^9, 
   3.400996763013894*^9}, 3.4009968115837345`*^9, {3.4009969895195937`*^9, 
   3.4009973841870975`*^9}, 3.400997425937131*^9, {3.400997484841832*^9, 
   3.400997522986682*^9}, {3.400997667023797*^9, 3.4009976818951807`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "  ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "13.605873075061169"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "=", "2000"}], ";", 
  RowBox[{"g", "=", "0.001"}], ";", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.400994677134547*^9, 3.400994685596715*^9}}],

Cell[BoxData[
 RowBox[{"plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rU", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"rU", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "100", ",", "R"}],
   "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"En", "=", 
   RowBox[{"4", "/", "M"}]}], ";", 
  RowBox[{"rU", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.400994229060248*^9, 3.400994253345168*^9}}],

Cell[BoxData["129.07158507732734`"], "Output",
 CellChangeTimes->{{3.4009942343478513`*^9, 3.4009942540862336`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "0"}], ";", "x"}]], "Input",
 CellChangeTimes->{{3.400994156205488*^9, 3.4009941579880514`*^9}, {
  3.400994260926069*^9, 3.400994261867422*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.40099426215784*^9, 3.4009942636700144`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "0"}], ";", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "=", "n"}], ";", 
     RowBox[{"x", "<", "10"}]}], ",", 
    RowBox[{
     RowBox[{"n", "++"}], ";", 
     RowBox[{"Print", "[", "n", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.40099410702477*^9, 3.400994160892227*^9}, {
  3.4009941955120077`*^9, 3.400994201340389*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994201871152*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942019011955`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994201931238*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942019813104`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942020113535`*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994202051411*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942020814543`*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942021014833`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.400994202111498*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.400994170465994*^9, 3.4009942021315265`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.400995358524338*^9, 3.400995362510069*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot", "[", 
   RowBox[{"liste_", ",", "R_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nN", "=", "100"}], ",", "table", ",", "max", ",", 
      RowBox[{"st", "=", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"liste", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "#", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"#", "/.", 
             RowBox[{"r", "\[Rule]", 
              RowBox[{"i", "*", 
               RowBox[{"R", "/", "nN"}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "nN"}], "}"}]}], "]"}], "&"}], "/@", 
         "liste"}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ll", "=", 
  RowBox[{"plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "^", "2"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"10", "*", "r"}], "]"}]}], "}"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"ll", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.400991670671466*^9, 3.400991804103331*^9}, {
  3.4009918417274323`*^9, 3.4009924492009363`*^9}, {3.4009924926534176`*^9, 
  3.400992589402536*^9}, {3.400992636199827*^9, 3.4009927210117807`*^9}, {
  3.4009927880181313`*^9, 3.4009928064346128`*^9}, {3.400992840513616*^9, 
  3.4009929196474047`*^9}, {3.400992972152904*^9, 3.400993006952944*^9}, {
  3.400993118232957*^9, 3.4009933169687247`*^9}, {3.400993520621563*^9, 
  3.400993568179949*^9}, {3.4009936553653154`*^9, 3.4009937848715363`*^9}, {
  3.4009953770009055`*^9, 3.400995613731307*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["r", "2"], "4"], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Csc", "[", "11", "]"}]}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "r"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.400993776409368*^9, 3.400993785121896*^9}, {
  3.4009953877764*^9, 3.4009955064370255`*^9}, {3.4009955377620687`*^9, 
  3.400995613971653*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {-1.0000097353062907`, 1.0000093772765368`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.400993776409368*^9, 3.400993785121896*^9}, {
  3.4009953877764*^9, 3.4009955064370255`*^9}, {3.4009955377620687`*^9, 
  3.400995614041754*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["r gegen Inifinity", "Subtitle",
 CellChangeTimes->{{3.4009558103857937`*^9, 3.4009558166447935`*^9}, {
  3.4009578741533456`*^9, 3.4009578770174637`*^9}, {3.400998560808997*^9, 
  3.4009985611294575`*^9}}],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.400945633602298*^9, 3.400945637107338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{3.4009509680228176`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{3.423237147692416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"1", ">", "En", ">", "0"}]}], ";"}]], "Input",
 CellChangeTimes->{3.4010118634071937`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"En", "-", "1"}], ")"}], "*", "Z", "*", 
    RowBox[{"a", "/", "L"}]}]}], ";", 
  RowBox[{"L", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "En"}], ")"}], "*", "En"}], "]"}]}], ";", 
  RowBox[{"L", "=."}], ";", 
  RowBox[{"s", "=."}]}]], "Input",
 CellChangeTimes->{{3.4010047011784143`*^9, 3.401004728127165*^9}, {
   3.401004934473877*^9, 3.401004935104784*^9}, {3.401007664659691*^9, 
   3.4010076829359713`*^9}, {3.4010081987877293`*^9, 3.40100820195228*^9}, {
   3.4010085526765966`*^9, 3.4010085529469852`*^9}, {3.401010076007038*^9, 
   3.401010081054296*^9}, {3.401010963823656*^9, 3.4010109657964926`*^9}, {
   3.4010118334541235`*^9, 3.401011839562907*^9}, {3.401012398316355*^9, 
   3.401012403844304*^9}, {3.4010133451778755`*^9, 3.4010133727475185`*^9}, {
   3.401013411312973*^9, 3.4010134418568926`*^9}, 3.401013486921693*^9, {
   3.4010139002059665`*^9, 3.401013919373528*^9}, {3.40101496351493*^9, 
   3.40101496401565*^9}, {3.401015282143094*^9, 3.4010153135782957`*^9}, 
   3.401015705391696*^9, {3.4010157690632515`*^9, 3.401015769513899*^9}, {
   3.4010162274824257`*^9, 3.401016230616933*^9}, {3.4010164403785553`*^9, 
   3.4010164568222*^9}, {3.4010185723942432`*^9, 3.401018572764776*^9}, {
   3.401018724202533*^9, 3.401018724983656*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "En"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"En", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.400998443410186*^9, 3.4009984451326623`*^9}, {
  3.4010153085510674`*^9, 3.4010153097427807`*^9}}],

Cell[BoxData[
 RowBox[{"u", "=."}]], "Input",
 CellChangeTimes->{{3.4010148394264994`*^9, 3.4010148398170605`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"hb", "[", "r", "]"}], "-", 
         RowBox[{"ha", "[", "r", "]"}]}], ")"}], "*", 
       RowBox[{"L", "/", "En"}]}], ",", 
      RowBox[{
       RowBox[{"hb", "[", "r", "]"}], "+", 
       RowBox[{"ha", "[", "r", "]"}]}]}], "}"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "r"}], "*", "L"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.400942218441538*^9, 3.4009422462415123`*^9}, {
   3.400942288612438*^9, 3.400942289854224*^9}, {3.40094492128804*^9, 
   3.40094492304056*^9}, {3.4009449752055693`*^9, 3.400944981094037*^9}, {
   3.4009984105529394`*^9, 3.4009984548165874`*^9}, 3.4009985537188015`*^9, {
   3.4009985861754723`*^9, 3.400998659460851*^9}, {3.4009989793608446`*^9, 
   3.4009989815539985`*^9}, {3.4009990509638047`*^9, 
   3.4009990589452815`*^9}, {3.4009991816417103`*^9, 
   3.4009991854972544`*^9}, {3.400999633511467*^9, 3.400999650966566*^9}, {
   3.400999854579347*^9, 3.400999854679491*^9}, {3.40099988649524*^9, 
   3.4009999030590577`*^9}, {3.4009999844460864`*^9, 
   3.4009999883316736`*^9}, {3.4010000806544275`*^9, 3.4010000835786324`*^9}, 
   3.4010001991147647`*^9, 3.4010047174117565`*^9, {3.4010131968846397`*^9, 
   3.4010132323256016`*^9}, {3.401013481173427*^9, 3.401013481894464*^9}, {
   3.4010135166344175`*^9, 3.401013518567197*^9}, 3.401014540166184*^9, 
   3.4010147879725122`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"U", ",", "r"}], "]"}], "-", 
               RowBox[{"D", "[", 
                RowBox[{"U", ",", "r"}], "]"}]}], ")"}], "/", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "r"}], "*", "L"}], "]"}]}], "*", "En", "*", "r"}],
            "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ha", "'"}], "[", "r", "]"}], ",", 
           RowBox[{
            RowBox[{"hb", "'"}], "[", "r", "]"}]}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "/.", 
    RowBox[{
     RowBox[{"ha", "[", "r", "]"}], "\[Rule]", 
     RowBox[{"u", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"hb", "[", "r", "]"}], "\[Rule]", 
    RowBox[{"u", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], "/.", 
  RowBox[{"r", "\[Rule]", "rr"}]}]], "Input",
 CellChangeTimes->{{3.4009421893997774`*^9, 3.4009422140652447`*^9}, {
   3.4009422958828926`*^9, 3.4009423156813617`*^9}, {3.4009423745359907`*^9, 
   3.400942376318554*^9}, {3.4009426337687488`*^9, 3.400942655179536*^9}, {
   3.400942688627632*^9, 3.4009428007588687`*^9}, {3.40094480687352*^9, 
   3.4009448593690047`*^9}, {3.400998964769864*^9, 3.4009989666625853`*^9}, {
   3.4009990052881265`*^9, 3.400999008632936*^9}, 3.4009990624002495`*^9, 
   3.4009991028584256`*^9, {3.400999333269741*^9, 3.400999432722747*^9}, {
   3.400999562769746*^9, 3.4009995661546125`*^9}, {3.400999664746381*^9, 
   3.400999667810787*^9}, {3.4009998564820833`*^9, 3.400999856582227*^9}, 
   3.4009999130334*^9, {3.401000112289917*^9, 3.401000162151614*^9}, {
   3.401000203781475*^9, 3.401000223459771*^9}, {3.401000317795419*^9, 
   3.40100044563925*^9}, {3.4010019715133486`*^9, 3.401001986064272*^9}, {
   3.4010021306321507`*^9, 3.4010022470595646`*^9}, 3.401004698114008*^9, 
   3.4010047522218113`*^9, {3.401004853918043*^9, 3.4010048993934336`*^9}, {
   3.401004961322483*^9, 3.401005046514984*^9}, {3.401013263901005*^9, 
   3.4010133299259443`*^9}, {3.4010134948430834`*^9, 
   3.4010135044168496`*^9}, {3.401013551794976*^9, 3.4010136111202817`*^9}, {
   3.4010136707460194`*^9, 3.4010136765744*^9}, {3.401013711354411*^9, 
   3.4010137132170897`*^9}, {3.40101382704076*^9, 3.401013875159952*^9}, {
   3.401013955495469*^9, 3.401014015031077*^9}, {3.401014058223184*^9, 
   3.4010141594887967`*^9}, {3.401014544752779*^9, 3.401014545904435*^9}, 
   3.401014726714427*^9, {3.401014823393445*^9, 3.401014832156045*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "::", "\<\"partd\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Part specification \\!\\(u \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\) is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.4010148419100704`*^9, {3.4010149711258736`*^9, 3.401014980269021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "::", "\<\"partd\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Part specification \\!\\(u \[LeftDoubleBracket] 2 \
\[RightDoubleBracket]\\) is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.4010148419100704`*^9, {3.4010149711258736`*^9, 3.4010149802890496`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "En", " ", "L", " ", "rr"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["En", "3"], " ", "rr"}], "+", 
         RowBox[{"En", " ", 
          SuperscriptBox["L", "2"], " ", "rr"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["L", "2"], " ", "Z"}], "-", 
         RowBox[{
          SuperscriptBox["En", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "rr"}], "+", 
            RowBox[{"a", " ", "Z"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["En", "3"], " ", "rr"}], "+", 
         RowBox[{"En", " ", "L", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "k"}], "+", 
            RowBox[{"L", " ", "rr"}]}], ")"}]}], "-", 
         RowBox[{"a", " ", 
          SuperscriptBox["L", "2"], " ", "Z"}], "-", 
         RowBox[{
          SuperscriptBox["En", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "rr"}], "+", 
            RowBox[{"a", " ", "Z"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{
       "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "En", " ", "L", " ", "rr"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["En", "3"]}], " ", "rr"}], "+", 
         RowBox[{"En", " ", "L", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "k"}], "-", 
            RowBox[{"L", " ", "rr"}]}], ")"}]}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["L", "2"], " ", "Z"}], "+", 
         RowBox[{
          SuperscriptBox["En", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "rr"}], "+", 
            RowBox[{"a", " ", "Z"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["En", "3"]}], " ", "rr"}], "+", 
         RowBox[{"3", " ", "En", " ", 
          SuperscriptBox["L", "2"], " ", "rr"}], "-", 
         RowBox[{"a", " ", 
          SuperscriptBox["L", "2"], " ", "Z"}], "+", 
         RowBox[{
          SuperscriptBox["En", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "rr"}], "+", 
            RowBox[{"a", " ", "Z"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{
       "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.401014110748712*^9, 3.4010141599795027`*^9}, 
   3.401014479539006*^9, 3.4010145477070274`*^9, 3.401014727655781*^9, {
   3.4010148239242077`*^9, 3.401014841960142*^9}, {3.40101497118596*^9, 
   3.4010149803190928`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"u_", ",", "rr_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "a"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "En"}], ")"}], " ", "Z", " ", 
        RowBox[{"u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "-", 
          RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
        RowBox[{
        "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       "rr"}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
           "k"}], "+", 
          RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
        RowBox[{"u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "En", " ", "rr"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["En", "2"], " ", "rr"}], "-", 
          RowBox[{"a", " ", "Z"}], "+", 
          RowBox[{"a", " ", "En", " ", "Z"}]}], ")"}], " ", 
        RowBox[{
        "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       "rr"}]]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.401014042280259*^9, {3.4010140765495358`*^9, 3.401014082468046*^9}, {
   3.4010141522984576`*^9, 3.4010141880498657`*^9}, 3.4010144661998253`*^9, {
   3.4010145104634733`*^9, 3.401014573393963*^9}, {3.401014611088165*^9, 
   3.401014612880742*^9}, {3.4010146654563427`*^9, 3.4010146884894624`*^9}, {
   3.401014737089346*^9, 3.4010147845876446`*^9}, {3.4010148601863503`*^9, 
   3.4010148626899505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "/", "x"}]}], ";", 
  RowBox[{"u", ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], ",", 
      RowBox[{"b", "[", "n", "]"}]}], "}"}], "*", 
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"n", "+", "s"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.4010149395003986`*^9, 3.4010149454389377`*^9}, {
   3.4010150167614946`*^9, 3.401015063869232*^9}, {3.4010172003613567`*^9, 
   3.4010172309453344`*^9}, 3.4010172898800783`*^9, {3.4010179998008947`*^9, 
   3.401017999961125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"u", ",", 
            RowBox[{"r", "[", "x", "]"}]}], "]"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"r", "[", "x", "]"}], ",", "x"}], "]"}]}], "-", 
         RowBox[{"D", "[", 
          RowBox[{"u", ",", "x"}], "]"}]}], ")"}], "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"2", "-", "s"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "n", "]"}], ",", 
       RowBox[{"b", "[", "n", "]"}]}], "}"}]}], "]"}]}], ";", "g1"}]], "Input",\

 CellChangeTimes->{{3.401001843329029*^9, 3.4010018615251937`*^9}, {
   3.4010018974768896`*^9, 3.401001933719003*^9}, {3.4010022743087473`*^9, 
   3.4010022865763874`*^9}, {3.401002446075736*^9, 3.4010025010347633`*^9}, {
   3.4010026441505537`*^9, 3.4010026442807407`*^9}, {3.4010033586880083`*^9, 
   3.401003358768123*^9}, {3.4010034172622337`*^9, 3.401003440145138*^9}, {
   3.4010043886490192`*^9, 3.4010043904516115`*^9}, {3.401004473831506*^9, 
   3.4010044752335215`*^9}, {3.4010046118199234`*^9, 
   3.4010046184194126`*^9}, {3.401010159046443*^9, 3.4010101667475166`*^9}, {
   3.40101243078304*^9, 3.401012446455576*^9}, {3.401012542173211*^9, 
   3.40101257057405*^9}, 3.4010148873554173`*^9, {3.401014919962304*^9, 
   3.401014954381797*^9}, {3.401014998955891*^9, 3.4010150059759855`*^9}, {
   3.401015051451376*^9, 3.4010150535544*^9}, {3.401015087523245*^9, 
   3.4010150939224463`*^9}, {3.401015149482338*^9, 3.401015188318181*^9}, {
   3.401016279467176*^9, 3.4010163760160065`*^9}, {3.401016446657584*^9, 
   3.401016447989499*^9}, 3.401017218767824*^9, {3.4010172559813347`*^9, 
   3.4010173212652082`*^9}, 3.401017423842707*^9, {3.4010174606356125`*^9, 
   3.401017498590189*^9}, {3.401017544035536*^9, 3.4010175475005183`*^9}, {
   3.4010180123389235`*^9, 3.4010180125592403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"1", "+", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "En"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          "Z"}], "+", 
         RowBox[{"L", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ",
              "n"}], "+", 
            RowBox[{"a", " ", "Z"}], "-", 
            RowBox[{"a", " ", "En", " ", "Z"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       "L"}]]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"1", "+", "n"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
         "k"}], "-", 
        RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
      RowBox[{"b", "[", "n", "]"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"1", "+", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
          "k"}], "+", 
         RowBox[{"a", " ", "Z"}]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]]]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
       "L"}]], 
     RowBox[{
      SuperscriptBox["x", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["En", "2"], " ", "L"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "L", " ", "n"}], "-", 
           RowBox[{"a", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "Z"}], "-", 
           RowBox[{"a", " ", "L", " ", "Z"}]}], ")"}]}], "+", 
        RowBox[{"En", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "L"}], "+", 
           RowBox[{"a", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "En"}], ")"}]}], " ", "En"}]], " ", 
            "x", " ", "Z"}], "+", 
           RowBox[{"a", " ", "L", " ", "x", " ", "Z"}]}], ")"}]}]}], ")"}], 
      " ", 
      RowBox[{"b", "[", "n", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.401016343859768*^9, 3.4010163762162943`*^9}, 
   3.4010164488807807`*^9, 3.401017204407174*^9, {3.4010172435835075`*^9, 
   3.4010173217559137`*^9}, 3.401017424723974*^9, {3.401017462217888*^9, 
   3.401017498920664*^9}, {3.4010175447665873`*^9, 3.401017547861037*^9}, {
   3.401018004607806*^9, 3.4010180129998736`*^9}, 3.4010185778320627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       RowBox[{"(", 
        RowBox[{"-", "n"}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Z", "/", "L"}]}]}], ")"}], " ", 
       RowBox[{"b", "[", "n", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", 
         RowBox[{"1", "+", "n"}]]}], " ", 
       RowBox[{"(", " ", 
        RowBox[{"k", "+", 
         RowBox[{"a", " ", 
          RowBox[{"Z", "/", "L"}]}]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "n"}], " ", "x"}], "-", 
         RowBox[{"2", " ", "s", " ", "x"}], "+", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "L"}]}], ")"}], " ", 
       RowBox[{"b", "[", "n", "]"}]}]}]}], "}"}]}], ";", 
  RowBox[{"g2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4010163647798495`*^9, 3.4010164275400944`*^9}, {
   3.401017325741645*^9, 3.4010173588091936`*^9}, {3.4010173952015233`*^9, 
   3.4010174480875697`*^9}, {3.401017511368563*^9, 3.401017596360776*^9}, 
   3.401017781937622*^9, {3.4010178353444176`*^9, 3.401017891364971*^9}, {
   3.401018049782765*^9, 3.401018064103357*^9}, {3.4010181502972975`*^9, 
   3.401018191186093*^9}, {3.4010183948689747`*^9, 3.401018411282576*^9}, {
   3.4010186374578*^9, 3.401018650666794*^9}, {3.401018701660118*^9, 
   3.4010187332154927`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "n"}], " ", 
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"a", "[", "n", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "+", 
           FractionBox[
            RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
         RowBox[{"b", "[", "n", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", 
           RowBox[{"1", "+", "n"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", 
           FractionBox[
            RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
         RowBox[{"a", "[", "n", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "L"}], "-", 
           RowBox[{"n", " ", "x"}], "-", 
           RowBox[{"2", " ", "s", " ", "x"}]}], ")"}], " ", 
         RowBox[{"b", "[", "n", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.401017792542872*^9, {3.401017838258608*^9, 3.401017891615331*^9}, 
   3.4010180655654593`*^9, {3.4010181553044977`*^9, 3.4010181921775184`*^9}, {
   3.4010183983139277`*^9, 3.401018411583008*^9}, 3.40101858888796*^9, {
   3.4010186407024655`*^9, 3.401018651608147*^9}, {3.4010187033124943`*^9, 
   3.4010187334658527`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z", "*", 
       RowBox[{"a", "/", "L"}]}], "-", "k"}], ")"}], "/", "n"}], "*", 
   RowBox[{"b", "[", "n", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.40101880945512*^9, 3.401018830865907*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4010188493524895`*^9, 3.4010188692811456`*^9}, {
  3.4010199036985645`*^9, 3.4010199203324833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "L"}], "-", 
     RowBox[{"n", " ", "x"}], "-", 
     RowBox[{"2", " ", "s", " ", "x"}]}], ")"}], " ", 
   RowBox[{"b", "[", "n", "]"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"1", "+", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "k"}], "+", 
      FractionBox[
       RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"k", "+", 
      FractionBox[
       RowBox[{"a", " ", "Z"}], "L"]}], ")"}], " ", 
    RowBox[{"b", "[", "n", "]"}]}], "n"]}]], "Output",
 CellChangeTimes->{{3.401018852497011*^9, 3.401018863092246*^9}, {
  3.4010199060419345`*^9, 3.4010199206128864`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"2", "-", "En"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"En", ",", "L"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"Eigenvalues", "[", "M1", "]"}], ";", 
  RowBox[{"B", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Eigenvectors", "[", "M1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4010077407991743`*^9, 3.40100775697243*^9}, {
   3.401009472849741*^9, 3.4010094991876125`*^9}, 3.4010113876330643`*^9, {
   3.4010199402010527`*^9, 3.401019948102414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"1", ">", "En", ">", "0"}]}]], "Input",
 CellChangeTimes->{{3.4010098571623554`*^9, 3.4010098629506783`*^9}, {
   3.401009931369059*^9, 3.401009955794181*^9}, 3.4010101404997745`*^9}],

Cell[BoxData[
 RowBox[{"1", ">", "En", ">", "0"}]], "Output",
 CellChangeTimes->{
  3.4010098670365534`*^9, {3.4010099334220114`*^9, 3.401009956104627*^9}, 
   3.401010141391056*^9, {3.401010995539261*^9, 3.4010110230187745`*^9}, 
   3.423237084309416*^9, 3.4232371571464157`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["=>", "Subtitle",
 CellChangeTimes->{{3.400956011845478*^9, 3.4009560118955507`*^9}, {
  3.401002183938802*^9, 3.4010021858114944`*^9}}],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.423237165625416*^9, 3.423237166541416*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z", "*", 
       RowBox[{"a", "/", "L"}]}], "-", "k"}], ")"}], "/", "n"}], "*", 
   RowBox[{"b", "[", "n", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "n_", "]"}], ":=", 
  RowBox[{"b0", "*", 
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", "^", "2"}], "-", 
            RowBox[{
             RowBox[{"a", "^", "2"}], "*", 
             RowBox[{
              RowBox[{"Z", "^", "2"}], "/", 
              RowBox[{"L", "^", "2"}]}]}]}], ")"}], "/", "i"}], "-", 
         RowBox[{"(", 
          RowBox[{"i", "+", 
           RowBox[{"2", "*", "s"}]}], ")"}]}], ")"}], "/", "2"}], "/", "L"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4010199845047584`*^9, 3.4010201814880066`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.401020092229659*^9, 3.4010201222528305`*^9}, {
  3.4010201725251184`*^9, 3.401020178143197*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"16", " ", 
    SuperscriptBox["L", "4"]}]], 
  RowBox[{"b0", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["k", "2"], "-", 
     RowBox[{"2", " ", "s"}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["Z", "2"]}], 
      SuperscriptBox["L", "2"]]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "-", 
     RowBox[{"2", " ", "s"}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["Z", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "-", 
     RowBox[{"2", " ", "s"}], "+", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["Z", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     RowBox[{"2", " ", "s"}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["Z", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.401020093781891*^9, 3.401020182549533*^9}, 
   3.4232371711604156`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", "^", "2"}], "-", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "*", 
         RowBox[{
          RowBox[{"Z", "^", "2"}], "/", 
          RowBox[{"L", "^", "2"}]}]}]}], ")"}], "/", "i"}], "-", 
     RowBox[{"(", 
      RowBox[{"i", "+", 
       RowBox[{"2", "*", "s"}]}], ")"}]}], ")"}], "/", "2"}], "/", 
  "L"}]], "Input",
 CellChangeTimes->{{3.40102019569844*^9, 3.401020198182011*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "i"}], "-", 
   RowBox[{"2", " ", "s"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["Z", "2"]}], 
      SuperscriptBox["L", "2"]]}], "i"]}], 
  RowBox[{"2", " ", "L"}]]], "Output",
 CellChangeTimes->{3.423237180718416*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Exit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4010204288236575`*^9, 3.40102042978504*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"En", "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.4232373432314157`*^9, 3.423237373369416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "i"}], "*", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]]}], "-", 
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "En"}], ")"}]}], " ", "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]], "-", 
        FractionBox[
         SuperscriptBox["a", "2"], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", "En"}], ")"}], " ", "En"}]]]}], "i"]}], "==", 
     "0"}], ",", "En"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4010201986126304`*^9, 3.401020301520605*^9}, {
  3.423237049180416*^9, 3.423237050167416*^9}, {3.423237132927416*^9, 
  3.423237133581416*^9}, {3.4232372226314163`*^9, 3.4232372519284163`*^9}, {
  3.423237292603416*^9, 3.4232373032494164`*^9}, {3.423237351952416*^9, 
  3.4232373617634163`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]},
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]},
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]},
     {
      RowBox[{"En", "\[Rule]", 
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["i", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["i", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "4"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              SuperscriptBox["i", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["i", "2"]}], "+", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["a", "4"], " ", 
                  SuperscriptBox["i", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["a", "6"], " ", 
                  SuperscriptBox["i", "2"]}]}]]}]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           SuperscriptBox["i", "4"]}], ")"}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.401020406271229*^9, 3.4010204386377697`*^9, 3.423237082519416*^9, 
   3.423237130622416*^9, {3.423237217260416*^9, 3.423237239033416*^9}, 
   3.423237310369416*^9, {3.423237359602416*^9, 3.423237374194416*^9}}]
}, Open  ]],

Cell[BoxData["'"], "Input",
 CellChangeTimes->{3.4232372190464163`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.423237130360416*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ET", "[", 
   RowBox[{"i_", ",", "k_", ",", "Z_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["i", "4"]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["i", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["k", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["i", "2"], " ", 
      SuperscriptBox["Z", "2"]}], "-", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["i", "4"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["k", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["k", "4"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["i", "4"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           SuperscriptBox["k", "4"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["Z", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["i", "2"], " ", 
            SuperscriptBox["Z", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["Z", "2"]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               SuperscriptBox["a", "4"], " ", 
               SuperscriptBox["i", "2"], " ", 
               SuperscriptBox["k", "2"], " ", 
               SuperscriptBox["Z", "4"]}], "-", 
              RowBox[{
               SuperscriptBox["a", "6"], " ", 
               SuperscriptBox["i", "2"], " ", 
               SuperscriptBox["Z", "6"]}]}]]}]}], ")"}]}]}], ")"}]}]}], ")"}],
    "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "4"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["k", "4"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox["Z", "2"]}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.4010203554781923`*^9, 3.401020381085013*^9}, {
  3.401020425639078*^9, 3.401020498583968*^9}, {3.4010205541138163`*^9, 
  3.401020567082464*^9}, {3.4010207121811056`*^9, 3.4010207606908593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "*", 
     RowBox[{"ET", "[", 
      RowBox[{"n", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "a"}], "]"}]}], "-", 
    RowBox[{"Energie", "[", 
     RowBox[{"n", "+", "1"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4010204456178064`*^9, 3.401020614690922*^9}, {
  3.4010207164372253`*^9, 3.4010209884483585`*^9}, {3.4010210296375856`*^9, 
  3.4010211140089054`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.67315083799258`*^-11"}], ",", 
   RowBox[{"-", "1.9083965252519874`*^-7"}], ",", "5.309908068795721`*^-11", 
   ",", 
   RowBox[{"-", "1.348201550399608`*^-10"}], ",", "3.2418734363659496`*^-11", 
   ",", 
   RowBox[{"-", "5.865169461216624`*^-11"}], ",", "5.5718984981467656`*^-11", 
   ",", "2.1091323132438333`*^-11", ",", "1.878794342324852`*^-11", ",", 
   "1.0133882621943258`*^-10", ",", 
   RowBox[{"-", "1.464051102573194`*^-12"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4010204806782207`*^9, 3.401020615031411*^9}, {
  3.401020714774835*^9, 3.401020988808877*^9}, {3.401021041724966*^9, 
  3.4010211143794384`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "*", 
     RowBox[{"ET", "[", 
      RowBox[{"n", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "a"}], "]"}]}], "-", 
    RowBox[{"Energie", "[", 
     RowBox[{"n", "+", "1"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4010211305727234`*^9, 3.401021143441227*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "5.67315083799258`*^-11"}], "-", 
   RowBox[{"1.2647660696529783`*^-10", " ", 
    SuperscriptBox["n", "2"]}], "-", 
   RowBox[{"2.842170943040401`*^-14", " ", 
    SuperscriptBox["n", "3"]}], "-", 
   RowBox[{"2.540190280342358`*^-10", " ", 
    SuperscriptBox["n", "4"]}], "+", 
   RowBox[{"1.4210854715202004`*^-14", " ", 
    SuperscriptBox["n", "5"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "n", "]"}], "6"],
    SeriesData[$CellContext`n, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`n, 0, {-5.67315083799258*^-11, 
   0., -1.2647660696529783`*^-10, -2.842170943040401*^-14, \
-2.540190280342358*^-10, 1.4210854715202004`*^-14}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4010211287200594`*^9, 3.4010211440821486`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", "510998.910"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"En", "-", "1"}], ")"}], "*", "Z", "*", 
    RowBox[{"a", "/", "L"}]}]}], ";", 
  RowBox[{"L", ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "En"}], ")"}], "*", "En"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Energie", "[", "n_", "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Z", "*", 
            RowBox[{"a", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", 
               RowBox[{"Abs", "[", "k", "]"}], "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"k", "^", "2"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], 
              ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"Energie", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.4010210191525087`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.605873075061169`", ",", "3.4014795897476096`", ",", 
   "1.5117636749374572`", ",", "0.8503649445106845`", ",", 
   "0.5442326044110776`", ",", "0.37793882229240305`", ",", 
   "0.27766906844567757`", ",", "0.21259021894633673`", ",", 
   "0.1679724164567966`", ",", "0.13605758952415686`"}], "}"}]], "Output",
 CellChangeTimes->{3.4010210202440786`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verh\[ADoubleDot]ltnis bei r=0", "Title",
 CellChangeTimes->{{3.4009515898669853`*^9, 3.4009515953548765`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"7297352537.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";", 
  RowBox[{"M", "=", "510998.910"}], ";", 
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Z", "*", "a"}], ")"}], "^", "2"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"S", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "En", " ", "Z"}], 
         RowBox[{
          SuperscriptBox["n", "2"], "+", 
          RowBox[{"2", " ", "n", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["k", "2"], "-", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["Z", "2"]}]}]]}]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "k"}], "+", "n", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"n", "+", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["k", "2"], "-", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", 
                 SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"En", " ", 
          RowBox[{"(", 
           RowBox[{"k", "+", "n", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k", "2"], "-", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox["Z", "2"]}]}]]}], ")"}]}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]], ",", 
        FractionBox[
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "En"}], ")"}], " ", "Z"}], 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"n", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["k", "2"], "-", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["Z", "2"]}]}]]}]}], ")"}]}]]}], "}"}]}], "}"}],
     "/.", 
    RowBox[{"En", "->", "Enn"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"S", "[", "10", "]"}]}], "Input",
 CellChangeTimes->{{3.4009522676215487`*^9, 3.400952283113826*^9}, {
  3.4009527650267825`*^9, 3.400952769252859*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.00006081154100833443`", " ", "Enn"}], ",", 
     RowBox[{
      RowBox[{"-", "0.10000022188458049`"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "Enn"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.083333481256387`", " ", "Enn"}], ",", 
     RowBox[{"0.00006081154100833443`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "Enn"}], ")"}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.4009522833641853`*^9, 3.4009527695933485`*^9, 
  3.401020396877722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Enn", "=."}], ";", 
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "+", "s"}], ")"}], "/", "Z"}], "/", "a"}]}], "}"}]}], 
  ";", 
  RowBox[{"U", "=", "u"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", 
    RowBox[{"n", "<", "3"}], ",", 
    RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"S", "[", "n", "]"}], ".", "u"}]}], ";", "\[IndentingNewLine]",
      
     RowBox[{"U", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"U", "+", "u"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}], ";", 
  RowBox[{"n", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/", 
   RowBox[{"U", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4009522989465923`*^9, 3.4009525754341617`*^9}, {
  3.400952643992744*^9, 3.4009527053209295`*^9}, {3.4009527605904036`*^9, 
  3.4009527734088354`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"91.35044102604739`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3.662751763692355`"}], "+", "Enn"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1.6262886176197724`", "\[InvisibleSpace]", "+", "Enn"}], 
     ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.0109728221664999`"}], "+", "Enn"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"181.38339842774778`", "\[InvisibleSpace]", "+", "Enn"}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.4009526829387455`*^9, 3.400952706502629*^9}, 
   3.400952773659195*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Runge", " ", "von", " ", "links"}], "Title"]], "Input",
 CellChangeTimes->{{3.4009555053171263`*^9, 3.4009555110553775`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}], "+", "2", "-", "Enn"}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "/", "r"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Enn", "-", 
          RowBox[{"Z", "*", 
           RowBox[{"a", "/", "r"}]}]}], ")"}], "*", 
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"Z", "=", "1"}], ";", 
  RowBox[{"U", "=."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"4000", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Enn", "=", 
   RowBox[{"13.605", "/", "M"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"91.35044102604739`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3.662751763692355`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1.6262886176197724`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0109728221664999`"}], "+", "Enn"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"181.38339842774778`", "\[InvisibleSpace]", "+", "Enn"}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";", 
  RowBox[{"U", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"r", ",", "u"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k0", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{"u", ",", "r"}], "]"}]}]}], ";", 
     RowBox[{"k1", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k0", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k2", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", 
          RowBox[{"k1", "/", "2"}]}], ",", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}]}], "]"}]}]}], ";", 
     RowBox[{"k3", "=", 
      RowBox[{"h", "*", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"u", "+", "k2"}], ",", 
         RowBox[{"r", "+", "h"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u", "+=", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"(", 
        RowBox[{"k0", "+", 
         RowBox[{"2", "*", "k1"}], "+", 
         RowBox[{"2", "*", "k2"}], "+", "k3"}], ")"}]}]}], ";", 
     RowBox[{"r", "+=", "h"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"U", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "u"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "n", "}"}]}], "]"}], ";", 
  RowBox[{"x", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"137", "^", 
            RowBox[{"(", 
             RowBox[{"i", "-", "2"}], ")"}]}], "*", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}]}], "]"}], "//", "N"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.400955516443125*^9, 3.400955525636344*^9}, {
  3.400958009277645*^9, 3.400958014795579*^9}, {3.4009881226396465`*^9, 
  3.4009881242419505`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw913k8lAvYxnGJQkSihZRESYuSEm1XsqWFIpVUoiKlhBKp7ET2fWeMMcbM
KFol4qiEJO3apJTSKmVreb3vc3vPP+fz/Tw9btf5ZepMdTi0cY+oiIhIx3AR
kf/9N/PPtxWLo72cxYeJgLECVu4IG+brOY2shnSv5SPKh80na6E+0XLHo2d6
5PlIvxyhbL9uOXkhZp/8uNlrjiFZH9la1Wc8xIzJy2BaX/PhusCUsR9woLY/
eO8sc7IhvK3+zdt8ai3ZCLyKIwbuRevJJrj7wnpc9RZLshmch42rzFu9gWyO
mlkjsnRmbiSvxehD1Y8Meoe8Hp9m1R/zu2TFGJbwUfeqr3SyJm+A64a5yQLJ
TeSN0HoveaAnc8hWuHT+R/sqDRuyNTRb7L7o5Ax5E/asZA1sl91MtkGclO76
LR5D3gy2UsKs4oYhb8FfpRXjPypvIW9F2+E4yYhdQ7aFiXgVe3TWkLfh6bf3
Tp/uDdkOzlesWpP+DHk7qr6LPz0+dSt5B45dDA8TWz7kndj5Yva1RCuyqj0q
dJJHxjiQc+xxM+fbG4v9Q8934Tbb7/Wcg0PPd+HIsA+1J///uQPE5gyrincc
eu4Ag6id7mU2Q88d4a6TMXOZ8dBzR1gZbul10B56vhsGExUfHlIcer4bTsHt
V9g9tEd1D9TshleveETO2YNpC61MfM8NPd+L0vpXvXGnh57vxcB8m39Xdgw9
d0JGaYS0xvyh506Q71X0Fh829NwZxkV/bMMbqUeOMxSK4jNaU8mq+7DTw01+
gePQ832YsSI/hqc19NwFlxSm/3P9Rv1zXDDuvIcr6zxZdT/Oqp3R2O819Hw/
Iqw1Kz4sHnp+AB0G62Yv76PfXzkHELF60YOQy2RVV4ywyE5tPTr03BUOqz2+
7tUden4QEsXt7xZ8p9+/OQdh4DmwzF5AVj0EpfdhrsP3DT0/hLsWhRcXqJPl
3DBh/AXtEa/o58HSDTLSV5uiUskxbjio73+q1Yrc5AaxhDHKMqPJcofRkf8o
RKOWfr4sD2PSorUX9APIMYfxuNa0ZMtSctNh3Ch5zo/5RT+vcu64uOWVyNez
ZEt3HFUcBb/95Bh3PFFtNLCcTm5yh82FCgmX1/TzL+eBvwnlck8yyJYeuNRV
Jcce+nyI8YAab6/GYwVykwdE58xn/WBZ0PuekPEbP0JThWzpiYo/t5fYptDn
TYwnWHqrficrkJs8UVnpK/Ildh29fwQSLyDjLEe2PAIZh6C/cjH0+RVzBJZS
65q75MhNR2CXrlk6Ln4NvX8Upa2LRYPHkS2PYtSRJ/bG6fR5GHMUD2Y8v7Jj
KrnpKOqLPM0fc1fT+14wUzrPOz+fbOmF/otlDweumtH7XhixMmr+OVNykxeO
imQnPXlAn79yx2DD+mNzxJFseQyvnhoZh/8wofePYRNL/+rEYHLTMWi8Uc/R
mECW88aHyR8OFvPp893SG/nXHi25bEiO8caq/SvL0GJE73uj/NOTlas9yHI+
CLt86/49GbKlDwZOp05pKVxF7/ugQv5T6C5TcpMPlFo6pzu9M6T3j6PUJLv5
QwjZ8jjmXRs2tUOTHHMcbvxv++0bVtL7xzHG4tMDy8NkOV+4PRWYXRpPtvRF
0NWEgNhK0Pu+OB71SfaFM7nJFzv0ZKySx5LlTkDEQyB9/NQKev8E6tYonExt
oT8PY06AM1q0NXAxuekEvi85/WRB6jJ6/yQ2OkjfZ/1eSu+fhLPjD7E6B3LM
SeRcmuHOql9C75/E3d6t39X1yHKncLldfp55vgG9fwr3BmIvSo0jx5xC+tnj
nTtO69P7pxCMreNX/FvMWMIP5b86nfK8yJp+0Kzc9COwi/58N/PDueoJV58c
Ijv74X35V2Hq10WMw/ygx/MrrjhM5vph7o7OmBW/FjKu9cO8gIUqCifIHX44
fzBxnO4IsoQ/Phtm6ifH6tJ9fxyNNV2xcArZzB8+ne9eihcvoPv+MA/tuyuy
khzmD6sFbfUqD3Xovj9yy0KjrfeTa/3x4cGz5xnDyR3+MDln7vslk/4+IxGA
raoKy1cakDUDcGhL9MCZJ/PofgDijWxTbh8jOwdgosmR4V+VyGEBOBWV4vbx
hDbdD4Dxh22nuLfn0v0AzHzkuEtiIrkjANuWqzj2759D9wPhc6zy28Hq2XQ/
ELt2XU22mUQ2C0T5nNESLO9ZdD8QC4y8FQ1btOh+IAodci7PWE7mBmKCkayc
Uf5Muh+Iad9m7AqTJXcEwvte/4R3vpp0PwgJbMk76z/PoPtB2GL8a8l5e7JZ
EOZvnrxe4vF0uh8E4yvq45ZZksOCICHcd8+oQYPuB8E6wb1jzBpybRBSRxh+
TWpQp/tBUJ6dm3/TkiwRjJB/tj3xj+nvm5rBGGXi8vu7PdksGJoflfruf1Kj
+8Fo2jNlx5zj5LBg6LSm1X4fReYGY2+Gqqhi9lS6Hwx3i0KRCF1yRzAKP598
Z9qgSvdDMNJ7iij2kjVDMM96fKOTKNksBC3aBa+dVk6h+yGovvn0mE7AZLof
gv8WPLKbeEuF7odAt1fs1Qg5cm0IEqQSOe12k+h+CEa/flGcI1Cm+6F4FH5x
zTRRsmYoTKOqJ2+1VaL7odDSv6A69+JEuh+K/RJn0qMUyWGh4NVc13I6NoHu
h8Lvg0cZ++V4uh8KjXfRIbpm5I5QKFa2TxS7MI7uh0EYu2rdMA2yZhg2egab
KKUo0v0wHJ6R67VsNNk5DM3igsytoQp0PwzvMtoqtw8nc8Ow2TJzrn7AWLof
hvt7NwU8G07uCEPfk+Q03TB5un8aXosGMnRlyZqnUfdtTHd9yhi6fxq+Nrbr
O9XJzqcRFzw7M7BUju6fRkwyZ2yIEZl7Gs4Rc9fUFsvS/dOQ9WuUnvJsNN0/
jevPRS27pcgS4bie6ekxe4UM3Q/HPCPX9XwvabofDv9peXO3nh9F98NxsUfs
0YSfUnQ/HJrywcfu6ZO54RDufntlX4Ak3Q9HgeBEUW2jBN0Px3DRMXUPJ5Ml
IrD+c/TAMfeRdD8Cf2w/nkm7PYLuR8DW67n2NHWycwS0Sq71DviL0/0IhEps
sBv9RozuRyDyUtIcI1Ny7eCvP5KdHiocTvcjcMdsl/Z/E8gSZ1A1Mer262BR
un8GqeIHchp/DqP7ZxAeWbzsiDPZ+Qw2cTb7Vr2g/18MOwOl0oiQ7E1k7hn0
t/7i9GT/W8HcP4OHbH/zkNS/jDvOYDo3VOZG8h/GEpHguCI+Ku03Y81IWFgr
SVTkDjA2i4QbN1JFW9DP2DkSP3f+EK8o72McFom5TjvdTJt6GXMjkb3jZBD3
fQ/dj8T3/KMvK0TJHZEojmgId576i+5HYfaR1aJBq37S/SjU32nX+ObcTfej
8DnsgsGZ2B90PwpX/jxq17vWRfejMLXVUfN+53e6H4W2cbsHP+LJtVHYrFU9
y3bDN7ofhWWSAbNl5b7S/WgID7XftAj4TPejEdWz01S/r5PuR+PnVFWbaM+P
dD8aOU5VSuO6O+h+NIIil+jGeb2n+9G4Vtx0tvZvO92PhqFRn/ip02/p/qAt
10kcH/+GsVgM6sVc3gRwXzNWiEH1t+Yx25e2MlaPwfjW9MKc/BeMdWPg0nV4
i+njFsZGMYi5fS5jqcwTxtYxeB6MFbKmDxnvjsHx9Bbr9UHNjD1jYC3Sayt/
+i7joBjImO8JzRpdxzghBnd2l2y2T6lhzI6Badkr6S/mFYzPx6CvaLrvcJdS
xjWD36+OwrMTE3IZP4jBWD+9Knn/gMr/89sYyOWo9t/aymPcHYNvmetf1o26
zFgsFnvc1vHWe1UxVoiFjFT9tdjOm4zVY5Fp9qY83rGBsW4s9h2wdlf51sTY
KBb1o3fa6527z9g6FkYTV2ieOfKI8e5YTJxqPi522VPGnrG4tj/QplzyOeOg
WHh5vxwZ3PKScUIsUktbC+Y/aWXMjoXk+PZFHcZtjM/HIuLTJ6e8i28Y18Qi
w1V3bK5WO+MHsUh/HV8+hfWO9scirrEnc4dKB+0f/H5LREsyMz7Q/jgoDW+p
UFHtpP1xmKarukuV+4n2x8ElW2V8h+4X2h+H1ilKay/f/Er747Cb033uo/Ab
7Y8Dl7XJ0fDEd9ofBx9xh6Mh67tofxwOlgVfaFH7QfvjcPxD+inHfnJCHMaX
GDYaP+ym/XHQcV6/tKD0J+2Pg5b7dmlh4i/aHwfh50ht/+M9tD8O981s1prt
6aX9cagcHnBjllUf7Y/D3MdWVdbG/bQ/Hr6BjfM+Lxmg/fEwSdB4PEXvN+2P
R/iBzRsm6P2h/fH42/NdZfjSv7Q/Hnf2Ds+XMflH++MhMn+SaqmWyHVmfzz+
JSdMnXyB7BkPufzOYfaGwxgHDX69o8LDsc3khHgkTHEuqt8jypgdj2UNc45p
/iafj8fSbSa61YnDGdfE45bel/ulOmKMH8Tjh93ijgn3yW/jMXmPDFvGS5xx
dzyCYle/Fk4ewVgsAZVX+zWU6sgKCbCYWVno6j2SsXoC0laYbKudLcFYNwFl
Kt3tq9+SjRIgo1l4ST5HkrF1AopThCOM7KVofwIMtG8//qc+ivYnIHqqh9i+
L+SgBKzwWr4yr1ya9ifghcgu9fvRMrQ/AbXq+2dPdh5N+wd//X9at3jGsrQ/
AVMqts+2VJCj/QnQeOiQGx9GfpsAu0u/jpz/R+5OgHfalTe3vMfQ/kQoRgUK
3/wiKyRik72z5mQvedqfiBGejxZG9ZN1EzHd4t6GNf5jaX8i5IVmca6jFGh/
IhZ+PsOXSSXvTkR5zus+Iy1F2p+IBD1t3zmV5KBEzI980PZ68zjan4gAq9To
E91kdiImGVenT0ocT/sTITLO7MUz/Qm0PxFTVHU+PWkjP0jEzbuKmjoxE2n/
4L5nV6+NMFSi/YmQ3vyJf7SXLJaEOTUOjaxSZdqfhFO6nU/5HpNofxLY5wsP
XFqsQvuT0DYzUvad6GTan4QDr74s295Mtk7CS3H7A4YFU2h/ErYuvj/yJVRp
fxJsf3Tf6z1LDkrCu3OSLeLqU2l/EsRair9NTCOzB+0af8R8rBrtT4LzywPb
BNHkmiS8uKc8e6vsNNqfhJ6wl9J74shvkyBxl1PdMUGd9ifh96LIi79ZZLFk
TAt27L8yT4P2J6NG3WmdQTVZPRmJ0QpTUzZPp/3JiI+flPXlG9koGQtcfAu3
Rs2g/YPvp1358FNbk/Yno4Br2ND6kOyZjIWJP8MX+82k/cnwNrozf5K2Fu1P
hsezi+yiNjI7GcaLYvJHps+i/cm4kWHZsmHLbNqfjE9v7O7zlebQ/mQsXyAh
v7SN/DYZ5QJDWfXiubQ/Gf0mXobh/tq0PwWio9Yl1M2eR/tTkIzzGhfTyeop
aLA6qJ4hM5/2pyDsqotrbADZKAUCD59DRf1k6xTIf7XVFjmqQ/tTIJX/Yg2n
m+yZgrEj54heOLqA9qdA6Zy2jtFvckIKTvOlHA8E69L+FPiw/7tlIr+Q9qfA
7+two88sck0KOrb+cfPRW0T7U/A+9zBLson8NgVPM190XjygR/tTIBx1WyNb
ZjHtT8UD2aU/XpWQFVIx/PC2W8l2+rQ/FQs5szvbpQxofyoC7wcEfrxGNkrF
pRbF5JtHltD+VLD4NQoZOktpfyoi5MRaIrvJnqlonnL8SuXVZbQ/FRXljf42
YctpfypirTPFjtmuoP2p0J72KEpjImh/Kjo01V8MhJJrUhG3zNXtfh/5QSpK
XLfaVR1cSftTEXNIfPWzd+TuVPxaoeql52BI+9OwWWJ6zadWskIa3k+5IpR3
XEX70zD+38RtVR1k3TSIDq9MHuNuRPvT4PZWum3SP7J1GhIb5u3/E21M+9Og
0TtJpVHdhPanQbWVm827Rg5Kw8V3D7cX25rS/jQIIvUj+gbI7DSMWhU1syDX
jPanYd+T/aMfr1lN+9Pw+brmB24/+UEa/uq3my0TmtP+NHwIr2Jd2LuG9qdB
JQZbdNXX0v50mNx9fO35O7JCOsJshVPvC9fR/nTMaI5oXuq7nvan48CL3umw
sKD96UhevtpQVMGS9qfDoLl2wdZA8u50PDUxunDlJ9kzHd2cWTP092+g/em4
mjLb//MbckI6Wpfutfm8cyPtT8d42atPLV6Rz6fDKntl22wHK9qfjgGRh18z
OsgP0nHw/g3tK+7WtH/w+7vD908X2UT709FZvtN3RxxZLANvvkh6qGja0P4M
/BDd59NdRVbPwFwt7YMi9ptpfwbkXkf82iG6hfZnwFfveeTcQrJ1Bi5XB4ZE
WW+l/RmYt/2rXLaYLe3PwN9X1Sv9r5CDMhAjtWDCZo9ttD8DmQ/PBK3SsaP9
GVjj1XnQ5Rf5fAb+c5pc8a1yO+3PQHnF9R2/o3bQ/gxYrw00P++4k/Zn4OyB
h6aqU+xp/+BeUYfZe6LJYpnoVDPtvya6i/ZnwvCG7CF4k9UzcUUxt030B1k3
E0W2oWsmuTnQ/ky45u9axf5Gts7E9Jmuo0o9HWl/Jo4oz4/d9ZvsmYlCibUe
t0N30/5MfIlwHCE+fg/tz0SQg56tNo/MzsS0J0+W7165l/Zn4r/YkebXn5Nr
MmH73/nn9r5OtD8TNW8FmrtVnWl/Ji4Mc1v0oZbcnYmSWvVO2aP7aH8WZgXX
je6b4UL7s7BOP2zjzZdk9Sx8VNDenJa2n/ZnISP6Y2nKtgO0PwspR1T/tE91
pf1ZUEJAfcFn8u4sdCpv+E+s8iDtzwJX6lG6etIh2p+FurrQsSn6brQ/C5dX
1/M1i8jsLDTc3F74dMph2p+F13MO6VQlk2uycL1BRPaXvDvtz4Jo8zpudCz5
bRbSXa1Gc8Z60P4slB71/r0hlSyWjQ4/u5d8NU/anw3+hrIHTcVk9WwsF/iX
PcER2p+Ncu8RWq0PyUbZeLVsW8DwQ0dpfzaCJO592intRfuzEfYwy2GskOyZ
Dacz50qWWh+j/dkYfy0/dOAvOSEblaafXN2E3rR/8H115ZZyBx/an41tp/dr
D590nPZnw+v83pt7W8gPstFZVP1jVJYv7c9G1Bo32QlOJ2h/NqrFnh8/t/Ak
Y9EcOF5zEPyTPMVYKgenjH/Pn/WWLJ+DCR5Rz+c6+DFWysHW+vcyux6S1XIg
vThYp3qNP2OtHNzzn/LZ+QZZJwf8qQoBBwwDGBvk4Njzzmdvq8mGObj9YVjM
R5NAxuY5eBiz9k1SI3ljDlpmm90dbhvE2DYHYrHiI9d+IDvkYFS93e9w32DG
LjloNTdufz42hLF7DuafsK7aUUz2ycGkL44751qEMg7IgdUYe0eXH+TwHPx7
gLU6GWGM43LQNnuOD2f1acZpOXhbX6fbMUBmDX6/5lfPTSwNZ8zLgYWYmfKO
QxGMS3LQ+GtZ8tN5ZxiX5UA4cmDduR5ydQ5CRwkPj6qJZFyXg72i9caySVGM
mwf3i1yY3u4azbglB2z2XbNnGjGM23IwLs5q3ONk8sccHJFIeD8gHcu4a3Bf
v4axfTC5Pwe6vp+2KA+LYyyaCxGX7C4jP7JULroL3M/8FI1nLJ+LpI8vLUxO
k5Vy8abnjNKGsQmM1XLxn+3uwHm5ZK1cdIRVvPqnk8hYJxc7AyrNntWSDXJx
re9BziuHJMaGuVisvD1Va1gyY/NczBpz9HJLHnljLrYc6NkhuyaFsW0uKrOS
Gjt+kR1y4Xhdb15YQSpjl1zIv9yfJrs9jbF7LsKUJ09gjU+n/rmwGnArdnxM
DshFieYdZ++MDOqfC9uZ02wknTKpfy5WOu1KM9DLov65+CqtenihTDb1zwVH
P2jRtA9kXi5ujhbqJe/Jof65uNFQ5lz1lFyWC/HgCZzpG3Kpfy56e7gSL+vJ
dblITx9p8W81i/rnot5Dp41VT27JxcIz1i2vLfOofy5WjSwd/ugp+WMulpRf
e5O6l039c9G+x6jCrIfcP9jD5V7a34h86s+C9tpZ5k/UOYylWNjz/M/+H1Vk
eRZy1/E9DzoWMFZi4Y7FulJnSS5jNRZe7W7eLHqerMVCXME2bzvHQsY6LDw1
vjIpdTyPsQELH/uUlzxrIhuyYPzoZ61JdBFjcxZOVEtfE7HiM97IwnW56+O1
JwkY27IgnxXwsfcj2YGFh33hO0MqhYxdWHiufLVKJK2YsTsLDZn2hquXnWXs
w8KI0iuc0rPkABamViz4s2nGOcbhg99vwW4b01xyHAseFpedsyeXME5jwct+
UuLRbDKLhbbPdzrbp5Uy5rHgdmv1/JF8cgkLNUH2b7r1zjMuY0F19aHldbfI
1Sy0rK4wzNt2gXEdCxYzR5Rl/CA3s5C/QmXZg+iLjFtY6Oq6o+887xLjNha2
mD3u9XpI/sjC4tYJ7GmnLjPuYsEkpXPtmTlXGPcP9h7P7brfShbNQ02U3WmV
1DLGUnn4KVUqEmlzlfrnoVYgucZ0Yjn1z8Miw4rd7q/Jank4kibctrD4GvXP
g8virzaXAyqofx7m1F3JUrerpP55qA4139iscp3658H57TPxkhiyeR6ezXnw
5NaIKuqfhx73yGdafmTbPGRUhdZ0/SY75EF57cSfeieqqX8eOH44OXbYf9Q/
D6MkUzWyw8g+eZA/6+nyc2wN9c/D73kTI+bnkcMHv96faeGHFt2g/nn4JqWo
23CHnJYHo7phGnv23WTMykOM/eHGLZK3GPPy4LTV8cRNAbkkDxP++ds32tQy
LsuDZ4p/VKzYbcbVeRDcE0jrXCLXDX69bM7D5oN1jJvzcPPnutbkWfWMW/Jw
teT9dM5nclsezs1xFU670MD4Yx4UXipG6QXcYdyVh9TMcT2SmxoZ9+fhzpjU
pTVz7jIWZcPX5Zer2YgmxlJsvBTxqb5zjCzPhpvz3tiwL2QlNg6Lbu+KdrrH
WI2N5p/5eQNvyFpsFLe3j37r2MxYh42Kxp/rHN6TDdhoGv5SO+bgfcaGbOSa
/VwW1kc2Z+PQGI2qPWEPGG9kY/FPq1tGyg8Z27KxzrlH07CE7MBG0fM7UcfX
PWLswsZV12ov2c9kdzZ8jAeWq8Q+ZuzDRvT3sWo39J8wDmCj9H2QqeZ7cjgb
v/z1bzinPmUcx0Z2zaaCQssWxmlsTFo9p2e0zDPqz8a+0gPV1xrJPDbWTPVS
e574nPqzsUemb1Wswwvqz8Y9rZKD4gtfUn82ZG97yTjIvKL+bKzddvjivU5y
MxvD99ROhHMr9WejRZVtfOcFuY2N71mVQQU2r6k/G1brd7PfNZO72Ci//Vkl
b2Mb9Wdj2EWu8q+HZNF8cP4+ONFn94b65+Pr4YZXt96T5fMhe2N9pu/Rt9Q/
H2y57scLJNupfz48X9z0lcoha+XD4PUI88lL3jHWyceleMWHkS1kg3wcbYiM
OXbyPWPDfJxihTb/nd7B2DwfY5okn618QN6Yj8vthS2OIR8Y2+bDKdeuL3TZ
R8YO+ZCv9dre3Ed2yYfKx3c6zlc7Gbvn40BwQsmhgE+MffIxV1RSS87iM+OA
fITIrxzuPvUL4/B8OEtca6joI8flY9X1upVTn3xlnJaPlPbgQocd3xiz8pF7
K2P8p/tk3qBjFKbXrP3OuCQfnVYSl0Vvk8vyUSYftv26WRfj6nyI1J3aMq6B
XJePYxrVuZOtfjBuzkf+M70vP16QW/Lx3zXd8+cOdDNuy4dV1I95nv/IH/NR
fln/4Jakn4y78hEsrW7mO/8X4/58DCtQ8fjbRBblQLBcNOCvZw9jKQ4OSrt+
ylDpZSzPQXnyQsWBOrISB+PPK29YcqKPsRpn8O+z7M9+uv2MtTjo8p2++Ns3
sg4HT6XkgoUlA9Sfg7+rt+q1ef+m/hzs37ygtsTkD/Xn4HvMp0aziX+pPwfi
1aMlG7+TbTnodbzs4Nr0j/pzIGmZeqrQVqSK6c/BmvdtqjZNZHcOxqg4dVqt
HsbYhwPZk6dflt0gBwx+P/vOFuQZizIO5yDMc2HBjNvkOA4cy7x/2lsOZ5zG
wfV5U5xdnpFZHNT+dkre6SLGmMfB7o7yN3Z/yCUcFI+xO34qQZxxGQd7+ufZ
t2uPYFzNgYLGY1fBXXIdBwFHa3f2eIxk3MyBS9rlx28mSTBu4WDk+cm7E+rI
bRyI8r+EzDohyfgjB/AKLG/QlWLcxUHl1asBGd/J/Rz0G5rbXy8dxVi0AI9K
l3zacVyasVQBqieUPsw2k2EsX4DeqpedRcqjGSsVQHTKjOmCbrJaAZIXpfIb
78sy1ipAl56pW5adHGOdAqy/eLskrplsUICpraaJz9aMYWxYgG9zU/Rja8nm
BSjYUO/WYCbPeGPB4N/Xp1/nNJBtCxDz22ivgfVYxg4FSD272Z71iuxSgP2N
CYf6DypQ/wLg4q3JO0UVqX8BeNukaz+nkgMK0NBdmlazcBz1L0BhtnWu6CNy
XAFm64nX3vIZT/0LkJ12s01XfQL1L8DWUuXz+5vJvAKIR937ERU8kfoXIPBd
76bqZUrUvwBp0fJxWgPk6sH//jPdXD5fU6b+BUgpqCudHzKJ+hdg+wy57VOs
Vah/AbZcdvF6NWMy9S+ARqH/8oxhU6h/AWZJ96j6vyZ3FaAiIXb3C0dV6l+A
dfdGxi9pIYtyUS1tW9ZlNZX6c3F90lV15XtkeS5GhfY03NmgRv25MLx33FH9
EVmNC2PvU1b6O6ZRfy5UWJtqZ3wk63DxPextySgfderPhesLo7vDRmtQfy5k
p4bzZnDI5lws1r/ATTecTv25cHRuljrxhmzLxYXOVT87w2ZQfy4WBhoclVyg
Sf25WKq7/UzPa7I7F7uyc+c8TZxJ/bloXWuzvnm9FvXn4q6dfcdImVnUn4tS
eaFoThM5jotPFa8uV6XOpv5cuMVrrkp0nkP9ucj+7fx31bK51J+LcrUgz97x
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
JlmnGLx/EttydS9Q/2JsHGfjlnX3QtX/AFYQzng=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJw12Xc8lf0fx/GSskpWgwpJZTQkLZXeSYUSiTYKZaUkGsjeK3vP43COg0Ol
QTREQ4uSuzSUVKgkq9L6+T2uj/ufHs/HdV/nc75ezrmu62um9RHTAwKjRo3q
GDNq1P//Zf7rWUP/XmP+lQF3tqfommPS1xkrIWa1EJ8zaiZZDcrc6KvbWuaS
F+HWTzG345sWkJegyZ99wnSeJnkFnN+59swcs4S8GtEbM6vWFy9j7Ass17F4
VKuqTdZFQcznp7GnV5H1YFTy+W9EoQ55A1q6vFqu7QBZH5GFM7jx+mvJhjhS
p/9mkooueTPcvqSlSH0f8RZYtM9+YnRxHWOY4DMs6wMO6pG3wnfmVm0H4fVk
U9zTWcMpyhjxNjwMupT7bdYGshlGLTEQfpE1YnP0vH+3YbT4RvJ2LD0/FP/9
6Ih3oILjrb7p3oh3oq/2ZkiAnD55F4Ln2KQo7RvxbkRJz/vOzhjxHmjMXjLN
v2HEexEpJh8+7/eILdD5LlZIStGAbImQQNmb6atGbIWHqZsDF5iSFfeh88uR
p2r7yTn7sPVi9LwvDiPH9+O5wXTph4dGju9H0nz1zUqOI8etcWFw/U9t65Hj
1lgpPVh9wHzkuA1mzRJs+7xu5LgN2HNOu05ZMHLcFp22IftVZUaO2yIpRjLf
ZpDWo3gAQWYHzQSfknMOwG4av3ZD2cjxg5gSY8+2CR05fhB7BT5OirUYOW6H
ksiGOwIaI8ft8Dj8slTXP/r5K9pjOefRuOMPyDn20Dx9KfJJyshxB8wJ8z0+
33rkuAMqXj5PLFYdOe4Im/unGk583UDHHbEm6tbi8vNkRSf4n64TCjo+ctwJ
Psk73ootHzl+CPztd8/b/6Dfr5xD8FSoeltxiazojNdjjxhNPz5y3Bnc9EP2
RYtHjh/GZJ08Xb8e+v3NOYwotS8pF4vJikeg4TbhnbX9yPEjCLw9Z3/GLLKE
C5SvlqmcfE2fBxMX9O/u0RBNJce4oE3+h+WBbeQGF5z8tzg2fQJZ4iiuWgfx
qm/T58vkKHgKfRkv/MgxRzHb6tsxwVXkhqMon7LecsMgfV4lXCFUHXyJX0Y2
ccXbjI2Shk7kGFcs0Xu1UnkOucEVWarNW/Tf0udf4hiqq+XOXs8gmxyDyYdq
xeSd5JhjkHvoU9kkQ244Bu55MQHBvDV0vhse9SbcNppBNnHD1M7oiMQU+r6J
cYOUe6VQpwy5wQ0XN/cNmMWtpvPdsWv26OnvJcgm7pAQ/radHUPfXzHuKFv6
Kz9DktzgjpWvf2r9F7+Szj+OzBK3g3unkE2OY1B3/avFGfR9GHMci3WeBdkq
kRuOwztfPLu/cAWdfwISc2/WdGqSTU7gQ97gF/3q5XT+CYw34YRONiA3nIBT
srnz9mb6/pU4iTnPV/SIHSCbnMT7r/M/rBhYSuefxCFro6K2YHLDSUz6u0VV
WI4scQrRAWmvivj0/W5yCgsGp7c+1CPHnMLVca/fHX2pReefgsTvnRsS3ckS
Hug9kC66QoJs4oE/jerv9hYvpvM9cCy/cskoQ3KDB6rUsxWUOun6IuEJjWYl
jxthZBNPnErOeP1SnRzjCf3FljzXR4vofE+MNXQX8HMjS3gh57+1/42dRjbx
wuv77z7+rdGg870gtcevzuEQucELrp52zeumkCVO4/6u8edkQhbS+afRwIt/
4NZG18OY03A3KviSC3LDadSfm3EjMXc+ne+NAWGLKoOxZBNvnEoVkr/kNI/O
98YSLe++5iZ1Ot8bL7tnz2CBLOEDBScPU8lSNTrfByI3vsyeoUiO8cHg5BTh
q/GqdL4Ptr+6bPRZhCzsi9JYsQU5/iqMVXzh2PKtvvEPXd/1fZF8xW3RKU+y
vS9kEuQton/NYRzqC1v/Um0RbzLXFwPXS3hvBch3fBHq8SRgYvhsxh2++B66
JzFcmizshzT/BYWG2co03w8Kzt+CNs4n6/shyep7z8nqWTTfD0Jbp5Q1G5ND
/VCpZxexs12J5vvh4c9XWwY9yHf84LD85T2ONLnDD6L3s1ps+XQ/I+yPSRpp
e2ZvIqv4I63z+vK3nYo03x9nfS4cjAkn2/vDZqjjvdp8cqg/1kcbhWzNU6D5
/tA9N2OpYI88zffHm4I/6pYgd/ijbGzzC+OEGTQ/AP/qjZ/f/TSd5gdAvtug
pWoDWT8AJ99qXpbNn0bzA+C1aePRxnHk0ACMWXVJ9amTHM0PQKvM+XmTm2Rp
fgBGmez/ErSG3BGAgLVXhSbzp9L8QCR2HFx7WYGsEohfzcbhlglTaH4grOc5
/BkSI9sHwjxF461P8GSaH4jWTZrc1jFkbiAMK099Gx84ieYHwuhfb+jQOHJH
IJZerrZLj5Sh+UEQmORa3iZDVgmC6eudN29m0/2nfhAWzU6erDmfbB8EdcMt
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
HGxRU0rZKuHK2DoHPZNcv/+LITvmYN+X8IINk44xds3BUJ6s65pMskcOZkkE
vBFUdWPsn4M7LorLzl0mh+fArjnXx2azO+O4HDj6J0ctaSen5cB4xyzBDb7H
GbNyAK8ne84rnmDMy8FbS05HRh35XA4KNuCN0pGTjCtzUH5BZ9/BGacY1wyv
5+UDt7AGcv3/12upUBrqwfjxcB/VOItf6z0Zt+TgQOgujXhhL8ZtOWhv08vL
aCB35SA4TbRJJ+s0494cjKteN5R71JvxUA7M+PuOfDX0of65WHrZ6YXKJF/q
nwv/xA3rhkLIUrkIMblqJ/CXLJeLuRwjm50n/Kh/LjpP/RuU7ier5cL7vNIZ
Izd/6p+LibqK+vI/yNq5OCvr1pftE0D9c7FFp376F9FA6p+LghZMnJlGNs2F
/dGGlh3zg6h/LsRWv9jFryVb56KnpX2p7r5gxo65OHrwWO+iUSGMXXNRqTGt
M4NN9sjFkOHFXXlGoYz9c6Ey867TwV/k8FyUHZq0VJgfxjhu2I/21hUdCGec
lotuV7NZ7koRjFm5SBa9ZxHWTubloq9UIFq8OJLxuVykC+ON+qkoxpW58NSJ
SRfZHM24Jhcft99WbVQ+w7g+F0vWvjzTPDqG8eNcrBv7lGXrRm7Jxc6NY0xU
u8htuRjDmVO10iaWcVcuJrBnnj/fSu7NxWDQ+eJCqzjGQ7n4HmnWuPQdWYCF
0gNL/rk5xjMWZeFFq/Uj7wGyFAslX8XTjwQmMJZj4a3wKD+bKYmMlViw6Zrr
dIJPVmNh3U9rmbsGSYw1WXi/db/4iU6yNgsVVytv50QlM9Zlwf7+griDS1MY
G7KwaZVUYec7sikL0gqflm1OSmW8m4VRn1btP2uUxtiahcyuoPWrRdMZO7LQ
7XhEdNJ9sisLC+Q02yzjMxh7sHBXSkNad18mY38Wfk299e+DZhbjcBa4GeYL
TohlM45jwXF62NYZXeQ0FgwMHLn+djmMWSx4NqSqLHhF5rFglyVtpbI9l/E5
FvaaeaiGPSZXsjD+vrSUgymLcQ0L+ueKzd4+JdezoFyQ/U7MIo/xYxb+vh7l
PKaD3MKCrs1Xq3fH2YzbWNjxdnzvbZF8xl0s9K2bMfthDrmXhTGzHt2XXlXA
eIgFjjY/4dILskDe8M9n7bjnPhzGonk4v37bmRQVLmOpPPye4Bw6pZksl4cj
Th4rT4YWMlbKg5Mmq+vVGh5jtTxMGm3836HfZM08lJs4GRheLWKsnYd/8o+T
MoKKGevmwZ4/oBZhWsLYMA/bPlZH68zmMzbNg+XXbJc3f8i78+Ce3FOc/rKU
sXUecgpWqD/cV8bYMQ9W7PjWkGayax7OWfAQZ3yWsUce/Dud9cbeJ/vnQfKy
TfTPTecYhw+/n6txbqGPyHF5qDsSL3h/+3nGaXl4GlYr3PqWzMqDwvX8Ca9c
yhnz8hC8e5dd25gLjM/loabNaNn4dHJlHq4JSrqeXHqRcU0epjzc/H59M7k+
D0F+PasTPC4xfpyH1pXB4oGzLjNuyYP52YtPlzaS2/LQbvpb8FFABeOuPCQs
CRFyWVnJuDcPffLbDHR+kIfyYKZ8VMeq8gr1Z6PZLNjxp18V9Wejq8fXXsu4
mvqzIVkd1Ltc6Sr1Hz4uPKVL4xdZiY09E0/s29hyjfqzoVeWZ9xkdZ36s2Ed
dn7qjadkbTYUaoSPjza+Qf3ZmFuj4FVyj2zIxg7bOd2vNtVQfzb2NnzTLX5E
3s1G6LGpPM0dN6k/GxsVF0lGtpEd2Vhvs1y16Wgt9Wfjq/KMQ3PH1lF/NkQv
uivlZZD92dA6bOlwYPktxuFspIsFLI96Ro5j47mYmb326duM09i4q+NwOWrO
HcYsNna/kmrmNpF5bFw9IWfDD7nL+Bwb8lMv/L6xpp5xJRuto7i6wn/INWzU
nMh9XXDtHuN6Nuplb0fUhtxn/JiNZB1P+TDzB4xb2Bj/Z3fkDNWHjNvY4B4+
3l8k8IhxFxs5LbUcqzZyLxtiaz6laNo2MB5iI+55m4Z7C1kgHyWsctWJZo2M
RfNx46Nt1dRGslQ+RMd1N/K2PmYsl483QmuFW5+SlYZd4XjpkcUTxmr52Kz7
ejC5k6yZD8/NH1jbTjUx1s6HRNtqa4UJTxnr5qNC+nHR1HyyYT5OpZfct1jb
zNg0H+JFE7sntJF356N6Zuk0g5D/GFvn476zuqHGomeMHfOx0a7Y4n0r2TUf
czzPaUTEP2fskY8LIVPT129uYeyfD/2n+qdWiL5gHJ6PsJyC85EPyHH5OHlx
/oaDSS+pfz7ESgz0u21fUf/h+Vs+9ButeE3987HpReW5UulW6p8Pw/rG6Wv6
yZX5eHWAE5Tg/Ib656P4gPZDo3ZyfT4a3g/K21i+pf754K5Sf/H5BbklH/Ln
Q6YIWrRR/3xs7VfLrnlL7srHSvMnP3Qd31H/fLBHLz2UM0geyseOWaeFvge3
U/8CeCl2s22mvaf+BVCZXNEzppwsVYCQqt7DgyYfGMsVoKSrwm93L1mpAD0/
wo6YpHxkrFaAlwZXHH7qdjDWLID0psXxJ3rJ2gXQNlgv1F3QyVi3AG886974
7utibFiAyMvGa80VPjE2LQB3w82dse/Iuwtwc+fAob0lnxlbF+BKZfrb115f
GDsOv57xUeiadjN2LcA9oaS1Z+d/ZexRAOe/k7qKhHoY+xfgdnVq/FlPcngB
PFq3PR/VR44rQPGMIzlnnb8xTivA+IWTvF5+IrMKkP/C5lyacy9jXgFU9YPX
jusjnytAnG9f+wqvPsaVBcgwfSK3VaSfcU0B9saEq9qnkesLsPLFkdkZCwcY
Py7AewXeoOhdcksBlvSvsHpycJBxWwFeSywcPUnkO+OuAkSoih3oKSX3FuDk
kW2jQvb8YDxUgF5p01W/xH4yFuBATE3ktMsNsigHdSY7VcS8hhhLcbAndXtJ
z8pfjOU46J/bFrFx9G/qz8HAFLu9y+6T1Tg4tLz1v46MP9Sfg+Gf2JugY3+p
PwcfVbpDVpj8o/4cXC1dKZ4iO+oG058DT+PrSZuiyaYc8Kf53NsybjTj3Rxc
MVtVV+FHtubABwc2548SYOzIwd5yqddqAWRXDr5A46ytyBjGHhxkiN294hxP
9udg0MHz8v6ZgozDOQjbLTPP4jw5joOF/7Y5nTYYyziNA8n1L3PevCOzOFj6
1fBJvv84xjwOLNb6fvo8W4jxueH5sdJXmh+QKzlQlf4uEOQhzLiGgyPzN3vI
zRNhXM+BzkOHp5Vt5MccvJed/CA8S5RxCwfLfvTPLrMSY9zGgcu/eZe3zhnP
uIuD8E16J5J7yb0cFL5Y6sGrncB4iIPR0+6MuZAhzliAi9INkhFtHhMZi3Kx
eNncttKFEoyluNj8ZcBsfj5ZjouB/7p0R8tLMlbiIq8l6M+6NLIaF6+Sq0PE
5aQYa3LR6iiR7pFJ1uZinHtlMUtZmrEuF1cfSvbllpINuXDsE3FK0JGh/lxU
h7S+Smok7+bCkPXlwy37SdSfi2O3Sn7qCk6m/lxw69/ZqbHJrly0fBq0y9Sf
Qv25WLvr1LTqb2R/LkSiWhOLsqdSfy6MG+zfRZjKUn8uGk21JfxF5ag/F5IG
/IXnb5NZXGyKfmazPnwa9eci1lT3vZXpdOo/bPvXouqKM6g/FwsfLzNt6CPX
cNG39KWdxwN56s/FmV9jNMxLFKg/F4taqz7eMlCk/ly8Cdy/W/U6uY2LyRNu
NXSumEn9uZhvOq9F8RK5lwuv+tUVH5cpUX8udnSqO+ysIgsUonX8ICtKbxb1
L4Tg+OY2VgNZqhB/fJqcy/cpU/9CpH8O2tHaT1YqhE7ft5C1UbOpfyGu1ubf
+Kk6h/oXwntiH2fuPbJ2IX6X7q375DKX+hfixDHNOLtpKtS/EKM2WHhW15NN
CzFjoUWnhI8q9S+EfbjHxuDlatR/+PX61MXWfSc7FmKP07krzlfUqX8hArW/
/JwfNI/6F8JG2y602Gw+9S+Em2z2Nmm1BdS/EJnmkR5RYxdS/0KcKbDesfEj
Oa0QxxoN9S7ZaVD/QhSsnPhnaiuZV4g19f7f3+xaRP0LcWRW6liVZ+TKQlhN
v8EX2q1J/QsRemLSkrRWcn0hLpeeTxuyX0z9CyH6cQVHb5DcUogJss5fEkK0
qH8hWJeEG4VnLKH+hYhpuxx59SK5txB+rlj+1Gwp9S+Ekuz9h4e+kwV40H97
bElB1jLqz0O8zee1eYbLqT8PlRMcbgT/IsvxcLO9zMft7Arqz0ONlt2W2EPa
1J8H86Kw8WPmr6T+PEw4MJvf00vW5kHLT0/P/+oq6s9Df8uksW/PrKb+PDyI
MzFbZqdD/XmIVHh6r0xvDfXnwfDpBqXVMqD+PMjV3v66L4zsyMOMp9dCXoxe
S/150P09Y2vdabIHD021Bw4s+0P250Gk7V7iJl9d6s9DzJqTLtOF1lF/HkLy
u9fXxZLTeJgtlr3AWlGP+vOQcCVLQuI8mcdDw8mI/M8G66k/D30Nqb6T35Mr
edB790imJHAD9efB5YXzlQaVjdSfhwuuQZWsRvJjHo423Ni03kef+vNwaP7+
vBeLDKg/D26c/d/DOsldPGyrbgt2LzCk/jwIDVbl1tpvov48LFy7tSxLYzP1
L8J0XuzKeX/JokU4L7B+IKnRiPoXwXZZyHWRoi3UvwiDIqGVZeHG1L8ITX9r
c/cuN6H+RdAskBQs5JM1i6B0YH+QucpW6l+ETebVzR75ZN0i/IkXsdScY0r9
i/DlzOKVSTyyaRGs9gUb3dDcRv2LYLx6zopHV8nWRZi9vPzQyy1m1L8Iz/ZO
mzvuHdm1CE+dQk87eppT/yLUHYjarzJ1O/UvgoG6K8eqghxeBFGv8+MXWe2g
/kX4WXhW56rITupfBHermLeqFWRWESa+1U9Odt5F/YsgpdMzbt7c3dS/CClf
NNvHfyBXFqF7n9D3fbw91L8I1gqps0zc9lL/IkiLHXYdo2dB/YtwyuP21HxZ
S+pfBK/X8Ns3QG4rQlVFiZn1f1bUvwgbLTLWfrbaR/2LsPNT25xT/5GHinCW
d3+ui+l+6l8Ml7dKel0NZNFiGDl90xy9zZr6F2P3udt2j56R5Ya9VnGqi7UN
9S9GqFgP/n0lqxXjQ5RlcaqfLfUvhvsg5/veKQeofzE8g9VS7c6SdYtR55zz
4ZnxQepfDOGDIdMae8mmxXhjecnqaJod9S8GJ0H14YsN9tS/GJuPf/Nc/IPs
OPx+7tj7ZPAdqH8xnHxivq90dKT+xRj3mCO9XN2J+hdjxpRfcpe/kcOLYTz2
s1t79SHqX4zO31pnP5xxpv7FqJrgENNpd5j6F6PlxLnxshuOUP9iHK2wX7R1
kgv1L4ZzOH9CSzi5shghCsqi18Ycpf7FuKu7vW6qL7m+GDPDD8cNv3HqP/z/
N+73jgkgtxRj/QM983eix6h/MS7dv82RSSJ3FaP7QUsDZrtR/2K8FvX8FXiZ
PFQM60VFKv+M3al/CSR9k5c8/EQWLUG/6Me3kpHHqX8JvNxWNndpnKD+JUhx
ecPzaCErlaDqaHH3u9CT1L8E+Z3SCwxXnaL+JdCOcxlq7Cdrl8Bztfe3nHMe
1L8EERfF6165e1L/Eiw3GNQt0/Gi/iUQiNW0WDvhNPUvQekqI80rb8nWJXjo
83uSQZU39S+B3g+BtCmZPtS/BH7O3E1qur7UvwQblcvTp1SQ/UvQtmfMP6fF
ftS/BDcrwh1wlhxXgi3pR4P5mv7UvwRKvmbVDZfIrBIkzeYvq0EA9S/BQRf7
D1kPyOdKwDFICgmwDKT+JYjM2FEc1UeuKYFOUcfVF5FB1L8EPT9fCUepBVP/
EkRPja64cZ/cMrzeDN7ntGMh1L8EWlyRs9oKodR/+P1Y5U6sfUTuLcHXmxel
9gSFUf8SDB5c+0AZ4dSfjwe+QdYbR0VQfz62fH8/oauOLMXHhL6vaktiI6k/
H38Kc1ebWkdRfz7eSHcPOa2Ipv784ed7n638yWeoPx/WuytcNwyRtfl4XPXP
eZFrDPXnI6RMviy1i2zIx2b3FyluB2OpPx9vv048/uI9eTcfB0V9jDvs46g/
H/Y/1T9f+Ep25ONn47P/rDziqT8f/nEl9gIiCdR/+PXvCNdVppP9+XAU9Ows
0Eyk/nw47enmv39AjuPDUutXQ5JzEvXnQ/yCU3+LZDL15+OL0teSJ5VkHh9y
aX9D8+xTqD8fksH94oenpVJ/PiRMdz7c8YRcw4fIYyvr4Jg06s/HuB6Oh+K2
dOrPx7Ylc94ZTcug/nx4PjaLXNZJbuNj9dO0eKHqTOrPx6+NvZs6k7KoPx/C
Yx5uEDmRTf35YPnn8OsX5FD/UgSnl++1zCeLlmJ57cSeHQq51L8UveUnLBoy
yHKluNKsvvXtDBb1L0XDcXWtfBZZrRQrnrAWLVPPo/6lGJD3XXX+Elm7FDvY
iyYt1Wff+B9yjWnE
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.4009555224918222`*^9, 3.40095552603692*^9}, {
   3.400958010709704*^9, 3.4009580153664*^9}, 3.400988125113203*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Ce8phvoB+cwN4UzhyP8bhVHxL/pUmbc=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", "n", "]"}], "*", 
    RowBox[{
     RowBox[{"r", "^", "n"}], "/", 
     RowBox[{"n", "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4009879000495777`*^9, 3.4009879463060913`*^9}, {
  3.400987981757067*^9, 3.400987984280696*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "0", "]"}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"A", "[", "1", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"A", "[", "2", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["r", "3"], " ", 
   RowBox[{"A", "[", "3", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["r", "4"], " ", 
   RowBox[{"A", "[", "4", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "120"], " ", 
   SuperscriptBox["r", "5"], " ", 
   RowBox[{"A", "[", "5", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox["r", "6"], " ", 
   RowBox[{"A", "[", "6", "]"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "7"], " ", 
    RowBox[{"A", "[", "7", "]"}]}], "5040"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "8"], " ", 
    RowBox[{"A", "[", "8", "]"}]}], "40320"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "9"], " ", 
    RowBox[{"A", "[", "9", "]"}]}], "362880"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "10"], " ", 
    RowBox[{"A", "[", "10", "]"}]}], "3628800"]}]], "Output",
 CellChangeTimes->{{3.400987916673482*^9, 3.4009879845711136`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4009879210998464`*^9, 3.4009879242944403`*^9}, {
  3.4009879610873456`*^9, 3.4009879692290525`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "4", "]"}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"A", "[", "5", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"A", "[", "6", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["r", "3"], " ", 
   RowBox[{"A", "[", "7", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["r", "4"], " ", 
   RowBox[{"A", "[", "8", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "120"], " ", 
   SuperscriptBox["r", "5"], " ", 
   RowBox[{"A", "[", "9", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox["r", "6"], " ", 
   RowBox[{"A", "[", "10", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.4009879250054626`*^9, 3.400987986754253*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"n", "+", "4"}], "]"}], "*", 
    RowBox[{
     RowBox[{"r", "^", "n"}], "/", 
     RowBox[{"n", "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4009879776311345`*^9, 3.400987992252158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "4", "]"}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"A", "[", "5", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"A", "[", "6", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["r", "3"], " ", 
   RowBox[{"A", "[", "7", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["r", "4"], " ", 
   RowBox[{"A", "[", "8", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "120"], " ", 
   SuperscriptBox["r", "5"], " ", 
   RowBox[{"A", "[", "9", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "720"], " ", 
   SuperscriptBox["r", "6"], " ", 
   RowBox[{"A", "[", "10", "]"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "7"], " ", 
    RowBox[{"A", "[", "11", "]"}]}], "5040"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "8"], " ", 
    RowBox[{"A", "[", "12", "]"}]}], "40320"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "9"], " ", 
    RowBox[{"A", "[", "13", "]"}]}], "362880"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "10"], " ", 
    RowBox[{"A", "[", "14", "]"}]}], "3628800"]}]], "Output",
 CellChangeTimes->{3.4009879927428637`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1008, 650},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 28, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[713, 27, 1953, 48, 72, "Input"],
Cell[2669, 77, 991, 16, 30, "Output"]
}, Open  ]],
Cell[3675, 96, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[3769, 101, 7709, 188, 312, "Input"],
Cell[11483, 292, 216083, 3543, 228, 205907, 3381, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[227581, 3838, 3615, 114, 192, "Input"],
Cell[CellGroupData[{
Cell[231221, 3956, 279, 8, 31, "Input"],
Cell[231503, 3966, 106, 2, 30, "Output"]
}, Open  ]],
Cell[231624, 3971, 1678, 53, 92, "Input"],
Cell[CellGroupData[{
Cell[233327, 4028, 648, 21, 31, "Input"],
Cell[233978, 4051, 269, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234284, 4062, 1123, 29, 52, "Input"],
Cell[235410, 4093, 5551, 95, 238, "Output"]
}, Open  ]],
Cell[240976, 4191, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[241097, 4196, 100, 1, 83, "Title"],
Cell[241200, 4199, 92, 1, 49, "Subtitle"],
Cell[241295, 4202, 118, 2, 31, "Input"],
Cell[241416, 4206, 321, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[241762, 4220, 1073, 31, 31, "Input"],
Cell[242838, 4253, 7891, 226, 499, "Output"]
}, Open  ]],
Cell[250744, 4482, 71, 1, 31, "Input"],
Cell[250818, 4485, 1166, 35, 52, "Input"],
Cell[251987, 4522, 706, 14, 38, "Input"],
Cell[252696, 4538, 2065, 37, 31, "Input"],
Cell[CellGroupData[{
Cell[254786, 4579, 1418, 32, 31, "Input"],
Cell[256207, 4613, 3770, 90, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260014, 4708, 882, 23, 31, "Input"],
Cell[260901, 4734, 6811, 183, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267749, 4922, 501, 16, 31, "Input"],
Cell[268253, 4940, 242, 8, 30, "Output"]
}, Open  ]],
Cell[268510, 4951, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[268655, 4957, 1621, 37, 31, "Input"],
Cell[270279, 4996, 2552, 77, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272868, 5078, 585, 14, 38, "Input"],
Cell[273456, 5094, 1142, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274635, 5131, 940, 31, 59, "Input"],
Cell[275578, 5164, 901, 32, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276516, 5201, 338, 7, 31, "Input"],
Cell[276857, 5210, 1715, 58, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278609, 5273, 279, 8, 31, "Input"],
Cell[278891, 5283, 475, 17, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279403, 5305, 290, 7, 31, "Input"],
Cell[279696, 5314, 1816, 64, 60, "Output"]
}, Open  ]],
Cell[281527, 5381, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[281672, 5387, 2601, 90, 119, "Input"],
Cell[284276, 5479, 1295, 44, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285608, 5528, 309, 7, 31, "Input"],
Cell[285920, 5537, 1933, 62, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287890, 5604, 2986, 96, 119, "Input"],
Cell[290879, 5702, 386, 12, 37, "Output"]
}, Open  ]],
Cell[291280, 5717, 390, 8, 72, "Input"],
Cell[CellGroupData[{
Cell[291695, 5729, 1618, 51, 60, "Input"],
Cell[293316, 5782, 312, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293665, 5793, 378, 9, 31, "Input"],
Cell[294046, 5804, 712, 13, 50, "Output"]
}, Open  ]],
Cell[294773, 5820, 338, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[295136, 5831, 2718, 79, 149, "Input"],
Cell[297857, 5912, 471, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298365, 5926, 206, 4, 31, "Input"],
Cell[298574, 5932, 145, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298756, 5940, 475, 12, 31, "Input"],
Cell[299234, 5954, 991, 30, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300262, 5989, 873, 26, 54, "Input"],
Cell[301138, 6017, 944, 29, 50, "Output"]
}, Open  ]],
Cell[302097, 6049, 1033, 29, 58, "Input"],
Cell[CellGroupData[{
Cell[303155, 6082, 503, 17, 58, "Input"],
Cell[303661, 6101, 747, 20, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304445, 6126, 451, 14, 46, "Input"],
Cell[304899, 6142, 788, 26, 46, "Output"]
}, Open  ]],
Cell[305702, 6171, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[305847, 6177, 1302, 38, 59, "Input"],
Cell[307152, 6217, 4526, 141, 179, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311715, 6363, 1585, 53, 83, "Input"],
Cell[313303, 6418, 1560, 53, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314900, 6476, 1188, 40, 46, "Input"],
Cell[316091, 6518, 997, 35, 39, "Output"]
}, Open  ]],
Cell[317103, 6556, 539, 17, 46, "Input"],
Cell[CellGroupData[{
Cell[317667, 6577, 1859, 61, 75, "Input"],
Cell[319529, 6640, 432, 15, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319998, 6660, 2081, 57, 60, "Input"],
Cell[322082, 6719, 6160, 185, 247, "Output"]
}, Open  ]],
Cell[328257, 6907, 561, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[328843, 6925, 6751, 202, 206, "Input"],
Cell[335597, 7129, 2067, 63, 47, "Output"],
Cell[337667, 7194, 2990, 91, 136, "Output"],
Cell[340660, 7287, 2647, 81, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343344, 7373, 102, 3, 31, "Input"],
Cell[343449, 7378, 412, 14, 30, "Output"]
}, Open  ]],
Cell[343876, 7395, 1786, 50, 152, "Input"],
Cell[345665, 7447, 2782, 81, 192, "Input"],
Cell[348450, 7530, 884, 24, 31, "Input"],
Cell[349337, 7556, 18189, 306, 86, "Input"],
Cell[367529, 7864, 6515, 123, 352, "Input"],
Cell[CellGroupData[{
Cell[374069, 7991, 748, 14, 31, "Input"],
Cell[374820, 8007, 1027, 15, 30, "Output"]
}, Open  ]],
Cell[375862, 8025, 109, 3, 31, "Input"],
Cell[375974, 8030, 196, 4, 52, "Input"],
Cell[376173, 8036, 318, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[376516, 8051, 241, 7, 31, "Input"],
Cell[376760, 8060, 116, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376913, 8066, 189, 4, 31, "Input"],
Cell[377105, 8072, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377238, 8078, 404, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[377667, 8094, 91, 1, 23, "Print"],
Cell[377761, 8097, 93, 1, 23, "Print"],
Cell[377857, 8100, 91, 1, 23, "Print"],
Cell[377951, 8103, 93, 1, 23, "Print"],
Cell[378047, 8106, 93, 1, 23, "Print"],
Cell[378143, 8109, 91, 1, 23, "Print"],
Cell[378237, 8112, 93, 1, 23, "Print"],
Cell[378333, 8115, 93, 1, 23, "Print"],
Cell[378429, 8118, 91, 1, 23, "Print"],
Cell[378523, 8121, 94, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[378644, 8126, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[378761, 8131, 1995, 53, 132, "Input"],
Cell[380759, 8186, 424, 12, 48, "Output"],
Cell[381186, 8200, 22931, 383, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404154, 8588, 211, 3, 49, "Subtitle"],
Cell[404368, 8593, 118, 2, 31, "Input"],
Cell[404489, 8597, 321, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[404835, 8611, 950, 29, 31, "Input"],
Cell[405788, 8642, 398, 8, 30, "Output"]
}, Open  ]],
Cell[406201, 8653, 157, 4, 31, "Input"],
Cell[406361, 8659, 1394, 27, 31, "Input"],
Cell[407758, 8688, 1093, 34, 52, "Input"],
Cell[408854, 8724, 115, 2, 31, "Input"],
Cell[408972, 8728, 1513, 32, 31, "Input"],
Cell[CellGroupData[{
Cell[410510, 8764, 2946, 63, 52, "Input"],
Cell[413459, 8829, 517, 10, 21, "Message"],
Cell[413979, 8841, 519, 10, 21, "Message"],
Cell[414501, 8853, 3214, 94, 82, "Output"]
}, Open  ]],
Cell[417730, 8950, 2601, 78, 85, "Input"],
Cell[420334, 9030, 620, 17, 31, "Input"],
Cell[CellGroupData[{
Cell[420979, 9051, 2076, 43, 31, "Input"],
Cell[423058, 9096, 4508, 146, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427603, 9247, 1742, 47, 33, "Input"],
Cell[429348, 9296, 2012, 57, 60, "Output"]
}, Open  ]],
Cell[431375, 9356, 326, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[431726, 9370, 201, 4, 31, "Input"],
Cell[431930, 9376, 802, 26, 53, "Output"]
}, Open  ]],
Cell[432747, 9405, 609, 16, 31, "Input"],
Cell[CellGroupData[{
Cell[433381, 9425, 238, 4, 31, "Input"],
Cell[433622, 9431, 280, 5, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[433951, 9442, 141, 2, 49, "Subtitle"],
Cell[434095, 9446, 118, 2, 31, "Input"],
Cell[434216, 9450, 261, 9, 31, "Input"],
Cell[434480, 9461, 802, 25, 31, "Input"],
Cell[CellGroupData[{
Cell[435307, 9490, 173, 3, 31, "Input"],
Cell[435483, 9495, 1727, 59, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437247, 9559, 531, 18, 31, "Input"],
Cell[437781, 9579, 400, 14, 69, "Output"]
}, Open  ]],
Cell[438196, 9596, 137, 3, 31, "Input"],
Cell[438336, 9601, 132, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[438493, 9608, 1127, 33, 60, "Input"],
Cell[439623, 9643, 8992, 247, 248, "Output"]
}, Open  ]],
Cell[448630, 9893, 71, 1, 31, "Input"],
Cell[448704, 9896, 87, 1, 52, "Input"],
Cell[448794, 9899, 3070, 86, 124, "Input"],
Cell[CellGroupData[{
Cell[451889, 9989, 528, 14, 31, "Input"],
Cell[452420, 10005, 687, 14, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453144, 10024, 422, 12, 31, "Input"],
Cell[453569, 10038, 861, 21, 30, "Output"]
}, Open  ]],
Cell[454445, 10062, 76, 2, 31, "Input"],
Cell[454524, 10066, 324, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[454873, 10081, 1274, 39, 72, "Input"],
Cell[456150, 10122, 400, 8, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[456611, 10137, 117, 1, 83, "Title"],
Cell[CellGroupData[{
Cell[456753, 10142, 3332, 103, 139, "Input"],
Cell[460088, 10247, 638, 20, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460763, 10272, 1169, 36, 132, "Input"],
Cell[461935, 10310, 616, 18, 47, "Output"]
}, Open  ]],
Cell[462566, 10331, 161, 3, 58, "Input"],
Cell[CellGroupData[{
Cell[462752, 10338, 4671, 144, 292, "Input"],
Cell[467426, 10484, 31354, 521, 211, 28076, 466, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498817, 11010, 384, 11, 31, "Input"],
Cell[499204, 11023, 1262, 41, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500503, 11069, 249, 6, 31, "Input"],
Cell[500755, 11077, 799, 25, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501591, 11107, 359, 11, 31, "Input"],
Cell[501953, 11120, 1242, 41, 48, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

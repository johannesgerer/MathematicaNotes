(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    139960,       2916]
NotebookOptionsPosition[    137107,       2820]
NotebookOutlinePosition[    137449,       2835]
CellTagsIndexPosition[    137406,       2832]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Exit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4010372382143745`*^9, 3.401037239576333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", "  ", 
  RowBox[{
   RowBox[{"r", ">", "0"}], " ", "&&", " ", 
   RowBox[{"Element", "[", 
    RowBox[{"m", ",", "Integers"}], "]"}], " ", "&&", " ", 
   RowBox[{"Element", "[", 
    RowBox[{"n", ",", "Integers"}], "]"}], "  ", "&&", " ", 
   RowBox[{"s", ">", "0"}]}]}]], "Input",
 CellChangeTimes->{
  3.4010290840392466`*^9, 3.401029861897752*^9, {3.401030397497907*^9, 
   3.4010304007225437`*^9}, {3.4010311773793216`*^9, 
   3.4010311800331373`*^9}, {3.40103719238848*^9, 3.401037249250243*^9}, {
   3.401037433385016*^9, 3.401037446974557*^9}, {3.401039116925829*^9, 
   3.401039141861685*^9}, {3.4010392615838366`*^9, 3.401039262384989*^9}, 
   3.4010402892815933`*^9, {3.4010403635083265`*^9, 3.401040365631379*^9}, 
   3.4012992083316865`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", ">", "0"}], "&&", 
  RowBox[{"m", "\[Element]", "Integers"}], "&&", 
  RowBox[{"n", "\[Element]", "Integers"}], "&&", 
  RowBox[{"s", ">", "0"}]}]], "Output",
 CellChangeTimes->{{3.4012992148610754`*^9, 3.4012992303733807`*^9}, {
   3.4013417246155343`*^9, 3.4013417387258244`*^9}, 3.4013460596453085`*^9, 
   3.4013481873748336`*^9, {3.4013516949985485`*^9, 3.401351700416339*^9}, {
   3.4013609123424387`*^9, 3.4013609144254336`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "-", "1"}], ")"}], "/", "r"}], ",", 
        RowBox[{"I", "*", 
         RowBox[{"(", 
          RowBox[{"En", "-", 
           RowBox[{"r", "^", "p"}]}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"I", "*", 
         RowBox[{"(", 
          RowBox[{"En", "-", 
           RowBox[{"r", "^", "p"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "m"}], "/", "r"}]}], "}"}]}], "}"}], "-", 
    RowBox[{"0", "*", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "*", "I", "*", 
     RowBox[{"r", "^", "p"}]}]}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", "r", "]"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.401028113433584*^9, 3.401028218114107*^9}, {
  3.4010282725323567`*^9, 3.401028275166144*^9}, {3.4010298567603645`*^9, 
  3.401029858643072*^9}, {3.4012904872714176`*^9, 3.401290503985451*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], "r"], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"En", "-", 
         SuperscriptBox["r", "p"]}], ")"}]}]},
     {
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"En", "-", 
         SuperscriptBox["r", "p"]}], ")"}]}], 
      RowBox[{"-", 
       FractionBox["m", "r"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4010282767984915`*^9, 3.401028300682835*^9}, 
   3.4010289138745613`*^9, {3.4010290707000656`*^9, 3.401029085781752*^9}, 
   3.4010291436749983`*^9, 3.4010298646917696`*^9, {3.401037244513432*^9, 
   3.401037250291741*^9}, 3.4010374722008305`*^9, {3.4012904898951902`*^9, 
   3.401290504285883*^9}, 3.4012906428150787`*^9, 3.401296149513322*^9, {
   3.40129653076153*^9, 3.4012965339260798`*^9}, 3.401296681057645*^9, 
   3.401297020045085*^9, 3.401299232045786*^9, {3.4013417247357073`*^9, 
   3.4013417407988048`*^9}, 3.401346060897109*^9, 3.401348187454949*^9, {
   3.401351695128736*^9, 3.4013517010172033`*^9}, {3.401360912442582*^9, 
   3.4013609148460383`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"En", "=", 
   RowBox[{"E0", "+", 
    RowBox[{"I", "*", "Ga"}]}]}], ";", 
  RowBox[{"En", "=."}]}]], "Input",
 CellChangeTimes->{{3.401290729730056*^9, 3.40129073458704*^9}, {
  3.401297011132269*^9, 3.4012970123039536`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VV", "[", "x_", "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{"I", "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "^", "p"}], "-", "En"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "x"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.401352611947056*^9, 3.401352612347632*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", "x", "]"}], ",", 
     RowBox[{"I", "*", 
      RowBox[{"G", "[", "x", "]"}]}]}], "}"}], "/", 
   RowBox[{"VV", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4010290965372176`*^9, 3.401029126350086*^9}, {
   3.4010301055180607`*^9, 3.4010301367529745`*^9}, {3.401030194946653*^9, 
   3.4010301957177615`*^9}, {3.401030624454254*^9, 3.401030626647408*^9}, {
   3.401030707333429*^9, 3.4010307085551853`*^9}, {3.401030768331139*^9, 
   3.4010307709949694`*^9}, {3.4010314786625457`*^9, 
   3.4010314946355133`*^9}, {3.4010315427146482`*^9, 3.40103154426688*^9}, {
   3.4010317713834577`*^9, 3.401031775329131*^9}, {3.401031838059333*^9, 
   3.4010318420350494`*^9}, 3.4010349500040894`*^9, {3.4010356985003743`*^9, 
   3.4010356996620445`*^9}, {3.401036294447304*^9, 3.4010363741218705`*^9}, {
   3.4010374515010653`*^9, 3.401037456237877*^9}, {3.40103805096305*^9, 
   3.401038058874426*^9}, {3.4010392667312384`*^9, 3.4010392698056593`*^9}, {
   3.401039378411827*^9, 3.401039379934016*^9}, {3.40103995977779*^9, 
   3.4010399769825296`*^9}, {3.4010402953302913`*^9, 
   3.4010403084291267`*^9}, {3.401040355236432*^9, 3.4010404052183027`*^9}, {
   3.401040605526331*^9, 3.401040619386261*^9}, {3.4010408912171345`*^9, 
   3.4010408945519295`*^9}, {3.4010415486424656`*^9, 
   3.4010415784853773`*^9}, {3.401290525556469*^9, 3.4012905467569537`*^9}, {
   3.401296840396763*^9, 3.401296852053525*^9}, {3.40135046045336*^9, 
   3.401350461374685*^9}, {3.401351534057126*^9, 3.4013515389241247`*^9}, {
   3.401351571721285*^9, 3.4013515726125665`*^9}, 3.401351605630043*^9, {
   3.4013518232329407`*^9, 3.4013518234332285`*^9}, {3.401352627469376*^9, 
   3.401352639596814*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "En"}], " ", "x"}], "+", 
        FractionBox[
         SuperscriptBox["x", "3"], "3"]}], ")"}]}]], " ", 
    RowBox[{"F", "[", "x", "]"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "En"}], " ", "x"}], "+", 
        FractionBox[
         SuperscriptBox["x", "3"], "3"]}], ")"}]}]], " ", 
    RowBox[{"G", "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4013516806178703`*^9, 3.4013517027096367`*^9}, 
   3.4013518241542654`*^9, 3.401352474369229*^9, {3.401352613619461*^9, 
   3.4013526401075487`*^9}, {3.4013609200134687`*^9, 3.4013609206043186`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.401031854512992*^9, 3.401031855013712*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "x_", "]"}], ":=", "x"}], ";"}]], "Input",
 CellChangeTimes->{{3.4010309117573757`*^9, 3.401030917135109*^9}, {
  3.401038417630291*^9, 3.4010384190623503`*^9}, {3.401039925258154*^9, 
  3.4010399377461104`*^9}, {3.401041539439232*^9, 3.401041539489304*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Expand", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"D", "[", 
            RowBox[{"u", ",", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "'"}], "[", "x", "]"}], "*", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"r", "[", "x", "]"}], "]"}], ".", "u"}]}]}], ")"}], "*", 
        
        RowBox[{"VV", "[", "x", "]"}], "*", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "I"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "^", "n"}], ",", 
      RowBox[{"a", "[", "n", "]"}], ",", 
      RowBox[{"b", "[", "n", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4010301421307073`*^9, 3.401030206993976*^9}, {
   3.4010303651614094`*^9, 3.4010303706893587`*^9}, {3.4010306298119583`*^9, 
   3.4010306299922175`*^9}, {3.401030667836635*^9, 3.40103067401552*^9}, {
   3.4010309255071473`*^9, 3.4010310048412237`*^9}, {3.4010310585083933`*^9, 
   3.401031060421144*^9}, {3.401031097554539*^9, 3.4010311320341187`*^9}, {
   3.4010311906484013`*^9, 3.40103121563433*^9}, {3.401031250133938*^9, 
   3.4010312501639805`*^9}, {3.401031344629816*^9, 3.4010313778575954`*^9}, {
   3.4010314293115826`*^9, 3.401031456019987*^9}, {3.4010315045197268`*^9, 
   3.40103152298628*^9}, {3.401034369279048*^9, 3.4010343693491488`*^9}, {
   3.401036396043392*^9, 3.401036401831715*^9}, {3.401036449199827*^9, 
   3.4010364498307343`*^9}, {3.401036534372299*^9, 3.4010365344924717`*^9}, {
   3.401037501983656*^9, 3.4010375020838003`*^9}, {3.4010384524904175`*^9, 
   3.4010385070688972`*^9}, {3.4010385380334225`*^9, 
   3.4010386032672243`*^9}, {3.401038638998603*^9, 3.401038708839029*^9}, {
   3.401038768624997*^9, 3.401038907684955*^9}, {3.401038961282024*^9, 
   3.401038985917448*^9}, {3.401039103867051*^9, 3.4010391084536467`*^9}, {
   3.401039207255717*^9, 3.4010392545236845`*^9}, {3.4010392859088144`*^9, 
   3.4010393418492527`*^9}, 3.4010393902989197`*^9, {3.4010394253092623`*^9, 
   3.4010394429746637`*^9}, {3.401039479366994*^9, 3.401039509290021*^9}, {
   3.401039566682547*^9, 3.401039592760045*^9}, {3.4010396471582656`*^9, 
   3.4010396501826143`*^9}, 3.4010397890322704`*^9, {3.401039929003539*^9, 
   3.401040008007141*^9}, {3.401040065790229*^9, 3.4010400714183216`*^9}, 
   3.4010401291513376`*^9, {3.401040421581832*^9, 3.4010404669670925`*^9}, {
   3.4012905545782003`*^9, 3.4012905700304193`*^9}, {3.401351711852784*^9, 
   3.4013517817332673`*^9}, {3.4013518790832496`*^9, 3.4013518863336754`*^9}, 
   3.401352470283354*^9, {3.4013526330674257`*^9, 3.4013526444537983`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "En", " ", 
     RowBox[{"F", "[", "x", "]"}]}], "-", 
    FractionBox[
     RowBox[{"F", "[", "x", "]"}], "x"], "+", 
    FractionBox[
     RowBox[{"m", " ", 
      RowBox[{"F", "[", "x", "]"}]}], "x"], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"F", "[", "x", "]"}]}], "-", 
    RowBox[{"En", " ", 
     RowBox[{"G", "[", "x", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"G", "[", "x", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], ",", 
   RowBox[{
    RowBox[{"En", " ", 
     RowBox[{"F", "[", "x", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"F", "[", "x", "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "En", " ", 
     RowBox[{"G", "[", "x", "]"}]}], "-", 
    FractionBox[
     RowBox[{"m", " ", 
      RowBox[{"G", "[", "x", "]"}]}], "x"], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"G", "[", "x", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["G", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4013517550749345`*^9, 3.4013517821739006`*^9}, 
   3.401351825886757*^9, 3.401351887034683*^9, {3.401352470864189*^9, 
   3.4013524760216045`*^9}, {3.401352615862686*^9, 3.401352644914461*^9}, 
   3.401360922316781*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", "r_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "En"}], " ", "I"}], "-", 
        FractionBox["1", "x"], "+", 
        FractionBox[
         RowBox[{"m", " "}], "x"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["x", "2"]}]}], " ", ",", 
       RowBox[{
        RowBox[{"-", "En"}], "+", 
        SuperscriptBox["x", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"+", "En"}], "-", 
        SuperscriptBox["x", "2"]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "I"}], " ", "En"}], "-", 
        FractionBox[
         RowBox[{"m", " "}], "x"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["x", "2"]}]}]}], " ", "}"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"f2", "[", "r", "]"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4013517433380575`*^9, 3.401351944006605*^9}, {
  3.4013519824018145`*^9, 3.4013519864776754`*^9}, {3.4013520596128387`*^9, 
  3.401352060674365*^9}, {3.4013526494609985`*^9, 3.4013526657043552`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], "-", 
       FractionBox["1", "x"], "+", 
       FractionBox["m", "x"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["x", "2"]}]}], 
      RowBox[{
       RowBox[{"-", "En"}], "+", 
       SuperscriptBox["x", "2"]}]},
     {
      RowBox[{"En", "-", 
       SuperscriptBox["x", "2"]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], "-", 
       FractionBox["m", "x"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["x", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.401351986768093*^9, 3.4013520613152866`*^9, 
  3.401352492545365*^9, 3.4013526681378546`*^9, 3.4013609231379614`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], "*", 
      RowBox[{"x", "^", 
       RowBox[{"(", "n", ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"b", "[", "n", "]"}], "*", 
      RowBox[{"x", "^", 
       RowBox[{"(", "n", ")"}]}]}]}], "}"}], "*", 
   RowBox[{"x", "^", "s"}]}]}]], "Input",
 CellChangeTimes->{{3.40135224117391*^9, 3.401352244088101*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"n", "+", "s"}]], " ", 
    RowBox[{"a", "[", "n", "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"n", "+", "s"}]], " ", 
    RowBox[{"b", "[", "n", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4013525017786417`*^9, 3.401352552491563*^9, 
  3.401352672163643*^9, 3.401360923798912*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "x_", "]"}], ":=", "x"}], ";"}]], "Input",
 CellChangeTimes->{{3.4013524986441345`*^9, 3.4013524989645953`*^9}, {
  3.4013526745871277`*^9, 3.401352674737344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "m"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4013525412253633`*^9, 3.4013525432883296`*^9}, {
  3.4013526932038975`*^9, 3.401352694285453*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Expand", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"D", "[", 
            RowBox[{"u", ",", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "'"}], "[", "x", "]"}], "*", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"r", "[", "x", "]"}], "]"}], ".", "u"}]}]}], ")"}], "*", 
        
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], "*", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "^", "n"}], ",", 
      RowBox[{"a", "[", "n", "]"}], ",", 
      RowBox[{"b", "[", "n", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.401352063478397*^9, 3.4013521156934786`*^9}, {
  3.4013525070562305`*^9, 3.4013525098602624`*^9}, {3.401352678592888*^9, 
  3.4013526787030463`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "n"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "n"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "En", " ", "x"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "En"}], " ", "x"}], "+", 
         SuperscriptBox["x", "3"]}], ")"}], " ", 
       RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["x", "n"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "En"}], " ", "x"}], "+", 
         SuperscriptBox["x", "3"]}], ")"}], " ", 
       RowBox[{"a", "[", "n", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "m"}], "+", "n", "+", 
         RowBox[{"\[ImaginaryI]", " ", "En", " ", "x"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["x", "3"]}]}], ")"}], " ", 
       RowBox[{"b", "[", "n", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4013520700578575`*^9, 3.4013521160840397`*^9}, 
   3.401352209618536*^9, 3.401352245369944*^9, {3.401352504041896*^9, 
   3.4013525103209248`*^9}, {3.401352544119525*^9, 3.401352562455891*^9}, {
   3.4013526760492306`*^9, 3.4013526791236515`*^9}, 3.4013609256615906`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"g2", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "n2"}], "}"}]}], "]"}], "/", 
          RowBox[{"n2", "!"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n2", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"g3", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4010303737938223`*^9, 3.4010304350519075`*^9}, {
   3.4010304894401135`*^9, 3.4010305782578273`*^9}, {3.401031550085246*^9, 
   3.401031555513051*^9}, {3.4010344401409426`*^9, 3.4010344431052046`*^9}, {
   3.4010348029726686`*^9, 3.4010348073790045`*^9}, {3.401035115552136*^9, 
   3.4010351200486016`*^9}, {3.4012905852322783`*^9, 3.401290585793085*^9}, {
   3.401290651637765*^9, 3.4012906523287582`*^9}, 3.4012907557875247`*^9, 
   3.401295652608808*^9, {3.4013480367782865`*^9, 3.4013480369084735`*^9}, {
   3.401351968401683*^9, 3.4013519696334543`*^9}, {3.4013520211976*^9, 
   3.4013520280374355`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4012956532497296`*^9, 3.401295795854786*^9, 3.401295854048464*^9, {
   3.401295927994794*^9, 3.4012959720881968`*^9}, {3.4012960083803825`*^9, 
   3.401296025865525*^9}, 3.401296119379992*^9, 3.4012961521971807`*^9, {
   3.4012962032405777`*^9, 3.401296229298046*^9}, {3.401296274503048*^9, 
   3.4012963037350817`*^9}, 3.4012965364697375`*^9, 3.4012966925241327`*^9, 
   3.401296861667349*^9, 3.4012969053301325`*^9, {3.4012970148876686`*^9, 
   3.4012970464330287`*^9}, 3.4012992451346064`*^9, 3.4013417527860413`*^9, 
   3.4013423616615615`*^9, 3.4013460749673405`*^9, {3.4013480354664*^9, 
   3.401348049937208*^9}, 3.4013481992819552`*^9, {3.4013519652070894`*^9, 
   3.4013520185638127`*^9}, {3.401352106249899*^9, 3.4013521284618387`*^9}, 
   3.4013521860546527`*^9, {3.401352216708731*^9, 3.4013522460108657`*^9}, 
   3.4013525145970736`*^9, {3.4013525575087776`*^9, 3.401352564298541*^9}, {
   3.401352680275307*^9, 3.401352696889197*^9}, {3.401352779608141*^9, 
   3.4013527982249107`*^9}, {3.4013528392038355`*^9, 
   3.4013528520022383`*^9}, {3.4013529022544975`*^9, 3.4013529162346*^9}, 
   3.4013580015168767`*^9, 3.401360926783203*^9, 3.4013609790183134`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "=", "1"}], ";", " ", 
  RowBox[{
   RowBox[{"b", "[", "0", "]"}], "=", "0"}], ";", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "En", " ", 
    RowBox[{"a", "[", "0", "]"}]}]}], ";", 
  RowBox[{
   RowBox[{"b", "[", "1", "]"}], "=", 
   FractionBox["En", 
    RowBox[{"2", " ", "m"}]]}], ";", 
  RowBox[{
   RowBox[{"a", "[", "2", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "En", " ", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "/", "2"}]}], "-", 
    RowBox[{"En", " ", 
     RowBox[{
      RowBox[{"b", "[", "1", "]"}], "/", "2"}]}]}]}], ";", 
  RowBox[{
   RowBox[{"b", "[", "2", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "m"}]}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "En"}], " ", 
       RowBox[{"a", "[", "1", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "En", " ", 
       RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.401341920827674*^9, 3.401341923110957*^9}, {
  3.4013419560383043`*^9, 3.401341997217517*^9}, {3.401352754632227*^9, 
  3.4013528994704943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"I", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"a", "[", "n", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "En", " ", 
       RowBox[{"a", "[", 
        RowBox[{"n", "+", "2"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "3"}], ")"}], " ", 
       RowBox[{"a", "[", 
        RowBox[{"n", "+", "3"}], "]"}]}], "+", 
      RowBox[{"b", "[", "n", "]"}], "-", 
      RowBox[{"En", " ", 
       RowBox[{"b", "[", 
        RowBox[{"n", "+", "2"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{"a", "[", "n", "]"}], "-", 
   RowBox[{"En", " ", 
    RowBox[{"a", "[", 
     RowBox[{"n", "+", "2"}], "]"}]}], "-", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"b", "[", "n", "]"}]}], "+", 
   RowBox[{"\[ImaginaryI]", " ", "En", " ", 
    RowBox[{"b", "[", 
     RowBox[{"n", "+", "2"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], " ", 
    RowBox[{"b", "[", 
     RowBox[{"n", "+", "3"}], "]"}]}], "+", 
   RowBox[{"2", " ", "m", " ", 
    RowBox[{"b", "[", 
     RowBox[{"n", "+", "3"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4013572318201075`*^9, 3.4013572741810193`*^9}, {
  3.401357335318931*^9, 3.40135740978601*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"(", 
    RowBox[{"3", "+", "n"}], ")"}], " ", 
   RowBox[{"a", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", "m"}], "+", "n"}], ")"}], " ", 
   RowBox[{"b", "[", 
    RowBox[{"3", "+", "n"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.4013572446385393`*^9, 3.4013572744614224`*^9}, {
   3.4013573855711904`*^9, 3.401357410216629*^9}, 3.4013609286659107`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "n_", "]"}], ":=", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", "n", ")"}], " ", 
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "m"}], "+", "n"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4013575650793104`*^9, 3.401357594251258*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"a", "[", "n", "]"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "En", " ", 
      RowBox[{"a", "[", 
       RowBox[{"n", "+", "2"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "3"}], ")"}], " ", 
      RowBox[{"a", "[", 
       RowBox[{"n", "+", "3"}], "]"}]}], "+", 
     RowBox[{"b", "[", "n", "]"}], "-", 
     RowBox[{"En", " ", 
      RowBox[{"b", "[", 
       RowBox[{"n", "+", "2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"n", "+", "3"}], "]"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"n", "+", "2"}], "]"}]}], "}"}]}], "]"}], "/.", 
  RowBox[{"n", "\[Rule]", 
   RowBox[{"n", "-", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.4013575976761827`*^9, 3.40135767758108*^9}, {
  3.401357711109291*^9, 3.4013577138231936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "n"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", 
   RowBox[{"a", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "En", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", 
   RowBox[{"a", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], "]"}]}], "-", 
  RowBox[{"n", " ", 
   RowBox[{"a", "[", "n", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.4013576672562337`*^9, 3.401357677761339*^9}, 
   3.4013577146944466`*^9, 3.401360929957768*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "n"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "n"}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "n"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "En", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.4013579599871597`*^9, 3.4013579738971615`*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"1", "/", "n"}], "*", 
   RowBox[{"(", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "n"}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4013579764308047`*^9, 3.4013579969703393`*^9}, 
   3.401358122000123*^9, {3.401361299639344*^9, 3.401361329962947*^9}, {
   3.4013613900793905`*^9, 3.401361393123768*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"n", "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{
  3.401361393404171*^9, {3.401361570829296*^9, 3.401361602584958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$RecursionLimit", "::", "\<\"reclim\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \\!\\(256\\) exceeded. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.401361585850896*^9, 3.401361602855347*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$RecursionLimit", "::", "\<\"reclim\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \\!\\(256\\) exceeded. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.401361585850896*^9, 3.401361602895405*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$RecursionLimit", "::", "\<\"reclim\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \\!\\(256\\) exceeded. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.401361585850896*^9, 3.401361602955491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"stop\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\($RecursionLimit :: \
\\\"reclim\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.401361585850896*^9, 3.401361603025592*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.401361576166971*^9, 3.401361603736614*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"n", "=."}]], "Input",
 CellChangeTimes->{{3.4013613048568463`*^9, 3.4013613191774387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"En_", ",", "m_", ",", "nN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"U", ",", "te", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], ",", 
           FractionBox["En", 
            RowBox[{"2", " ", "m"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["En", "2"], "2"]}], "-", 
            FractionBox[
             SuperscriptBox["En", "2"], 
             RowBox[{"4", " ", "m"}]]}], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               SuperscriptBox["En", "2"]}], "+", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox["En", "2"]}], 
               RowBox[{"2", " ", "m"}]]}], 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "m"}]}]]}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"n", "=", "3"}], ",", 
        RowBox[{"n", "<", "nN"}], ",", 
        RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"te", "=", 
          RowBox[{
           RowBox[{"1", "/", "n"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", 
                FractionBox[
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "n"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", 
                  RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", 
              RowBox[{"U", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "n"}], ",", "1"}], "]"}], "]"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], "-", 
                FractionBox[
                 RowBox[{"\[ImaginaryI]", " ", "En", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"2", " ", "m"}], "+", "n"}]]}], ")"}], " ", 
              RowBox[{"U", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}]}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"U", ",", 
           RowBox[{"{", 
            RowBox[{"te", ",", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", "n", ")"}], " ", 
              RowBox[{"te", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "m"}], "+", "n"}], ")"}]}]}]}], "}"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], "*", 
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "^", "p"}], "-", "En"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "x"}], "}"}]}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", " ", 
      RowBox[{"Expand", "[", " ", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"U", "[", 
            RowBox[{"[", 
             RowBox[{"n", "+", "1"}], "]"}], "]"}], "*", 
           RowBox[{"x", "^", "n"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", " ", ",", "0", ",", 
            RowBox[{"nN", "-", "1"}]}], "}"}]}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4013476317358637`*^9, 3.401347632336728*^9}, {
   3.401347774120603*^9, 3.4013478398150673`*^9}, {3.401347901353555*^9, 
   3.401347970492973*^9}, {3.4013480018580737`*^9, 3.4013480067951727`*^9}, {
   3.4013481422699757`*^9, 3.401348144423072*^9}, 3.4013488517000866`*^9, {
   3.4013489244246593`*^9, 3.401348958593792*^9}, {3.4013489890575967`*^9, 
   3.401349036135291*^9}, {3.401349073759392*^9, 3.4013492793249807`*^9}, {
   3.4013493196529694`*^9, 3.4013493641369343`*^9}, 3.401349457791603*^9, {
   3.4013494942039614`*^9, 3.4013495407108355`*^9}, {3.401349747828656*^9, 
   3.4013498607510304`*^9}, {3.4013498918858*^9, 3.401349897023187*^9}, {
   3.4013501677224336`*^9, 3.4013502006497808`*^9}, {3.4013503807086926`*^9, 
   3.401350441526144*^9}, {3.4013504759957085`*^9, 3.4013504765465007`*^9}, {
   3.401350521210725*^9, 3.4013505851426544`*^9}, {3.4013506205836163`*^9, 
   3.401350700718845*^9}, {3.401350735729187*^9, 3.401350749919592*^9}, {
   3.4013508528375807`*^9, 3.401350852987797*^9}, {3.4013511442966785`*^9, 
   3.4013511506558228`*^9}, {3.401358029026434*^9, 3.401358029216707*^9}, {
   3.4013580683329535`*^9, 3.4013583074968543`*^9}, {3.4013583506589184`*^9, 
   3.4013585034185762`*^9}, {3.4013586611854334`*^9, 3.401358722653821*^9}, {
   3.4013587779333086`*^9, 3.4013588060637584`*^9}, {3.4013588675021024`*^9, 
   3.401358869915573*^9}, 3.4013589230019073`*^9, {3.4013594047846766`*^9, 
   3.4013594065672398`*^9}, {3.4013594995509443`*^9, 
   3.4013595002419376`*^9}, {3.401359536233691*^9, 3.4013595782741423`*^9}, {
   3.401359638210326*^9, 3.401359654674*^9}, {3.401361315532197*^9, 
   3.401361315752514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"En", ",", "m", ",", "15"}], "]"}], "-", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "n", "]"}], ",", 
       RowBox[{"b", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "14"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4013594151095233`*^9, 3.401359466803856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Thread", "::", "\<\"tdlen\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({\\(\\(x\\^\\(\\(\
\\(-1\\)\\) + m\\) - \\(\\(\[ImaginaryI]\\\\ En\\\\ x\\^m\\)\\) - \\(\\(1\\/2\
\\\\ En\\^2\\\\ x\\^\\(1 + m\\)\\)\\) - \\(En\\^2\\\\ x\\^\\(1 \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\) \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\)\\)\\/\\(4\\\\ m\\) + \\(\\(\[LeftSkeleton] 3 \
\[RightSkeleton]\\)\\) + \\(\[ImaginaryI]\\\\ \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\\\ x\\^\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\/\
\\(3\\\\ \\(\\((1 + \\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\))\\)\\)\\) \
+ \\(\[ImaginaryI]\\\\ En\\^3\\\\ x\\^\\(2 + m\\)\\)\\/\\(6\\\\ m\\\\ \
\\(\\((1 + \\(\\(2\\\\ m\\)\\))\\)\\)\\) + \\(\\(1\\/3\\\\ En\\\\ x\\^\\(3 + \
m\\)\\)\\) + \\(\\(\[LeftSkeleton] 43458 \[RightSkeleton]\\)\\)\\)\\), \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)}\\)\\) + \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)\\) cannot be combined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4013609529007587`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.401359417963627*^9, 3.401359480954203*^9}, 
   3.4013595852041073`*^9, 3.401359657548133*^9, 3.401360969734965*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"10", ",", "2", ",", "5"}], "]"}], "//", "N"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.401358109492138*^9, 3.4013581169829087`*^9}, 
   3.4013582953594017`*^9, {3.4013583326530275`*^9, 3.4013583346759357`*^9}, {
   3.4013584280201583`*^9, 3.4013584451547966`*^9}, {3.40135879043128*^9, 
   3.40135879368596*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"x", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[InvisibleSpace]", "+", 
           RowBox[{"10.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"62.5`", " ", 
         SuperscriptBox["x", "3"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[InvisibleSpace]", "+", 
           RowBox[{"292.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["x", "4"]}], "+", 
        RowBox[{"1098.125`", " ", 
         SuperscriptBox["x", "5"]}]}]},
      {
       RowBox[{
        RowBox[{"2.5`", " ", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[InvisibleSpace]", "+", 
           RowBox[{"25.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"146.`", " ", 
         SuperscriptBox["x", "4"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[InvisibleSpace]", "+", 
           RowBox[{"627.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["x", "5"]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.401358117383485*^9, {3.4013582745494785`*^9, 3.401358334906267*^9}, {
   3.401358422532267*^9, 3.4013584644625597`*^9}, 3.4013585080652575`*^9, 
   3.40135860741812*^9, 3.4013586622469597`*^9, {3.401358785103619*^9, 
   3.401358806924997*^9}, 3.4013588723891296`*^9, 3.401358924974744*^9, {
   3.4013595656459837`*^9, 3.401359588258499*^9}, {3.401359650297707*^9, 
   3.40135965909035*^9}, 3.401360983935384*^9, 3.40136118478419*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{
      RowBox[{"10", "+", "I"}], ",", "4", ",", "600"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", "#", "]"}], ",", 
        RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "[", "G", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "3.8", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4013478425489984`*^9, 3.4013478986496673`*^9}, {
   3.4013486681060915`*^9, 3.4013486764080286`*^9}, {3.4013499316029105`*^9, 
   3.4013499566989965`*^9}, {3.4013499982186995`*^9, 
   3.4013500884083853`*^9}, {3.4013501319209538`*^9, 3.401350159290309*^9}, {
   3.401350214049048*^9, 3.401350324357664*^9}, {3.401350792310547*^9, 
   3.4013509570674562`*^9}, {3.40135100298348*^9, 3.401351008972091*^9}, {
   3.401351101855651*^9, 3.401351300921894*^9}, {3.4013588183814707`*^9, 
   3.401358842716462*^9}, 3.4013588773462577`*^9, {3.4013589357302094`*^9, 
   3.401359261578757*^9}, {3.401359291752144*^9, 3.401359339400659*^9}, {
   3.4013593712264223`*^9, 3.4013593713265667`*^9}, {3.4013594930916557`*^9, 
   3.401359516745669*^9}, {3.4013595987535906`*^9, 3.401359599154166*^9}, {
   3.401359696183688*^9, 3.4013598002833757`*^9}, {3.401359837136368*^9, 
   3.4013598582066655`*^9}, {3.40136090656413*^9, 3.40136090738531*^9}, {
   3.4013609936393375`*^9, 3.4013609996980495`*^9}, {3.401361040596859*^9, 
   3.401361140200082*^9}, {3.401361170503656*^9, 3.4013612687749634`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
rCKXlS7UJ+9CRsTiDYnonH/vM806ZXsVWkaqAh5pHdj/Bc2pyoCkHfWKc3Lx
fcXnQPyci8d3UPtnQMyXH2e00Kx3KRBZ5aFvTeOChRCRuNw0As3u9SUPXNJu
FqGZWxJJyAV5+240Ny+E3GM2e0zN+8+L5pcR/+VGgevRImYZxGf8V/hRtK98
GvFq8Y43Q7fWV4D7k5XpAeiQqSXg4vckLxvNDi4FR1PF0tdoXspTYB95U/07
j36/kWAreaVlxTP00Uy4PYXRKYfm1kTCzff+Hy6iGZ9TicXzNSNu6KHNhWAe
lvMnmda7VMPVW0emvqJxqzww0ewQGUbzlheC8bZrS+bnY/+WOGIgwi8ug2aO
3gP9T0Ebz6J50amgW7lu1x00a1oS0YnPZ0aipcUzyVmnY8qltB/fQ9DSfX+i
D202Ugozv43nChbg+CVYUOY0V0wKzXzuBzYLpFxUaVxJA7YmKAyaoWWMAAZ2
n1MPoHH+PMJ5aZmTRetVH4DmOW/RVurFZSD8Jc5pHM17nUlK2c8/LCvE8TSV
we05rWoH0FxVgC0xQ9m6aMa2BtK/Q3C5E7WPB0SUr3SMo257RE6e3jNQgeaY
VsKMj+rHPqLZG5+RYpvLWcLP6X0eDLdmOi2VRrPESog0J8xeHc1bVUB6t2T1
WVCf5UJ4SfXRYGqtJ6Bxsjczl/abHg1CfROL29FsVhgUWS1kT6CZCwuJlZB0
rxgXzSyGTWFKKvJoTlAG9GzUzbiI5t0tgLDntxa5odkrHoD6cf87SbR+zzMQ
7ErqrkIzdOwI16JE+QvNH8+EGwLtabOLcH6qRbAxZGTBdjQjz5N0rxO21USr
qbwgoc/WdFnR+P5cOH50/+EHaPZqP5j2TvNxAZornQSFZlfn86gnPQFLPjdr
vmK8792LQCqQ0ymOrgho+Pf7LVdREc1Z+gLuP617ZIRm6T0FtcMf5nqhGYr3
QaCN73Yq9QZXUmCylFdL7R1MLCa2kW9osavPYL2vSsr8EryPWqqgc+XFOTJo
X8MKCMm0tTqDZiT8+/1+KKjDBs1blkemtKQqPESz7cIh37A8qYja/N/vl/F3
It20XsCcrPMauyFQ+p+V9rUAb/nst5JoVk06BD1eJ38EXWtXA0cPyiVeQXOv
pBD+hjOzfNEMvuckT/+6ZQZarCofro16tjXSuHgiSLrFHPyBZl8JJB2LC+IX
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
0gX/BxARJ18=
     "]], LineBox[CompressedData["
1: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
AkP3
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3.8000000000000003`, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.4013501435476723`*^9, 3.4013501640872064`*^9}, {
   3.4013502168430653`*^9, 3.401350326580861*^9}, {3.4013508187285347`*^9, 
   3.401350837815981*^9}, {3.401350880927973*^9, 3.401350957688349*^9}, {
   3.401351003514243*^9, 3.4013510095228834`*^9}, {3.40135110246653*^9, 
   3.4013513017831326`*^9}, {3.4013588204945087`*^9, 3.401358880841283*^9}, {
   3.4013589284297123`*^9, 3.4013589631896944`*^9}, 3.4013590111786995`*^9, {
   3.4013590579759903`*^9, 3.401359340001523*^9}, 3.40135937210769*^9, {
   3.4013594937325773`*^9, 3.4013595561723614`*^9}, {3.401359589299997*^9, 
   3.401359599795088*^9}, {3.4013596426266766`*^9, 3.4013596603521647`*^9}, {
   3.4013596969347677`*^9, 3.4013597703903923`*^9}, 3.4013598016353197`*^9, {
   3.4013598380176353`*^9, 3.401359859408394*^9}, 3.401360907795901*^9, {
   3.401360988121403*^9, 3.401361000429101*^9}, {3.401361037943043*^9, 
   3.4013611342415133`*^9}, {3.401361172576637*^9, 3.4013612615846243`*^9}, 
   3.401361292799509*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.401350843173685*^9}],

Cell[CellGroupData[{

Cell[BoxData["G"], "Input",
 CellChangeTimes->{3.4013588988571887`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "En"}], " ", "x"}], "+", 
           FractionBox[
            SuperscriptBox["x", "3"], "3"]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"10", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         FractionBox[
          RowBox[{"125", " ", 
           SuperscriptBox["x", "3"]}], "2"], "+", 
         RowBox[{"292", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["x", "4"]}], "+", 
         FractionBox[
          RowBox[{"8785", " ", 
           SuperscriptBox["x", "5"]}], "8"]}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "En"}], " ", "x"}], "+", 
           FractionBox[
            SuperscriptBox["x", "3"], "3"]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", 
           SuperscriptBox["x", "2"]}], "2"], "-", 
         RowBox[{"25", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["x", "3"]}], "-", 
         RowBox[{"146", " ", 
          SuperscriptBox["x", "4"]}], "+", 
         FractionBox[
          RowBox[{"1255", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["x", "5"]}], "2"]}], ")"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Im", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "En"}], " ", "x"}], "+", 
           FractionBox[
            SuperscriptBox["x", "3"], "3"]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"10", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         FractionBox[
          RowBox[{"125", " ", 
           SuperscriptBox["x", "3"]}], "2"], "+", 
         RowBox[{"292", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["x", "4"]}], "+", 
         FractionBox[
          RowBox[{"8785", " ", 
           SuperscriptBox["x", "5"]}], "8"]}], ")"}]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "En"}], " ", "x"}], "+", 
           FractionBox[
            SuperscriptBox["x", "3"], "3"]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", 
           SuperscriptBox["x", "2"]}], "2"], "-", 
         RowBox[{"25", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["x", "3"]}], "-", 
         RowBox[{"146", " ", 
          SuperscriptBox["x", "4"]}], "+", 
         FractionBox[
          RowBox[{"1255", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["x", "5"]}], "2"]}], ")"}]}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4013588991976786`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VV", "[", "x", "]"}]], "Input"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "En"}], " ", "x"}], "+", 
     FractionBox[
      SuperscriptBox["x", "3"], "3"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.4013588499168158`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.401350828202157*^9, 3.401351017854864*^9}]
},
WindowSize->{676, 702},
WindowMargins->{{135, Automatic}, {Automatic, 0}},
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 20, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 138, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[731, 28, 797, 16, 31, "Input"],
Cell[1531, 46, 475, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2043, 60, 1071, 31, 72, "Input"],
Cell[3117, 93, 1655, 40, 72, "Output"]
}, Open  ]],
Cell[4787, 136, 260, 7, 31, "Input"],
Cell[5050, 145, 387, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[5462, 161, 1786, 30, 31, "Input"],
Cell[7251, 193, 961, 27, 47, "Output"]
}, Open  ]],
Cell[8227, 223, 133, 3, 31, "Input"],
Cell[8363, 228, 314, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[8702, 238, 2842, 54, 72, "Input"],
Cell[11547, 294, 1528, 43, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13112, 342, 1191, 35, 66, "Input"],
Cell[14306, 379, 1291, 37, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15634, 421, 442, 14, 31, "Input"],
Cell[16079, 437, 398, 12, 30, "Output"]
}, Open  ]],
Cell[16492, 452, 219, 5, 31, "Input"],
Cell[16714, 459, 232, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[16971, 469, 1125, 33, 92, "Input"],
Cell[18099, 504, 1587, 45, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19723, 554, 1292, 29, 52, "Input"],
Cell[21018, 585, 1935, 43, 192, "Output"]
}, Open  ]],
Cell[22968, 631, 1323, 42, 68, "Input"],
Cell[CellGroupData[{
Cell[24316, 677, 1309, 38, 52, "Input"],
Cell[25628, 717, 525, 15, 30, "Output"]
}, Open  ]],
Cell[26168, 735, 380, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[26573, 750, 985, 29, 52, "Input"],
Cell[27561, 781, 1074, 35, 46, "Output"]
}, Open  ]],
Cell[28650, 819, 1179, 37, 47, "Input"],
Cell[29832, 858, 638, 18, 47, "Input"],
Cell[CellGroupData[{
Cell[30495, 880, 168, 4, 31, "Input"],
Cell[30666, 886, 456, 9, 21, "Message"],
Cell[31125, 897, 456, 9, 21, "Message"],
Cell[31584, 908, 456, 9, 21, "Message"],
Cell[32043, 919, 489, 9, 21, "Message"],
Cell[32535, 930, 101, 1, 30, "Output"]
}, Open  ]],
Cell[32651, 934, 115, 2, 31, "Input"],
Cell[32769, 938, 6295, 153, 328, "Input"],
Cell[CellGroupData[{
Cell[39089, 1095, 459, 13, 31, "Input"],
Cell[39551, 1110, 1300, 20, 87, "Message"],
Cell[40854, 1132, 173, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41064, 1139, 399, 9, 31, "Input"],
Cell[41466, 1150, 2215, 56, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43718, 1211, 1672, 33, 52, "Input"],
Cell[45393, 1246, 87636, 1440, 211, "Output"]
}, Open  ]],
Cell[133044, 2689, 68, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[133137, 2694, 71, 1, 31, "Input"],
Cell[133211, 2697, 3398, 100, 180, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136646, 2802, 55, 1, 31, "Input"],
Cell[136704, 2805, 294, 9, 42, "Output"]
}, Open  ]],
Cell[137013, 2817, 90, 1, 31, "Input"]
}
]
*)
 ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4012671629526944`*^9, 3.4012671954394083`*^9}, {
  3.4012672572182417`*^9, 3.401267325596565*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.4012673103446336`*^9, 3.4012673114662466`*^9}, {
   3.4012673572821264`*^9, 3.4012673670661955`*^9}, {3.4012674159965534`*^9, 
   3.401267416136755*^9}, {3.4012677241196127`*^9, 3.4012677479739137`*^9}, 
   3.401267826516853*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"S", " ", 
       RowBox[{"a", "[", "3", "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"5", "-", "m", "+", "s"}], ")"}], " ", 
       RowBox[{"a", "[", "4", "]"}]}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "6"], " ", "En", " ", 
    SuperscriptBox["S", "3"], " ", 
    RowBox[{"b", "[", "0", "]"}]}], "-", 
   RowBox[{"b", "[", "1", "]"}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "En", " ", 
    SuperscriptBox["S", "2"], " ", 
    RowBox[{"b", "[", "1", "]"}]}], "+", 
   RowBox[{"S", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"b", "[", "0", "]"}]}], "+", 
      RowBox[{"En", " ", 
       RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
   RowBox[{"En", " ", 
    RowBox[{"b", "[", "3", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.401267357772832*^9, 3.401267367426714*^9}, 
   3.401267416527317*^9, {3.401267724420045*^9, 3.4012677483945184`*^9}, 
   3.40126782680727*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"g2", "=."}]], "Input",
 CellChangeTimes->{{3.401267306228715*^9, 3.401267306769493*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"g1", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "n2"}], "}"}]}], "]"}], "/", 
          RowBox[{"n2", "!"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "30"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n2", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"g2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.4010303737938223`*^9, 3.4010304350519075`*^9}, {
  3.4010304894401135`*^9, 3.4010305782578273`*^9}, {3.401031550085246*^9, 
  3.401031555513051*^9}, {3.4010344401409426`*^9, 3.4010344431052046`*^9}, {
  3.4010348029726686`*^9, 3.4010348073790045`*^9}, {3.401035115552136*^9, 
  3.4010351200486016`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.4010348082702866`*^9, 3.401034954700843*^9, {3.401035116833979*^9, 
   3.401035120639451*^9}, {3.4010354558714914`*^9, 3.401035465475301*^9}, 
   3.4010357169268703`*^9, 3.401037479451256*^9, 3.4010404816181602`*^9, 
   3.4010406313734975`*^9, 3.4012647956086206`*^9, 3.4012648646979666`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g2", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", "s"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4010406736042223`*^9, 3.401040721883645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4010407343716016`*^9, 3.4010407787153645`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "En"}], "-", "s", "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"b", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "En"}], "+", "s", "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"b", "[", "2", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4010406766886578`*^9, 3.401040734762163*^9}, {
  3.401040779005782*^9, 3.4010407863363233`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"b", "[", "0", "]"}], "=", "0"}]}]], "Input",
 CellChangeTimes->{{3.401040767629424*^9, 3.4010407847941055`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.401040771615155*^9, 3.4010407852046957`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["RungeKutta", "Title",
 CellChangeTimes->{{3.401261719936021*^9, 3.401261721318008*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "r_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "-", "1"}], ")"}], "/", "r"}], "-", 
        RowBox[{"I", "*", 
         RowBox[{"r", "^", "p"}]}]}], ",", 
       RowBox[{"I", "*", 
        RowBox[{"(", 
         RowBox[{"En", "-", 
          RowBox[{"r", "^", "p"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"I", "*", 
        RowBox[{"(", 
         RowBox[{"En", "-", 
          RowBox[{"r", "^", "p"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "m"}], "/", "r"}], "-", 
        RowBox[{"I", "*", 
         RowBox[{"r", "^", "p"}]}]}]}], "}"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", "r", "]"}], "//", "MatrixForm"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], "r"], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["r", "2"]}]}], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"En", "-", 
         SuperscriptBox["r", "2"]}], ")"}]}]},
     {
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"En", "-", 
         SuperscriptBox["r", "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["m", "r"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["r", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.401261723591277*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k0", "=", 
      RowBox[{"h", "*", 
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], ".", "u"}]}]}], ";", 
     RowBox[{"k1", "=", 
      RowBox[{"h", "*", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"k0", "/", "2"}]}], ")"}]}]}]}], ";", 
     RowBox[{"k2", "=", 
      RowBox[{"h", "*", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"r", "+", 
          RowBox[{"h", "/", "2"}]}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"k1", "/", "2"}]}], ")"}]}]}]}], ";", 
     RowBox[{"k3", "=", 
      RowBox[{"h", "*", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"r", "+", "h"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"u", "+", "k2"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u", "+=", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"(", 
        RowBox[{"k0", "+", 
         RowBox[{"2", "*", "k1"}], "+", 
         RowBox[{"2", "*", "k2"}], "+", "k3"}], ")"}]}]}], ";", 
     RowBox[{"r", "+=", "h"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"U", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "u"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "n", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4012616684820337`*^9, 3.4012617008285456`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"n", "+", "m"}], ")"}]}], "*", 
        RowBox[{"a", "[", "n", "]"}], "*", 
        RowBox[{"b", "[", "m", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4012656989475584`*^9, 3.4012657603658733`*^9}, {
  3.4012658606200323`*^9, 3.401265862452667*^9}, {3.4012659382716894`*^9, 
  3.401265938912611*^9}, {3.401265971128936*^9, 3.4012659732920465`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], " ", 
   RowBox[{"b", "[", "0", "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "5"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "6"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "7"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "8"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "9"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "20"], " ", 
   RowBox[{"a", "[", "10", "]"}], " ", 
   RowBox[{"b", "[", "10", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "10"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "0", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "11"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "12"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "13"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "14"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "15"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "5", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "16"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "6", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "17"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "7", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "18"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "8", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "8", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "19"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "10", "]"}], " ", 
      RowBox[{"b", "[", "9", "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "9", "]"}], " ", 
      RowBox[{"b", "[", "10", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.4012657298319683`*^9, 3.4012657608165216`*^9}, 
   3.401265862873272*^9, 3.4012659393632593`*^9, 3.4012659736625795`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "n"}], "*", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "l", "]"}], "*", 
             RowBox[{"b", "[", 
              RowBox[{"n", "-", "l"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", 
             RowBox[{"(", 
              RowBox[{"n", "+", "m"}], ")"}]}], "*", 
            RowBox[{"a", "[", "n", "]"}], "*", 
            RowBox[{"b", "[", "m", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ")"}], "/", 
     RowBox[{"x", "^", "10"}]}], ",", "x"}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.401265905414443*^9, 3.4012659436293936`*^9}, {
  3.4012659806326017`*^9, 3.40126608238892*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4012660829997983`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", "x", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.401266283417986*^9, 3.4012663118288383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"S", "*", "x"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.401266302205*^9, 3.401266313571344*^9}, {
  3.4012663460480433`*^9, 3.401266360639024*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["S", "n"], 
  RowBox[{"n", "!"}]]], "Output",
 CellChangeTimes->{{3.4012663494829826`*^9, 3.401266361139744*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", "*", 
      RowBox[{"Pi", "/", "2"}]}], "]"}], "/", "I"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.4012665936741123`*^9, 3.401266647221109*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.4012666271121936`*^9, 3.4012666474914975`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}], "==", 
    RowBox[{
     RowBox[{"A", "/", "x"}], "*", 
     RowBox[{"f", "[", "x", "]"}]}]}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.401270919284034*^9, 3.401270967813816*^9}, 
   3.4012711244891043`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["x", "A"], " ", 
     RowBox[{"C", "[", "1", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.4012709365989313`*^9, 3.4012710002104*^9}, 
   3.4012711253303137`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "=."}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4012709725406127`*^9, 3.401270976506315*^9}}],

Cell[BoxData[
 RowBox[{"r", "=."}]], "Input",
 CellChangeTimes->{{3.4012709812331123`*^9, 3.401270985118699*^9}}],

Cell[CellGroupData[{

Cell[BoxData["f"], "Input",
 CellChangeTimes->{3.4012709924392257`*^9}],

Cell[BoxData["f"], "Output",
 CellChangeTimes->{3.4012709926395135`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.401270994572293*^9, 3.4012709959342513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "^", "2"}], "*", 
    RowBox[{"r", "^", 
     RowBox[{"(", 
      RowBox[{"-", "2.99"}], ")"}]}]}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.4012736651323695`*^9, 3.4012736905989885`*^9}, {
  3.401273729054285*^9, 3.40127378095892*^9}, {3.401273819163856*^9, 
  3.4012738197146482`*^9}, {3.4012739459561744`*^9, 3.401273981947928*^9}}],

Cell[BoxData[
 RowBox[{"100.00000000000213`", " ", 
  SuperscriptBox["r", "0.009999999999999787`"]}]], "Output",
 CellChangeTimes->{
  3.4012736912799683`*^9, {3.401273730035696*^9, 3.4012737815898275`*^9}, 
   3.4012738199549932`*^9, {3.401273954608616*^9, 3.401273982198288*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4012889530753517`*^9, 3.401288960526066*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "gamma"}], "-", 
      RowBox[{"I", "*", "V"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "gamma"}], "-", 
      RowBox[{"I", "*", "V"}]}], ",", "0"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4012738156287727`*^9, 3.4012738159993057`*^9}, {
  3.401288938804832*^9, 3.4012889798438435`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "gamma"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "V"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "gamma"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "V"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.401288980244419*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", ".", "%"}]], "Input",
 CellChangeTimes->{{3.401288985271648*^9, 3.4012889872044272`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "gamma"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "V"}]}], ")"}], "2"], ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "gamma"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "V"}]}], ")"}], "2"]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.401288987394701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "gamma"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "V"}]}], ")"}], "2"], "]"}]], "Input",
 CellChangeTimes->{{3.4012890111789007`*^9, 3.4012890132518816`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["gamma", "2"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", "V"}], "-", 
  SuperscriptBox["V", "2"]}]], "Output",
 CellChangeTimes->{{3.4012890096166544`*^9, 3.401289013482213*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{757, 704},
WindowMargins->{{64, Automatic}, {32, Automatic}},
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 20, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 138, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[731, 28, 994, 20, 52, "Input"],
Cell[1728, 50, 633, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2398, 68, 1264, 34, 52, "Input"],
Cell[3665, 104, 1276, 35, 72, "Output"]
}, Open  ]],
Cell[4956, 142, 116, 2, 31, "Input"],
Cell[5075, 146, 558, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[5658, 164, 338, 9, 31, "Input"],
Cell[5999, 175, 806, 24, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6842, 204, 535, 16, 31, "Input"],
Cell[7380, 222, 1393, 38, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8810, 265, 775, 19, 31, "Input"],
Cell[9588, 286, 504, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10129, 303, 522, 12, 31, "Input"],
Cell[10654, 317, 1624, 44, 76, "Output"]
}, Open  ]],
Cell[12293, 364, 668, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[12986, 383, 2897, 43, 31, "Input"],
Cell[15886, 428, 1007, 21, 47, "Output"]
}, Open  ]],
Cell[16908, 452, 422, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[17355, 464, 1361, 27, 31, "Input"],
Cell[18719, 493, 3015, 83, 115, "Output"]
}, Open  ]],
Cell[21749, 579, 1408, 36, 68, "Input"],
Cell[23160, 617, 278, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[23463, 630, 3213, 61, 52, "Input"],
Cell[26679, 693, 4940, 147, 116, "Output"]
}, Open  ]],
Cell[31634, 843, 707, 23, 31, "Input"],
Cell[32344, 868, 1074, 33, 52, "Input"],
Cell[CellGroupData[{
Cell[33443, 905, 307, 5, 31, "Input"],
Cell[33753, 912, 1124, 34, 45, "Output"]
}, Open  ]],
Cell[34892, 949, 112, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[35029, 955, 986, 25, 52, "Input"],
Cell[36018, 982, 352, 5, 30, "Output"]
}, Open  ]],
Cell[36385, 990, 240, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[36650, 1001, 148, 3, 31, "Input"],
Cell[36801, 1006, 513, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37351, 1024, 221, 6, 31, "Input"],
Cell[37575, 1032, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37708, 1038, 93, 1, 83, "Title"],
Cell[CellGroupData[{
Cell[37826, 1043, 876, 30, 52, "Input"],
Cell[38705, 1075, 1205, 37, 74, "Output"]
}, Open  ]],
Cell[39925, 1115, 1566, 47, 112, "Input"],
Cell[CellGroupData[{
Cell[41516, 1166, 750, 20, 31, "Input"],
Cell[42269, 1188, 13952, 442, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56258, 1635, 1352, 38, 72, "Input"],
Cell[57613, 1675, 72, 1, 30, "Output"]
}, Open  ]],
Cell[57700, 1679, 202, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[57927, 1687, 330, 8, 33, "Input"],
Cell[58260, 1697, 158, 4, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58455, 1706, 246, 7, 31, "Input"],
Cell[58704, 1715, 100, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58841, 1721, 373, 11, 31, "Input"],
Cell[59217, 1734, 310, 9, 33, "Output"]
}, Open  ]],
Cell[59542, 1746, 149, 3, 52, "Input"],
Cell[59694, 1751, 113, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[59832, 1757, 71, 1, 31, "Input"],
Cell[59906, 1760, 72, 1, 30, "Output"]
}, Open  ]],
Cell[59993, 1764, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[60138, 1770, 427, 10, 31, "Input"],
Cell[60568, 1782, 281, 5, 30, "Output"]
}, Open  ]],
Cell[60864, 1790, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[61009, 1796, 449, 14, 31, "Input"],
Cell[61461, 1812, 398, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61896, 1831, 117, 2, 31, "Input"],
Cell[62016, 1835, 522, 19, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62575, 1859, 265, 7, 33, "Input"],
Cell[62843, 1868, 239, 5, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
